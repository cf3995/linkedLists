(undo-tree-save-format-version . 1)
"57a2047d6d054cf4d4c95242ecb965bb72a3d486"
[nil nil nil nil (25595 47747 962704 668000) 0 nil]
([nil nil ((1 . 20) (t . -1)) nil (25595 47747 962702 965000) 0 nil])
([nil nil ((20 . 22)) nil (25595 47747 962697 634000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t)) . -13) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (#("i" 0 1 (fontified t)) . -14) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) 15 (t 25595 47747 986715 800000)) nil (25595 47855 198098 348000) 0 nil])
([nil nil ((13 . 15)) nil (25595 47855 198059 243000) 0 nil])
([nil nil ((#("import " 0 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t)) . -1) (undo-tree-id48 . -7) (undo-tree-id49 . -7) (undo-tree-id50 . -7) 8 (t 25595 47855 227159 500000)) nil (25595 48422 754632 586000) 0 nil])
([nil nil ((1 . 6)) nil (25595 48422 754620 723000) 0 nil])
([nil nil ((18 . 26)) nil (25595 48422 754619 801000) 0 nil])
([nil nil ((25 . 41)) nil (25595 48422 754616 485000) 0 nil])
([nil nil ((42 . 43) (#(" " 0 1 (fontified nil)) . 41) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (42 . 43) (t 25595 48422 765095 300000)) nil (25595 48555 297236 258000) 0 nil])
([nil nil ((43 . 58)) nil (25595 48555 297234 806000) 0 nil])
([nil nil ((58 . 59)) nil (25595 48555 297234 335000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -42) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (#("d" 0 1 (fontified t)) . -43) (undo-tree-id58 . -1) (#("e" 0 1 (fontified t)) . -44) (undo-tree-id59 . -1) (#("f" 0 1 (face font-lock-keyword-face fontified t)) . -45) (undo-tree-id60 . -1) (#(" " 0 1 (fontified t)) . -46) (undo-tree-id61 . -1) (#("m" 0 1 (face font-lock-function-name-face fontified t)) . -47) (undo-tree-id62 . -1) (#("a" 0 1 (face font-lock-function-name-face fontified t)) . -48) (undo-tree-id63 . -1) (#("k" 0 1 (face font-lock-function-name-face fontified t)) . -49) (undo-tree-id64 . -1) (#("e" 0 1 (face font-lock-function-name-face fontified t)) . -50) (undo-tree-id65 . -1) (#("_" 0 1 (face font-lock-function-name-face fontified t)) . -51) (undo-tree-id66 . -1) (#("u" 0 1 (face font-lock-function-name-face fontified t)) . -52) (undo-tree-id67 . -1) (#("g" 0 1 (face font-lock-function-name-face fontified t)) . -53) (undo-tree-id68 . -1) (#("r" 0 1 (face font-lock-function-name-face fontified t)) . -54) (undo-tree-id69 . -1) (#("a" 0 1 (face font-lock-function-name-face fontified t)) . -55) (undo-tree-id70 . -1) (#("p" 0 1 (face font-lock-function-name-face fontified t)) . -56) (undo-tree-id71 . -1) (#("h" 0 1 (face font-lock-function-name-face fontified t)) . -57) (undo-tree-id72 . -1) (#("(" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . -58) (undo-tree-id73 . -1) 59) nil (25595 48555 297231 599000) 0 nil])
([nil nil ((42 . 43)) nil (25595 48555 297212 72000) 0 nil])
([nil nil ((43 . 47)) nil (25595 48555 297211 792000) 0 nil])
([nil nil ((47 . 64)) nil (25595 48555 297211 471000) 0 nil])
([nil nil ((64 . 65)) nil (25595 48555 297210 990000) 0 nil])
([nil nil ((65 . 66)) nil (25595 48555 297210 409000) 0 nil])
([nil nil ((66 . 80)) nil (25595 48555 297209 548000) 0 nil])
([nil nil ((80 . 86)) nil (25595 48555 297205 640000) 0 nil])
([nil nil ((#("'" 0 1 (face font-lock-string-face fontified t)) . -77) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) 78 (t 25595 48555 310915 900000)) nil (25595 48614 432988 402000) 0 nil])
([nil nil ((77 . 78)) nil (25595 48614 432985 997000) 0 nil])
([nil nil ((#("'" 0 1 (face font-lock-string-face fontified t)) . -79) (undo-tree-id99 . -1) 80) nil (25595 48614 432985 486000) 0 nil])
([nil nil ((79 . 80)) nil (25595 48614 432984 134000) 0 nil])
([nil nil ((#("'" 0 1 (face font-lock-string-face fontified t)) . -82) (undo-tree-id98 . -1) 83) nil (25595 48614 432983 483000) 0 nil])
([nil nil ((82 . 83)) nil (25595 48614 432936 734000) 0 nil])
([nil nil ((#("'" 0 1 (face font-lock-string-face fontified t)) . -84) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) 85) nil (25595 48614 432934 700000) 0 nil])
([nil nil ((84 . 85)) nil (25595 48614 432909 993000) 0 nil])
([nil nil ((#("\"" 0 1 (face font-lock-string-face fontified t)) . -77) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (#("A" 0 1 (face font-lock-string-face fontified t)) . -78) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (#("\"" 0 1 (face font-lock-string-face fontified t)) . -79) (undo-tree-id127 . -1) (undo-tree-id128 . -1) 80 (t 25595 48614 444476 100000)) nil (25595 48709 992227 355000) 0 nil])
([nil nil ((77 . 78)) nil (25595 48709 992177 340000) 0 nil])
([nil nil ((#("\"" 0 1 (face font-lock-string-face fontified t)) . -80) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (#("B" 0 1 (face font-lock-string-face fontified t)) . -81) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (#("\"" 0 1 (face font-lock-string-face fontified t)) . -82) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) 83) nil (25595 48709 992176 298000) 0 nil])
([nil nil ((#("1" 0 1 (fontified t)) . -77) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) 78) nil (25595 48709 992170 46000) 0 nil])
([nil nil ((77 . 78)) nil (25595 48709 992155 809000) 0 nil])
([nil nil ((80 . 81)) nil (25595 48709 992152 61000) 0 nil])
([nil nil ((78 . 79) (t 25595 48710 5166 800000)) nil (25595 48843 616671 81000) 0 nil])
([nil nil ((#("(" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . -78) (undo-tree-id176 . -1) 79) nil (25595 48843 616670 500000) 0 nil])
([nil nil ((77 . 79)) nil (25595 48843 616669 308000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . -78) (undo-tree-id175 . -1) 79) nil (25595 48843 616668 606000) 0 nil])
([nil nil ((79 . 82)) nil (25595 48843 616596 569000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . -80) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (#("0" 0 1 (fontified t)) . -81) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) 82) nil (25595 48843 616594 395000) 0 nil])
([nil nil ((82 . 83)) nil (25595 48843 616567 93000) 0 nil])
([nil nil ((84 . 85)) nil (25595 48843 616563 767000) 0 nil])
([nil nil ((79 . 81) (t 25595 48843 626501 100000)) nil (25595 48867 929716 476000) 0 nil])
([nil nil ((86 . 88)) nil (25595 48867 929712 699000) 0 nil])
([nil nil ((77 . 82) (t 25595 48867 936075 800000)) nil (25595 48976 37886 440000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -84) (undo-tree-id209 . -1) (#("0" 0 1 (fontified t)) . -85) (undo-tree-id210 . -1) 86) nil (25595 48976 37885 699000) 0 nil])
([nil nil ((87 . 92)) nil (25595 48976 37883 665000) 0 nil])
([nil nil ((#("1" 0 1 (fontified t)) . -95) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) 96) nil (25595 48976 37882 493000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -94) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) 95) nil (25595 48976 37875 680000) 0 nil])
([nil nil ((83 . 84) (t 25595 48976 53965 500000)) nil (25595 48992 741848 589000) 0 nil])
([nil nil ((85 . 86)) nil (25595 48992 741847 507000) 0 nil])
([nil nil ((95 . 96)) nil (25595 48992 741846 154000) 0 nil])
([nil nil ((97 . 98)) nil (25595 48992 741843 99000) 0 nil])
([nil nil ((85 . 87) (t 25595 48992 753775 200000)) nil (25595 49009 514722 350000) 0 nil])
([nil nil ((99 . 101)) nil (25595 49009 514717 441000) 0 nil])
([nil nil ((#("tuple" 0 5 (face font-lock-builtin-face fontified t)) . -77) (undo-tree-id401 . -5) (undo-tree-id402 . -5) (undo-tree-id403 . -5) (undo-tree-id404 . -5) (undo-tree-id405 . -5) (undo-tree-id406 . -5) (undo-tree-id407 . -5) (undo-tree-id408 . -5) (undo-tree-id409 . -5) (undo-tree-id410 . -5) (undo-tree-id411 . -5) (undo-tree-id412 . -5) (undo-tree-id413 . -5) (undo-tree-id414 . -5) (undo-tree-id415 . -5) (undo-tree-id416 . -5) (undo-tree-id417 . -5) (undo-tree-id418 . -5) (undo-tree-id419 . -5) (undo-tree-id420 . -5) (undo-tree-id421 . -5) (undo-tree-id422 . -5) (undo-tree-id423 . -5) (undo-tree-id424 . -5) (undo-tree-id425 . -5) (undo-tree-id426 . -5) (undo-tree-id427 . -5) (undo-tree-id428 . -5) (undo-tree-id429 . -5) (undo-tree-id430 . -5) (undo-tree-id431 . -5) (undo-tree-id432 . -5) (undo-tree-id433 . -5) (undo-tree-id434 . -5) (undo-tree-id435 . -5) (undo-tree-id436 . -5) (undo-tree-id437 . -5) (undo-tree-id438 . -5) (undo-tree-id439 . -5) (undo-tree-id440 . -5) 82 (t 25595 49009 524874 500000)) nil (25595 49181 781846 164000) 0 nil])
([nil nil ((77 . 80)) nil (25595 49181 781832 97000) 0 nil])
([nil nil ((#("[" 0 1 (face (rainbow-delimiters-depth-3-face) fontified t)) . -81) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (undo-tree-id395 . -1) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (undo-tree-id399 . -1) (undo-tree-id400 . -1) 82) nil (25595 49181 781830 755000) 0 nil])
([nil nil ((81 . 83)) nil (25595 49181 781814 393000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . -81) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (#("0" 0 1 (fontified t)) . -82) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (undo-tree-id360 . -1) 83) nil (25595 49181 781812 69000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -82) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (#("0" 0 1 (fontified t)) . -83) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (#("]" 0 1 (face (rainbow-delimiters-mismatched-face) fontified t)) . -84) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) 85) nil (25595 49181 781790 969000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -77) (undo-tree-id442 . -1) (undo-tree-id443 . -1) (undo-tree-id444 . -1) (#("t" 0 1 (fontified t)) . -78) (undo-tree-id445 . -1) (undo-tree-id446 . -1) (undo-tree-id447 . -1) (#("r" 0 1 (face font-lock-builtin-face fontified t)) . -79) (undo-tree-id448 . -1) (undo-tree-id449 . -1) (undo-tree-id450 . -1) 80 (t 25595 49181 782849 300000)) nil (25595 49327 310418 64000) 0 nil])
([nil nil ((77 . 81)) nil (25595 49327 310411 912000) 0 nil])
([nil nil ((#("tuple" 0 5 (face font-lock-builtin-face fontified t)) . -86) (undo-tree-id441 . -5) 91) nil (25595 49327 310410 429000) 0 nil])
([nil nil ((86 . 90)) nil (25595 49327 310396 683000) 0 nil])
([nil nil ((#("0)" 0 1 (fontified t) 1 2 (face (rainbow-delimiters-depth-2-face) fontified t)) . -82) (undo-tree-id470 . -2) (undo-tree-id471 . -2) 84 (t 25595 49327 319913 800000)) nil (25595 49442 750824 181000) 0 nil])
([nil nil ((#("repr(" 0 4 (face font-lock-builtin-face fontified t) 4 5 (face (rainbow-delimiters-depth-2-face) fontified t)) . -77) (undo-tree-id467 . -5) (undo-tree-id468 . -5) (undo-tree-id469 . -5) 82) nil (25595 49442 750822 808000) 0 nil])
([nil nil ((77 . 83)) nil (25595 49442 750821 305000) 0 nil])
([nil nil ((83 . 91)) nil (25595 49442 750820 914000) 0 nil])
([nil nil ((#("repr" 0 4 (face font-lock-builtin-face fontified t)) . -93) (undo-tree-id466 . -4) 97) nil (25595 49442 750819 893000) 0 nil])
([nil nil ((93 . 98)) nil (25595 49442 750818 650000) 0 nil])
([nil nil ((#("1]" 0 1 (fontified t) 1 2 (face (rainbow-delimiters-depth-3-face) fontified t)) . -102) (undo-tree-id465 . -2) 104) nil (25595 49442 750818 119000) 0 nil])
([nil nil ((#("1," 0 2 (fontified t)) . -100) (undo-tree-id462 . -2) (undo-tree-id463 . -2) (undo-tree-id464 . -2) 102) nil (25595 49442 750816 666000) 0 nil])
([nil nil ((#("[" 0 1 (face (rainbow-delimiters-depth-3-face) fontified t)) . -99) (undo-tree-id451 . -1) (undo-tree-id452 . -1) (undo-tree-id453 . -1) (undo-tree-id454 . -1) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (undo-tree-id458 . -1) (undo-tree-id459 . -1) (undo-tree-id460 . -1) (undo-tree-id461 . -1) 100) nil (25595 49442 750813 120000) 0 nil])
([nil nil ((99 . 106)) nil (25595 49442 750792 210000) 0 nil])
([nil nil ((#("from m269_ungraph import UndirectedGraph" 0 4 (face font-lock-keyword-face fontified t) 4 5 (fontified t) 5 18 (fontified t) 18 24 (face font-lock-keyword-face fontified t) 24 40 (fontified t)) . 1) (undo-tree-id690 . -10) (undo-tree-id691 . -12) (undo-tree-id692 . -12) (undo-tree-id693 . -12) (undo-tree-id694 . -40) (undo-tree-id695 . -40) (t 25595 49442 754671 300000)) nil (25595 50403 564557 353000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 1) (undo-tree-id688 . -1) (undo-tree-id689 . -1)) nil (25595 50403 564554 738000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 1)) nil (25595 50403 564553 295000) 0 nil])
([nil nil ((#("g = UndirectedGraph()" 0 1 (face font-lock-variable-name-face fontified t) 1 2 (fontified t) 2 3 (face font-lock-operator-face fontified t) 3 19 (fontified t) 19 20 (face (rainbow-delimiters-depth-1-face) fontified t) 20 21 (face (rainbow-delimiters-depth-1-face) fontified t)) . 1)) nil (25595 50403 564552 804000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 1)) nil (25595 50403 564552 243000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 1)) nil (25595 50403 564551 632000) 0 nil])
([nil nil ((#("g.add_edge(tuple(\"Hello\"), tuple(\"World\"))" 0 10 (fontified t) 10 11 (face (rainbow-delimiters-depth-1-face) fontified t) 11 16 (face font-lock-builtin-face fontified t) 16 17 (face (rainbow-delimiters-depth-2-face) fontified t) 17 24 (face font-lock-string-face fontified t) 24 25 (face (rainbow-delimiters-depth-2-face) fontified t) 25 27 (fontified t) 27 32 (face font-lock-builtin-face fontified t) 32 33 (face (rainbow-delimiters-depth-2-face) fontified t) 33 40 (face font-lock-string-face fontified t) 40 41 (face (rainbow-delimiters-depth-2-face) fontified t) 41 42 (face (rainbow-delimiters-depth-1-face) fontified t)) . 1) (undo-tree-id676 . -11) (undo-tree-id677 . -42) (undo-tree-id678 . -42) (undo-tree-id679 . -11) (undo-tree-id680 . -27) (undo-tree-id681 . -27) (undo-tree-id682 . -11) (undo-tree-id683 . -11) (undo-tree-id684 . -11) (undo-tree-id685 . -11) (undo-tree-id686 . -11) (undo-tree-id687 . -11)) nil (25595 50403 564550 840000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 1)) nil (25595 50403 564545 59000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 1) (undo-tree-id649 . -1) (undo-tree-id650 . -1) (undo-tree-id651 . -1) (undo-tree-id652 . -1) (undo-tree-id653 . -1) (undo-tree-id654 . -1) (undo-tree-id655 . -1) (undo-tree-id656 . -1) (undo-tree-id657 . -1) (undo-tree-id658 . -1) (undo-tree-id659 . -1) (undo-tree-id660 . -1) (undo-tree-id661 . -1) (undo-tree-id662 . -1) (undo-tree-id663 . -1) (undo-tree-id664 . -1) (undo-tree-id665 . -1) (undo-tree-id666 . -1) (undo-tree-id667 . -1) (undo-tree-id668 . -1) (undo-tree-id669 . -1) (undo-tree-id670 . -1) (undo-tree-id671 . -1) (undo-tree-id672 . -1) (undo-tree-id673 . -1) (undo-tree-id674 . -1) (undo-tree-id675 . -1)) nil (25595 50403 564543 827000) 0 nil])
([nil nil ((1 . 7)) nil (25595 50403 564532 425000) 0 nil])
([nil nil ((7 . 13)) nil (25595 50403 564532 65000) 0 nil])
([nil nil ((13 . 18)) nil (25595 50403 564531 794000) 0 nil])
([nil nil ((18 . 21)) nil (25595 50403 564531 403000) 0 nil])
([nil nil ((21 . 42)) nil (25595 50403 564531 3000) 0 nil])
([nil nil ((42 . 44)) nil (25595 50403 564530 662000) 0 nil])
([nil nil ((46 . 50) (#("    " 0 4 (fontified nil)) . 45) (undo-tree-id648 . -4) (44 . 50)) nil (25595 50403 564530 271000) 0 nil])
([nil nil ((50 . 58)) nil (25595 50403 564529 360000) 0 nil])
([nil nil ((54 . 56)) nil (25595 50403 564529 89000) 0 nil])
([nil nil ((60 . 64)) nil (25595 50403 564528 718000) 0 nil])
([nil nil ((64 . 69)) nil (25595 50403 564528 428000) 0 nil])
([nil nil ((69 . 78)) nil (25595 50403 564528 37000) 0 nil])
([nil nil ((78 . 83)) nil (25595 50403 564527 767000) 0 nil])
([nil nil ((83 . 99)) nil (25595 50403 564527 165000) 0 nil])
([nil nil ((99 . 108)) nil (25595 50403 564526 705000) 0 nil])
([nil nil ((108 . 112)) nil (25595 50403 564525 943000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t)) . -111) (undo-tree-id647 . -1) 112) nil (25595 50403 564525 292000) 0 nil])
([nil nil ((111 . 123)) nil (25595 50403 564524 550000) 0 nil])
([nil nil ((123 . 129)) nil (25595 50403 564524 200000) 0 nil])
([nil nil ((131 . 139) (#("        " 0 8 (fontified nil)) . 130) (undo-tree-id646 . -8) (129 . 139)) nil (25595 50403 564523 679000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -135) (undo-tree-id645 . -4) 139) nil (25595 50403 564522 837000) 0 nil])
([nil nil ((135 . 150)) nil (25595 50403 564522 96000) 0 nil])
([nil nil ((150 . 155)) nil (25595 50403 564521 805000) 0 nil])
([nil nil ((155 . 159)) nil (25595 50403 564521 515000) 0 nil])
([nil nil ((159 . 165)) nil (25595 50403 564521 234000) 0 nil])
([nil nil ((165 . 174)) nil (25595 50403 564520 893000) 0 nil])
([nil nil ((174 . 177)) nil (25595 50403 564520 483000) 0 nil])
([nil nil ((154 . 162)) nil (25595 50403 564520 122000) 0 nil])
([nil nil ((185 . 196)) nil (25595 50403 564519 851000) 0 nil])
([nil nil ((196 . 204)) nil (25595 50403 564519 501000) 0 nil])
([nil nil ((204 . 217)) nil (25595 50403 564519 220000) 0 nil])
([nil nil ((217 . 229)) nil (25595 50403 564518 940000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t)) . -228) (undo-tree-id644 . -1) 229) nil (25595 50403 564518 569000) 0 nil])
([nil nil ((228 . 237)) nil (25595 50403 564517 798000) 0 nil])
([nil nil ((237 . 242)) nil (25595 50403 564517 457000) 0 nil])
([nil nil ((242 . 250) (#(" " 0 1 (fontified nil)) . 241) (undo-tree-id643 . -1) (242 . 243)) nil (25595 50403 564516 776000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -246) (undo-tree-id642 . -4) 250) nil (25595 50403 564515 724000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -242) (undo-tree-id641 . -4) 246) nil (25595 50403 564514 892000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -241) (undo-tree-id640 . -1) 242) nil (25595 50403 564514 10000) 0 nil])
([nil nil ((241 . 242)) nil (25595 50403 564513 169000) 0 nil])
([nil nil ((242 . 255)) nil (25595 50403 564512 818000) 0 nil])
([nil nil ((255 . 264)) nil (25595 50403 564512 548000) 0 nil])
([nil nil ((264 . 275)) nil (25595 50403 564512 197000) 0 nil])
([nil nil ((275 . 288)) nil (25595 50403 564511 816000) 0 nil])
([nil nil ((288 . 298)) nil (25595 50403 564511 506000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -295) (undo-tree-id637 . -1) (#("h" 0 1 (fontified t)) . -296) (undo-tree-id638 . -1) (#("i" 0 1 (fontified t)) . -297) (undo-tree-id639 . -1) 298) nil (25595 50403 564510 644000) 0 nil])
([nil nil ((295 . 299)) nil (25595 50403 564509 41000) 0 nil])
([nil nil ((192 . 196)) nil (25595 50403 564508 730000) 0 nil])
([nil nil ((#("            return self" 0 12 (fontified t) 12 18 (face font-lock-keyword-face fontified t) 18 19 (fontified t) 19 23 (face font-lock-keyword-face fontified t)) . 209)) nil (25595 50403 564508 289000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 209)) nil (25595 50403 564508 9000) 0 nil])
([nil nil ((#("        else:" 0 8 (fontified t) 8 12 (face font-lock-keyword-face fontified t) 12 13 (fontified t)) . 209)) nil (25595 50403 564507 618000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 209)) nil (25595 50403 564507 187000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -250) 265) nil (25595 50403 564506 747000) 0 nil])
([nil nil ((263 . 267) (#("    " 0 4 (fontified nil)) . 262) (undo-tree-id636 . -4) (261 . 267)) nil (25595 50403 564506 155000) 0 nil])
([nil nil ((267 . 288)) nil (25595 50403 564505 63000) 0 nil])
([nil nil ((288 . 291)) nil (25595 50403 564504 763000) 0 nil])
([nil nil ((291 . 297)) nil (25595 50403 564504 372000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -157) (undo-tree-id631 . -1) (#("r" 0 1 (fontified t)) . -158) (undo-tree-id632 . -1) (#("t" 0 1 (fontified t)) . -159) (undo-tree-id633 . -1) (#("e" 0 1 (fontified t)) . -160) (undo-tree-id634 . -1) (#("x" 0 1 (fontified t)) . -161) (undo-tree-id635 . -1) 162) nil (25595 50403 564503 350000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -181) (undo-tree-id626 . -1) (#("r" 0 1 (fontified t)) . -182) (undo-tree-id627 . -1) (#("t" 0 1 (fontified t)) . -183) (undo-tree-id628 . -1) (#("e" 0 1 (fontified t)) . -184) (undo-tree-id629 . -1) (#("x" 0 1 (fontified t)) . -185) (undo-tree-id630 . -1) 186) nil (25595 50403 564500 84000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -225) (undo-tree-id621 . -1) (#("r" 0 1 (fontified t)) . -226) (undo-tree-id622 . -1) (#("t" 0 1 (fontified t)) . -227) (undo-tree-id623 . -1) (#("e" 0 1 (fontified t)) . -228) (undo-tree-id624 . -1) (#("x" 0 1 (fontified t)) . -229) (undo-tree-id625 . -1) 230) nil (25595 50403 564497 218000) 0 nil])
([nil nil ((#("start" 0 5 (fontified t)) . -271) (undo-tree-id620 . -5) 276) nil (25595 50403 564494 664000) 0 nil])
([nil nil ((271 . 273)) nil (25595 50403 564493 832000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -275) (undo-tree-id617 . -1) (#("n" 0 1 (fontified t)) . -276) (undo-tree-id618 . -1) (#("d" 0 1 (fontified t)) . -277) (undo-tree-id619 . -1) 278) nil (25595 50403 564493 30000) 0 nil])
([nil nil ((275 . 277)) nil (25595 50403 564491 387000) 0 nil])
([nil nil ((278 . 279)) nil (25595 50403 564491 17000) 0 nil])
([nil nil ((#(":" 0 1 (fontified t)) . -278) (undo-tree-id616 . -1) 279) nil (25595 50403 564490 576000) 0 nil])
([nil nil ((278 . 288)) nil (25595 50403 564489 614000) 0 nil])
([nil nil ((67 . 80)) nil (25595 50403 564489 323000) 0 nil])
([nil nil ((80 . 87)) nil (25595 50403 564489 3000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -114) (undo-tree-id611 . -1) (#("e" 0 1 (fontified t)) . -115) (undo-tree-id612 . -1) (#("t" 0 1 (face font-lock-builtin-face fontified t)) . -116) (undo-tree-id613 . -1) (#("(" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . -117) (undo-tree-id614 . -1) (#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . -118) (undo-tree-id615 . -1) 119) nil (25595 50403 564487 931000) 0 nil])
([nil nil ((114 . 116)) nil (25595 50403 564484 735000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -141) (undo-tree-id606 . -1) (#("e" 0 1 (fontified t)) . -142) (undo-tree-id607 . -1) (#("t" 0 1 (face font-lock-builtin-face fontified t)) . -143) (undo-tree-id608 . -1) (#("(" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . -144) (undo-tree-id609 . -1) (#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . -145) (undo-tree-id610 . -1) 146) nil (25595 50403 564484 73000) 0 nil])
([nil nil ((141 . 143)) nil (25595 50403 564481 358000) 0 nil])
([nil nil ((225 . 238)) nil (25595 50403 564480 957000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -247) (undo-tree-id603 . -1) (#("d" 0 1 (fontified t)) . -248) (undo-tree-id604 . -1) (#("d" 0 1 (fontified t)) . -249) (undo-tree-id605 . -1) 250) nil (25595 50403 564480 6000) 0 nil])
([nil nil ((247 . 257)) nil (25595 50403 564478 483000) 0 nil])
([nil nil ((260 . 268)) nil (25595 50403 564478 92000) 0 nil])
([nil nil ((#("v" 0 1 (fontified t)) . -313) (undo-tree-id597 . -1) (#("1" 0 1 (fontified t)) . -314) (undo-tree-id598 . -1) (#("," 0 1 (fontified t)) . -315) (undo-tree-id599 . -1) (#(" " 0 1 (fontified t)) . -316) (undo-tree-id600 . -1) (#("v" 0 1 (fontified t)) . -317) (undo-tree-id601 . -1) (#("2" 0 1 (fontified t)) . -318) (undo-tree-id602 . -1) 319) nil (25595 50403 564477 0) 0 nil])
([nil nil ((313 . 314)) nil (25595 50403 564473 814000) 0 nil])
([nil nil ((325 . 334)) nil (25595 50403 564473 463000) 0 nil])
([nil nil ((nil rear-nonsticky nil 430 . 431) (nil fontified nil 427 . 431) (nil fontified nil 426 . 427) (nil fontified nil 420 . 426) (nil fontified nil 412 . 420) (nil fontified nil 411 . 412) (nil fontified nil 410 . 411) (nil fontified nil 403 . 410) (nil fontified nil 402 . 403) (nil fontified nil 401 . 402) (nil fontified nil 400 . 401) (nil fontified nil 396 . 400) (nil fontified nil 395 . 396) (nil fontified nil 394 . 395) (nil fontified nil 381 . 394) (nil fontified nil 380 . 381) (nil fontified nil 374 . 380) (nil fontified nil 368 . 374) (nil fontified nil 356 . 368) (nil fontified nil 345 . 356) (nil fontified nil 343 . 345) (nil fontified nil 342 . 343) (nil fontified nil 339 . 342) (nil fontified nil 336 . 339) (nil fontified nil 334 . 336) (334 . 431)) nil (25595 50403 564472 642000) 0 nil])
([nil nil ((#("v" 0 1 (fontified t)) . -337) (undo-tree-id596 . -1) 338) nil (25595 50403 564470 347000) 0 nil])
([nil nil ((337 . 338)) nil (25595 50403 564469 486000) 0 nil])
([nil nil ((#("vertices" 0 8 (fontified t)) . -346) (undo-tree-id595 . -8) 354) nil (25595 50403 564469 15000) 0 nil])
([nil nil ((346 . 351)) nil (25595 50403 564468 203000) 0 nil])
([nil nil ((378 . 383)) nil (25595 50403 564467 843000) 0 nil])
([nil nil ((383 . 393)) nil (25595 50403 564467 342000) 0 nil])
([nil nil ((#("vertices" 0 8 (fontified t)) . 393) (undo-tree-id594 . -8)) nil (25595 50403 564466 740000) 0 nil])
([nil nil ((#("v" 0 1 (fontified t)) . -405) (undo-tree-id581 . -1) (undo-tree-id582 . -1) (undo-tree-id583 . -1) (undo-tree-id584 . -1) (undo-tree-id585 . -1) (undo-tree-id586 . -1) (undo-tree-id587 . -1) (undo-tree-id588 . -1) (undo-tree-id589 . -1) (undo-tree-id590 . -1) (undo-tree-id591 . -1) (undo-tree-id592 . -1) (undo-tree-id593 . -1) 406) nil (25595 50403 564464 867000) 0 nil])
([nil nil ((405 . 406)) nil (25595 50403 564458 875000) 0 nil])
([nil nil ((#("edges" 0 5 (fontified t)) . -409) (undo-tree-id558 . -5) (undo-tree-id559 . -5) (undo-tree-id560 . -5) (undo-tree-id561 . -5) (undo-tree-id562 . -5) (undo-tree-id563 . -5) (undo-tree-id564 . -5) (undo-tree-id565 . -5) (undo-tree-id566 . -5) (undo-tree-id567 . -5) (undo-tree-id568 . -5) (undo-tree-id569 . -5) (undo-tree-id570 . -5) (undo-tree-id571 . -5) (undo-tree-id572 . -5) (undo-tree-id573 . -5) (undo-tree-id574 . -5) (undo-tree-id575 . -5) (undo-tree-id576 . -5) (undo-tree-id577 . -5) (undo-tree-id578 . -5) (undo-tree-id579 . -5) (undo-tree-id580 . -5) 414) nil (25595 50403 564457 703000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -407) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (undo-tree-id474 . -1) (undo-tree-id475 . -1) (undo-tree-id476 . -1) (undo-tree-id477 . -1) (undo-tree-id478 . -1) (undo-tree-id479 . -1) (undo-tree-id480 . -1) (undo-tree-id481 . -1) (undo-tree-id482 . -1) (undo-tree-id483 . -1) (undo-tree-id484 . -1) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (undo-tree-id487 . -1) (undo-tree-id488 . -1) (undo-tree-id489 . -1) (undo-tree-id490 . -1) (undo-tree-id491 . -1) (undo-tree-id492 . -1) (undo-tree-id493 . -1) (undo-tree-id494 . -1) (undo-tree-id495 . -1) (undo-tree-id496 . -1) (undo-tree-id497 . -1) (undo-tree-id498 . -1) (undo-tree-id499 . -1) (undo-tree-id500 . -1) (undo-tree-id501 . -1) (undo-tree-id502 . -1) (undo-tree-id503 . -1) (undo-tree-id504 . -1) (undo-tree-id505 . -1) (undo-tree-id506 . -1) (undo-tree-id507 . -1) (undo-tree-id508 . -1) (undo-tree-id509 . -1) (undo-tree-id510 . -1) (undo-tree-id511 . -1) (undo-tree-id512 . -1) (undo-tree-id513 . -1) (undo-tree-id514 . -1) (undo-tree-id515 . -1) (undo-tree-id516 . -1) (undo-tree-id517 . -1) (undo-tree-id518 . -1) (#(" " 0 1 (fontified t)) . -408) (undo-tree-id519 . -1) (undo-tree-id520 . -1) (undo-tree-id521 . -1) (undo-tree-id522 . -1) (undo-tree-id523 . -1) (undo-tree-id524 . -1) (undo-tree-id525 . -1) (undo-tree-id526 . -1) (undo-tree-id527 . -1) (undo-tree-id528 . -1) (undo-tree-id529 . -1) (undo-tree-id530 . -1) (undo-tree-id531 . -1) (undo-tree-id532 . -1) (undo-tree-id533 . -1) (undo-tree-id534 . -1) (undo-tree-id535 . -1) (undo-tree-id536 . -1) (undo-tree-id537 . -1) (undo-tree-id538 . -1) (undo-tree-id539 . -1) (undo-tree-id540 . -1) (undo-tree-id541 . -1) (undo-tree-id542 . -1) (undo-tree-id543 . -1) (undo-tree-id544 . -1) (undo-tree-id545 . -1) (undo-tree-id546 . -1) (undo-tree-id547 . -1) (undo-tree-id548 . -1) (undo-tree-id549 . -1) (undo-tree-id550 . -1) (undo-tree-id551 . -1) (undo-tree-id552 . -1) (undo-tree-id553 . -1) (undo-tree-id554 . -1) (undo-tree-id555 . -1) (undo-tree-id556 . -1) (undo-tree-id557 . -1) 409) nil (25595 50403 564444 157000) 0 nil])
([nil nil ((428 . 429) 407) nil (25595 50403 564392 990000) 0 nil])
([nil nil ((268 . 277) (t 25595 50403 572508 900000)) nil (25595 50428 46917 798000) 0 nil])
([nil nil ((277 . 282)) nil (25595 50428 46916 907000) 0 nil])
([nil nil ((291 . 295) 283) nil (25595 50428 46915 985000) 0 nil])
([nil nil ((435 . 440)) nil (25595 50428 46914 853000) 0 nil])
([nil nil ((440 . 453)) nil (25595 50428 46911 416000) 0 nil])
([nil nil ((#("undirected" 0 10 (face font-lock-doc-face fontified t)) . -24) (undo-tree-id700 . -10) 34 (t 25595 50428 57730 500000)) nil (25595 50449 959182 450000) 0 nil])
([nil nil ((#("n" 0 1 (face font-lock-doc-face fontified t)) . -22) (undo-tree-id698 . -1) (#(" " 0 1 (face font-lock-doc-face fontified t)) . -23) (undo-tree-id699 . -1) 24) nil (25595 50449 959180 437000) 0 nil])
([nil nil ((22 . 38)) nil (25595 50449 959178 92000) 0 nil])
([nil nil ((#("purpose " 0 8 (face font-lock-doc-face fontified t)) . -31) (undo-tree-id697 . -8) 39) nil (25595 50449 959176 299000) 0 nil])
([nil nil ((#("general " 0 8 (face font-lock-doc-face fontified t)) . -23) (undo-tree-id696 . -8) 31) nil (25595 50449 959171 19000) 0 nil])
([nil nil ((#("Graph" 0 5 (fontified t)) . -164) (undo-tree-id715 . -5) (undo-tree-id716 . -5) 169 (t 25595 50449 973377 900000)) nil (25595 50520 953026 21000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -160) (undo-tree-id707 . -1) (undo-tree-id708 . -1) (#("-" 0 1 (face font-lock-operator-face fontified t)) . -161) (undo-tree-id709 . -1) (undo-tree-id710 . -1) (#(">" 0 1 (face font-lock-operator-face fontified t)) . -162) (undo-tree-id711 . -1) (undo-tree-id712 . -1) (#(" " 0 1 (fontified t)) . -163) (undo-tree-id713 . -1) (undo-tree-id714 . -1) 164) nil (25595 50520 953023 716000) 0 nil])
([nil nil ((#("Graph" 0 5 (fontified t)) . -316) (undo-tree-id706 . -5) 321) nil (25595 50520 953395 343000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -312) (undo-tree-id717 . -1) (undo-tree-id718 . -1) (undo-tree-id719 . -1) (undo-tree-id720 . -1) (undo-tree-id721 . -1) (undo-tree-id722 . -1) (undo-tree-id723 . -1) (undo-tree-id724 . -1) (undo-tree-id725 . -1) (undo-tree-id726 . -1) (undo-tree-id727 . -1) (undo-tree-id728 . -1) (undo-tree-id729 . -1) (undo-tree-id730 . -1) (undo-tree-id731 . -1) (undo-tree-id732 . -1) (undo-tree-id733 . -1) (undo-tree-id734 . -1) (undo-tree-id735 . -1) (undo-tree-id736 . -1) (undo-tree-id737 . -1) (undo-tree-id738 . -1) (undo-tree-id739 . -1) (undo-tree-id740 . -1) (undo-tree-id741 . -1) (undo-tree-id742 . -1) (undo-tree-id743 . -1) (undo-tree-id744 . -1) (undo-tree-id745 . -1) (undo-tree-id746 . -1) (undo-tree-id747 . -1) (undo-tree-id748 . -1) (undo-tree-id749 . -1) (undo-tree-id750 . -1) (undo-tree-id751 . -1) (undo-tree-id752 . -1) (undo-tree-id753 . -1) (undo-tree-id754 . -1) (undo-tree-id755 . -1) (undo-tree-id756 . -1) (undo-tree-id757 . -1) (undo-tree-id758 . -1) (undo-tree-id759 . -1) (undo-tree-id760 . -1) (undo-tree-id761 . -1) (undo-tree-id762 . -1) (undo-tree-id763 . -1) (#("-" 0 1 (face font-lock-operator-face fontified t)) . -313) (undo-tree-id764 . -1) (undo-tree-id765 . -1) (undo-tree-id766 . -1) (undo-tree-id767 . -1) (undo-tree-id768 . -1) (undo-tree-id769 . -1) (undo-tree-id770 . -1) (undo-tree-id771 . -1) (undo-tree-id772 . -1) (undo-tree-id773 . -1) (undo-tree-id774 . -1) (undo-tree-id775 . -1) (undo-tree-id776 . -1) (undo-tree-id777 . -1) (undo-tree-id778 . -1) (undo-tree-id779 . -1) (undo-tree-id780 . -1) (undo-tree-id781 . -1) (undo-tree-id782 . -1) (undo-tree-id783 . -1) (undo-tree-id784 . -1) (undo-tree-id785 . -1) (undo-tree-id786 . -1) (undo-tree-id787 . -1) (undo-tree-id788 . -1) (undo-tree-id789 . -1) (undo-tree-id790 . -1) (undo-tree-id791 . -1) (undo-tree-id792 . -1) (undo-tree-id793 . -1) (undo-tree-id794 . -1) (undo-tree-id795 . -1) (undo-tree-id796 . -1) (undo-tree-id797 . -1) (undo-tree-id798 . -1) (undo-tree-id799 . -1) (undo-tree-id800 . -1) (undo-tree-id801 . -1) (undo-tree-id802 . -1) (#(">" 0 1 (face font-lock-operator-face fontified t)) . -314) (undo-tree-id803 . -1) (undo-tree-id804 . -1) (undo-tree-id805 . -1) (undo-tree-id806 . -1) (undo-tree-id807 . -1) (undo-tree-id808 . -1) (undo-tree-id809 . -1) (undo-tree-id810 . -1) (undo-tree-id811 . -1) (undo-tree-id812 . -1) (undo-tree-id813 . -1) (undo-tree-id814 . -1) (undo-tree-id815 . -1) (undo-tree-id816 . -1) (undo-tree-id817 . -1) (undo-tree-id818 . -1) (undo-tree-id819 . -1) (undo-tree-id820 . -1) (undo-tree-id821 . -1) (undo-tree-id822 . -1) (undo-tree-id823 . -1) (undo-tree-id824 . -1) (undo-tree-id825 . -1) (undo-tree-id826 . -1) (undo-tree-id827 . -1) (undo-tree-id828 . -1) (undo-tree-id829 . -1) (undo-tree-id830 . -1) (undo-tree-id831 . -1) (undo-tree-id832 . -1) (undo-tree-id833 . -1) (#(" " 0 1 (fontified t)) . -315) (undo-tree-id834 . -1) (undo-tree-id835 . -1) (undo-tree-id836 . -1) (undo-tree-id837 . -1) (undo-tree-id838 . -1) (undo-tree-id839 . -1) (undo-tree-id840 . -1) (undo-tree-id841 . -1) (undo-tree-id842 . -1) (undo-tree-id843 . -1) (undo-tree-id844 . -1) (undo-tree-id845 . -1) (undo-tree-id846 . -1) (undo-tree-id847 . -1) (undo-tree-id848 . -1) (undo-tree-id849 . -1) (undo-tree-id850 . -1) (undo-tree-id851 . -1) (undo-tree-id852 . -1) (undo-tree-id853 . -1) (undo-tree-id854 . -1) (undo-tree-id855 . -1) (undo-tree-id856 . -1) 316) nil (25595 50523 106364 314000) 0 nil] [nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . -311) (undo-tree-id701 . -1) (#(" " 0 1 (fontified t)) . -312) (undo-tree-id702 . -1) (#("-" 0 1 (face font-lock-operator-face fontified t)) . -313) (undo-tree-id703 . -1) (#(">" 0 1 (face font-lock-operator-face fontified t)) . -314) (undo-tree-id704 . -1) (#(" " 0 1 (fontified t)) . -315) (undo-tree-id705 . -1) 316) ((311 . 316)) (25595 50520 953015 60000) 0 nil])
([nil nil ((33 . 38) (t 25595 50523 119835 300000)) nil (25595 50653 185597 374000) 0 nil])
nil
([nil nil ((38 . 54)) nil (25595 50653 185596 652000) 0 nil])
([nil nil ((54 . 59)) nil (25595 50653 185596 261000) 0 nil])
([nil nil ((59 . 61)) nil (25595 50653 185595 821000) 0 nil])
([nil nil ((61 . 72)) nil (25595 50653 185594 809000) 0 nil])
([nil nil ((72 . 77)) nil (25595 50653 185591 112000) 0 nil])
([nil nil ((#("    vertices = set()" 0 4 (fontified t) 4 12 (face font-lock-variable-name-face fontified t) 12 13 (fontified t) 13 14 (face font-lock-operator-face fontified t) 14 15 (fontified t) 15 18 (face font-lock-builtin-face fontified t) 18 19 (face (rainbow-delimiters-depth-1-face) fontified t) 19 20 (face (rainbow-delimiters-depth-1-face) fontified t)) . 34) (t 25595 50653 195961 600000)) nil (25595 50694 887491 544000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 34)) nil (25595 50694 887490 873000) 0 nil])
([nil nil ((#("    edges = set()" 0 4 (fontified t) 4 9 (face font-lock-variable-name-face fontified t) 9 10 (fontified t) 10 11 (face font-lock-operator-face fontified t) 11 12 (fontified t) 12 15 (face font-lock-builtin-face fontified t) 15 16 (face (rainbow-delimiters-depth-1-face) fontified t) 16 17 (face (rainbow-delimiters-depth-1-face) fontified t)) . 34)) nil (25595 50694 887490 402000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 34)) nil (25595 50694 887489 891000) 0 nil])
([nil nil ((#("    
" 0 4 (fontified t) 4 5 (fontified t)) . 34)) nil (25595 50694 887488 919000) 0 nil])
([nil nil ((182 . 187)) nil (25595 50694 887488 559000) 0 nil])
([nil nil ((222 . 227)) nil (25595 50694 887487 827000) 0 nil])
([nil nil ((251 . 256)) nil (25595 50694 887486 835000) 0 nil])
([nil nil ((349 . 354)) nil (25595 50694 887485 653000) 0 nil])
([nil nil ((386 . 391)) nil (25595 50694 887484 341000) 0 nil])
([nil nil ((401 . 406)) nil (25595 50694 887479 622000) 0 nil])
([nil nil ((160 . 168) (t 25595 50694 906596 300000)) nil (25595 50783 38145 81000) 0 nil])
([nil nil ((#("Graph(" 0 5 (fontified t) 5 6 (face (rainbow-delimiters-depth-1-face) fontified t)) . -224) (undo-tree-id1258 . -6) 230) nil (25595 50783 38144 179000) 0 nil])
([nil nil ((#("return " 0 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t)) . -217) (undo-tree-id1257 . -7) 224) nil (25595 50783 38141 625000) 0 nil])
([nil nil ((#("copy()" 0 4 (fontified t) 4 5 (face (rainbow-delimiters-depth-1-face) fontified t) 5 6 (face (rainbow-delimiters-depth-1-face) fontified t)) . -231) (undo-tree-id1256 . -6) 237) nil (25595 50783 38140 222000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -230) (undo-tree-id1255 . -1) 231) nil (25595 50783 38138 699000) 0 nil])
([nil nil ((#("edges)" 0 5 (fontified t) 5 6 (face (rainbow-delimiters-unmatched-face) fontified t)) . -244) (undo-tree-id1254 . -6) 250) nil (25595 50783 38137 136000) 0 nil])
([nil nil ((#("self." 0 4 (face font-lock-keyword-face fontified t) 4 5 (fontified t)) . -239) (undo-tree-id1253 . -5) 244) nil (25595 50783 38135 673000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -237) (undo-tree-id1251 . -1) (#(" " 0 1 (fontified t)) . -238) (undo-tree-id1252 . -1) 239) nil (25595 50783 38134 90000) 0 nil])
([nil nil ((#("        else:" 0 8 (fontified t) 8 12 (face font-lock-keyword-face fontified t) 12 13 (fontified t)) . 238)) nil (25595 50783 38131 706000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 238)) nil (25595 50783 38130 734000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -246) (undo-tree-id1250 . -4) 250) nil (25595 50783 38129 952000) 0 nil])
([nil nil ((#("vertices, " 0 10 (fontified t)) . -348) (undo-tree-id1229 . -8) (undo-tree-id1230 . -8) (undo-tree-id1231 . -8) (undo-tree-id1232 . -8) (undo-tree-id1233 . -8) (undo-tree-id1234 . -8) (undo-tree-id1235 . -8) (undo-tree-id1236 . -8) (undo-tree-id1237 . -10) (undo-tree-id1238 . -10) (undo-tree-id1239 . -10) (undo-tree-id1240 . -10) (undo-tree-id1241 . -10) (undo-tree-id1242 . -10) (undo-tree-id1243 . -10) (undo-tree-id1244 . -10) (undo-tree-id1245 . -10) (undo-tree-id1246 . -10) (undo-tree-id1247 . -10) (undo-tree-id1248 . -10) (undo-tree-id1249 . -10) 358) nil (25595 50783 38128 119000) 0 nil])
([nil nil ((#("self." 0 4 (face font-lock-keyword-face fontified t) 4 5 (fontified t)) . -343) (undo-tree-id1187 . -4) (undo-tree-id1188 . -4) (undo-tree-id1189 . -4) (undo-tree-id1190 . -4) (undo-tree-id1191 . -4) (undo-tree-id1192 . -4) (undo-tree-id1193 . -4) (undo-tree-id1194 . -4) (undo-tree-id1195 . -4) (undo-tree-id1196 . -4) (undo-tree-id1197 . -4) (undo-tree-id1198 . -4) (undo-tree-id1199 . -5) (undo-tree-id1200 . -4) (undo-tree-id1201 . -5) (undo-tree-id1202 . -5) (undo-tree-id1203 . -5) (undo-tree-id1204 . -5) (undo-tree-id1205 . -5) (undo-tree-id1206 . -5) (undo-tree-id1207 . -5) (undo-tree-id1208 . -5) (undo-tree-id1209 . -5) (undo-tree-id1210 . -5) (undo-tree-id1211 . -5) (undo-tree-id1212 . -5) (undo-tree-id1213 . -5) (undo-tree-id1214 . -5) (undo-tree-id1215 . -5) (undo-tree-id1216 . -5) (undo-tree-id1217 . -5) (undo-tree-id1218 . -5) (undo-tree-id1219 . -5) (undo-tree-id1220 . -5) (undo-tree-id1221 . -5) (undo-tree-id1222 . -5) (undo-tree-id1223 . -5) (undo-tree-id1224 . -5) (undo-tree-id1225 . -5) (undo-tree-id1226 . -5) (undo-tree-id1227 . -5) (undo-tree-id1228 . -5) 348) nil (25595 50783 38117 208000) 0 nil])
([nil nil ((#("Graph(" 0 5 (fontified t) 5 6 (face (rainbow-delimiters-depth-1-face) fontified t)) . -337) (undo-tree-id1114 . -5) (undo-tree-id1115 . -5) (undo-tree-id1116 . -5) (undo-tree-id1117 . -5) (undo-tree-id1118 . -5) (undo-tree-id1119 . -5) (undo-tree-id1120 . -5) (undo-tree-id1121 . -5) (undo-tree-id1122 . -5) (undo-tree-id1123 . -5) (undo-tree-id1124 . -5) (undo-tree-id1125 . -5) (undo-tree-id1126 . -5) (undo-tree-id1127 . -5) (undo-tree-id1128 . -5) (undo-tree-id1129 . -5) (undo-tree-id1130 . -5) (undo-tree-id1131 . -5) (undo-tree-id1132 . -5) (undo-tree-id1133 . -5) (undo-tree-id1134 . -5) (undo-tree-id1135 . -5) (undo-tree-id1136 . -6) (undo-tree-id1137 . -5) (undo-tree-id1138 . -6) (undo-tree-id1139 . -6) (undo-tree-id1140 . -6) (undo-tree-id1141 . -6) (undo-tree-id1142 . -6) (undo-tree-id1143 . -6) (undo-tree-id1144 . -6) (undo-tree-id1145 . -6) (undo-tree-id1146 . -6) (undo-tree-id1147 . -6) (undo-tree-id1148 . -6) (undo-tree-id1149 . -6) (undo-tree-id1150 . -6) (undo-tree-id1151 . -6) (undo-tree-id1152 . -6) (undo-tree-id1153 . -6) (undo-tree-id1154 . -6) (undo-tree-id1155 . -6) (undo-tree-id1156 . -6) (undo-tree-id1157 . -6) (undo-tree-id1158 . -6) (undo-tree-id1159 . -6) (undo-tree-id1160 . -6) (undo-tree-id1161 . -6) (undo-tree-id1162 . -6) (undo-tree-id1163 . -6) (undo-tree-id1164 . -6) (undo-tree-id1165 . -6) (undo-tree-id1166 . -6) (undo-tree-id1167 . -6) (undo-tree-id1168 . -6) (undo-tree-id1169 . -6) (undo-tree-id1170 . -6) (undo-tree-id1171 . -6) (undo-tree-id1172 . -6) (undo-tree-id1173 . -6) (undo-tree-id1174 . -6) (undo-tree-id1175 . -6) (undo-tree-id1176 . -6) (undo-tree-id1177 . -6) (undo-tree-id1178 . -6) (undo-tree-id1179 . -6) (undo-tree-id1180 . -6) (undo-tree-id1181 . -6) (undo-tree-id1182 . -6) (undo-tree-id1183 . -6) (undo-tree-id1184 . -6) (undo-tree-id1185 . -6) (undo-tree-id1186 . -6) 343) nil (25595 50783 38099 444000) 0 nil])
([nil nil ((#("return " 0 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t)) . -330) (undo-tree-id1025 . -6) (undo-tree-id1026 . -6) (undo-tree-id1027 . -6) (undo-tree-id1028 . -6) (undo-tree-id1029 . -6) (undo-tree-id1030 . -6) (undo-tree-id1031 . -6) (undo-tree-id1032 . -7) (undo-tree-id1033 . -6) (undo-tree-id1034 . -7) (undo-tree-id1035 . -7) (undo-tree-id1036 . -7) (undo-tree-id1037 . -7) (undo-tree-id1038 . -7) (undo-tree-id1039 . -7) (undo-tree-id1040 . -7) (undo-tree-id1041 . -7) (undo-tree-id1042 . -7) (undo-tree-id1043 . -7) (undo-tree-id1044 . -7) (undo-tree-id1045 . -7) (undo-tree-id1046 . -7) (undo-tree-id1047 . -7) (undo-tree-id1048 . -7) (undo-tree-id1049 . -7) (undo-tree-id1050 . -7) (undo-tree-id1051 . -7) (undo-tree-id1052 . -7) (undo-tree-id1053 . -7) (undo-tree-id1054 . -7) (undo-tree-id1055 . -7) (undo-tree-id1056 . -7) (undo-tree-id1057 . -7) (undo-tree-id1058 . -7) (undo-tree-id1059 . -7) (undo-tree-id1060 . -7) (undo-tree-id1061 . -7) (undo-tree-id1062 . -7) (undo-tree-id1063 . -7) (undo-tree-id1064 . -7) (undo-tree-id1065 . -7) (undo-tree-id1066 . -7) (undo-tree-id1067 . -7) (undo-tree-id1068 . -7) (undo-tree-id1069 . -7) (undo-tree-id1070 . -7) (undo-tree-id1071 . -7) (undo-tree-id1072 . -7) (undo-tree-id1073 . -7) (undo-tree-id1074 . -7) (undo-tree-id1075 . -7) (undo-tree-id1076 . -7) (undo-tree-id1077 . -7) (undo-tree-id1078 . -7) (undo-tree-id1079 . -7) (undo-tree-id1080 . -7) (undo-tree-id1081 . -7) (undo-tree-id1082 . -7) (undo-tree-id1083 . -7) (undo-tree-id1084 . -7) (undo-tree-id1085 . -7) (undo-tree-id1086 . -7) (undo-tree-id1087 . -7) (undo-tree-id1088 . -7) (undo-tree-id1089 . -7) (undo-tree-id1090 . -7) (undo-tree-id1091 . -7) (undo-tree-id1092 . -7) (undo-tree-id1093 . -7) (undo-tree-id1094 . -7) (undo-tree-id1095 . -7) (undo-tree-id1096 . -7) (undo-tree-id1097 . -7) (undo-tree-id1098 . -7) (undo-tree-id1099 . -7) (undo-tree-id1100 . -7) (undo-tree-id1101 . -7) (undo-tree-id1102 . -7) (undo-tree-id1103 . -7) (undo-tree-id1104 . -7) (undo-tree-id1105 . -7) (undo-tree-id1106 . -7) (undo-tree-id1107 . -7) (undo-tree-id1108 . -7) (undo-tree-id1109 . -7) (undo-tree-id1110 . -7) (undo-tree-id1111 . -7) (undo-tree-id1112 . -7) (undo-tree-id1113 . -7) 337) nil (25595 50783 38024 993000) 0 nil])
([nil nil ((#("copy()" 0 4 (fontified t) 4 5 (face (rainbow-delimiters-depth-1-face) fontified t) 5 6 (face (rainbow-delimiters-depth-1-face) fontified t)) . -341) (undo-tree-id994 . -4) (undo-tree-id995 . -4) (undo-tree-id996 . -4) (undo-tree-id997 . -4) (undo-tree-id998 . -4) (undo-tree-id999 . -4) (undo-tree-id1000 . -4) (undo-tree-id1001 . -4) (undo-tree-id1002 . -4) (undo-tree-id1003 . -4) (undo-tree-id1004 . -4) (undo-tree-id1005 . -4) (undo-tree-id1006 . -4) (undo-tree-id1007 . -6) (undo-tree-id1008 . -6) (undo-tree-id1009 . -6) (undo-tree-id1010 . -6) (undo-tree-id1011 . -6) (undo-tree-id1012 . -6) (undo-tree-id1013 . -6) (undo-tree-id1014 . -6) (undo-tree-id1015 . -6) (undo-tree-id1016 . -6) (undo-tree-id1017 . -6) (undo-tree-id1018 . -6) (undo-tree-id1019 . -6) (undo-tree-id1020 . -6) (undo-tree-id1021 . -6) (undo-tree-id1022 . -6) (undo-tree-id1023 . -6) (undo-tree-id1024 . -6) 347) nil (25595 50783 37814 762000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -340) (undo-tree-id948 . -1) (undo-tree-id949 . -1) (undo-tree-id950 . -1) (undo-tree-id951 . -1) (undo-tree-id952 . -1) (undo-tree-id953 . -1) (undo-tree-id954 . -1) (undo-tree-id955 . -1) (undo-tree-id956 . -1) (undo-tree-id957 . -1) (undo-tree-id958 . -1) (undo-tree-id959 . -1) (undo-tree-id960 . -1) (undo-tree-id961 . -1) (undo-tree-id962 . -1) (undo-tree-id963 . -1) (undo-tree-id964 . -1) (undo-tree-id965 . -1) (undo-tree-id966 . -1) (undo-tree-id967 . -1) (undo-tree-id968 . -1) (undo-tree-id969 . -1) (undo-tree-id970 . -1) (undo-tree-id971 . -1) (undo-tree-id972 . -1) (undo-tree-id973 . -1) (undo-tree-id974 . -1) (undo-tree-id975 . -1) (undo-tree-id976 . -1) (undo-tree-id977 . -1) (undo-tree-id978 . -1) (undo-tree-id979 . -1) (undo-tree-id980 . -1) (undo-tree-id981 . -1) (undo-tree-id982 . -1) (undo-tree-id983 . -1) (undo-tree-id984 . -1) (undo-tree-id985 . -1) (undo-tree-id986 . -1) (undo-tree-id987 . -1) (undo-tree-id988 . -1) (undo-tree-id989 . -1) (undo-tree-id990 . -1) (undo-tree-id991 . -1) (undo-tree-id992 . -1) (undo-tree-id993 . -1) 341) nil (25595 50783 37802 309000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-unmatched-face) fontified t)) . -347) (undo-tree-id911 . -1) (undo-tree-id912 . -1) (undo-tree-id913 . -1) (undo-tree-id914 . -1) (undo-tree-id915 . -1) (undo-tree-id916 . -1) (undo-tree-id917 . -1) (undo-tree-id918 . -1) (undo-tree-id919 . -1) (undo-tree-id920 . -1) (undo-tree-id921 . -1) (undo-tree-id922 . -1) (undo-tree-id923 . -1) (undo-tree-id924 . -1) (undo-tree-id925 . -1) (undo-tree-id926 . -1) (undo-tree-id927 . -1) (undo-tree-id928 . -1) (undo-tree-id929 . -1) (undo-tree-id930 . -1) (undo-tree-id931 . -1) (undo-tree-id932 . -1) (undo-tree-id933 . -1) (undo-tree-id934 . -1) (undo-tree-id935 . -1) (undo-tree-id936 . -1) (undo-tree-id937 . -1) (undo-tree-id938 . -1) (undo-tree-id939 . -1) (undo-tree-id940 . -1) (undo-tree-id941 . -1) (undo-tree-id942 . -1) (undo-tree-id943 . -1) (undo-tree-id944 . -1) (undo-tree-id945 . -1) (undo-tree-id946 . -1) (undo-tree-id947 . -1) 348) nil (25595 50783 37780 197000) 0 nil])
([nil nil ((#("        else:" 0 8 (fontified t) 8 12 (face font-lock-keyword-face fontified t) 12 13 (fontified t)) . 348) (undo-tree-id885 . -13) (undo-tree-id886 . -13) (undo-tree-id887 . -13) (undo-tree-id888 . -13) (undo-tree-id889 . -13) (undo-tree-id890 . -13) (undo-tree-id891 . -13) (undo-tree-id892 . -13) (undo-tree-id893 . -13) (undo-tree-id894 . -13) (undo-tree-id895 . -13) (undo-tree-id896 . -13) (undo-tree-id897 . -13) (undo-tree-id898 . -13) (undo-tree-id899 . -13) (undo-tree-id900 . -13) (undo-tree-id901 . -13) (undo-tree-id902 . -13) (undo-tree-id903 . -13) (undo-tree-id904 . -13) (undo-tree-id905 . -13) (undo-tree-id906 . -13) (undo-tree-id907 . -13) (undo-tree-id908 . -13) (undo-tree-id909 . -13) (undo-tree-id910 . -13)) nil (25595 50783 37510 173000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 348) (undo-tree-id884 . -1)) nil (25595 50783 37498 270000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -356) (undo-tree-id857 . -4) (undo-tree-id858 . -4) (undo-tree-id859 . -4) (undo-tree-id860 . -4) (undo-tree-id861 . -4) (undo-tree-id862 . -4) (undo-tree-id863 . -4) (undo-tree-id864 . -4) (undo-tree-id865 . -4) (undo-tree-id866 . -4) (undo-tree-id867 . -4) (undo-tree-id868 . -4) (undo-tree-id869 . -4) (undo-tree-id870 . -4) (undo-tree-id871 . -4) (undo-tree-id872 . -4) (undo-tree-id873 . -4) (undo-tree-id874 . -4) (undo-tree-id875 . -4) (undo-tree-id876 . -4) (undo-tree-id877 . -4) (undo-tree-id878 . -4) (undo-tree-id879 . -4) (undo-tree-id880 . -4) (undo-tree-id881 . -4) (undo-tree-id882 . -4) (undo-tree-id883 . -4) 360) nil (25595 50783 37494 42000) 0 nil])
([nil nil ((#("        return self" 0 8 (fontified t) 8 14 (face font-lock-keyword-face fontified t) 14 15 (fontified t) 15 19 (face font-lock-keyword-face fontified t)) . 238) (undo-tree-id1321 . -8) (undo-tree-id1322 . -8) (undo-tree-id1323 . -8) (undo-tree-id1324 . -8) (undo-tree-id1325 . -8) (undo-tree-id1326 . -8) (undo-tree-id1327 . -8) (undo-tree-id1328 . -19) (undo-tree-id1329 . -8) (undo-tree-id1330 . -8) (undo-tree-id1331 . -8) (undo-tree-id1332 . -8) (undo-tree-id1333 . -19) (undo-tree-id1334 . -19) (undo-tree-id1335 . -8) (undo-tree-id1336 . -8) (undo-tree-id1337 . -8) (undo-tree-id1338 . -8) (undo-tree-id1339 . -8) (undo-tree-id1340 . -8) (undo-tree-id1341 . -19) (t 25595 50783 52513 400000)) nil (25595 50797 633496 893000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 238) (undo-tree-id1312 . -1) (undo-tree-id1313 . -1) (undo-tree-id1314 . -1) (undo-tree-id1315 . -1) (undo-tree-id1316 . -1) (undo-tree-id1317 . -1) (undo-tree-id1318 . -1) (undo-tree-id1319 . -1) (undo-tree-id1320 . -1)) nil (25595 50797 633487 936000) 0 nil])
([nil nil ((#("        return self" 0 8 (fontified t) 8 14 (face font-lock-keyword-face fontified t) 14 15 (fontified t) 15 18 (face font-lock-keyword-face fontified t) 18 19 (face font-lock-keyword-face fontified t rear-nonsticky t)) . 328) (undo-tree-id1261 . -8) (undo-tree-id1262 . -8) (undo-tree-id1263 . -8) (undo-tree-id1264 . -8) (undo-tree-id1265 . -8) (undo-tree-id1266 . -8) (undo-tree-id1267 . -8) (undo-tree-id1268 . -8) (undo-tree-id1269 . -8) (undo-tree-id1270 . -8) (undo-tree-id1271 . -8) (undo-tree-id1272 . -8) (undo-tree-id1273 . -8) (undo-tree-id1274 . -8) (undo-tree-id1275 . -8) (undo-tree-id1276 . -8) (undo-tree-id1277 . -8) (undo-tree-id1278 . -8) (undo-tree-id1279 . -8) (undo-tree-id1280 . -8) (undo-tree-id1281 . -8) (undo-tree-id1282 . -8) (undo-tree-id1283 . -8) (undo-tree-id1284 . -8) (undo-tree-id1285 . -8) (undo-tree-id1286 . -8) (undo-tree-id1287 . -8) (undo-tree-id1288 . -8) (undo-tree-id1289 . -8) (undo-tree-id1290 . -8) (undo-tree-id1291 . -8) (undo-tree-id1292 . -8) (undo-tree-id1293 . -8) (undo-tree-id1294 . -8) (undo-tree-id1295 . -8) (undo-tree-id1296 . -8) (undo-tree-id1297 . -8) (undo-tree-id1298 . -8) (undo-tree-id1299 . -8) (undo-tree-id1300 . -8) (undo-tree-id1301 . -8) (undo-tree-id1302 . -8) (undo-tree-id1303 . -8) (undo-tree-id1304 . -8) (undo-tree-id1305 . -8) (undo-tree-id1306 . -8) (undo-tree-id1307 . -8) (undo-tree-id1308 . -8) (undo-tree-id1309 . -8) (undo-tree-id1310 . -19) (undo-tree-id1311 . -19)) nil (25595 50797 633481 975000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 328) (undo-tree-id1259 . -1) (undo-tree-id1260 . -1)) nil (25595 50797 633458 129000) 0 nil])
([nil nil ((328 . 340) (t 25595 50797 641000 500000)) nil (25595 51025 140529 900000) 0 nil])
([nil nil ((329 . 341) (#("            " 0 12 (fontified nil)) . 328) (undo-tree-id1349 . -12) (340 . 341)) nil (25595 51025 140528 708000) 0 nil])
([nil nil ((nil rear-nonsticky nil 376 . 377) (nil fontified nil 341 . 377) (341 . 377)) nil (25595 51025 140526 584000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -337) (undo-tree-id1348 . -4) 346) nil (25595 51025 140525 442000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -333) (undo-tree-id1347 . -4) 342) nil (25595 51025 140524 510000) 0 nil])
([nil nil ((352 . 360) (#("     " 0 5 (fontified t)) . 352) 361) nil (25595 51025 140523 17000) 0 nil])
([nil nil ((#("\"" 0 1 (face font-lock-string-face fontified t)) . -367) (undo-tree-id1342 . -1) (#("f" 0 1 (face font-lock-string-face fontified t)) . -368) (undo-tree-id1343 . -1) (#("o" 0 1 (face font-lock-string-face fontified t)) . -369) (undo-tree-id1344 . -1) (#("o" 0 1 (face font-lock-string-face fontified t)) . -370) (undo-tree-id1345 . -1) (#("\"" 0 1 (face font-lock-string-face fontified t rear-nonsticky t)) . -371) (undo-tree-id1346 . -1) 372) nil (25595 51025 140521 204000) 0 nil])
([nil nil ((367 . 386)) nil (25595 51025 140507 508000) 0 nil])
([nil nil ((386 . 397)) nil (25595 51025 140506 225000) 0 nil])
([nil nil ((397 . 398)) nil (25595 51025 140502 298000) 0 nil])
([nil nil ((371 . 375) (t 25595 51025 151596 600000)) nil (25595 51126 499103 301000) 0 nil])
([nil nil ((388 . 389)) nil (25595 51126 499102 269000) 0 nil])
([nil nil ((391 . 395)) nil (25595 51126 499100 977000) 0 nil])
([nil nil ((405 . 406)) nil (25595 51126 499096 428000) 0 nil])
([nil nil ((#("str(" 0 3 (face font-lock-builtin-face fontified t) 3 4 (face (rainbow-delimiters-depth-2-face) fontified t)) . -371) (undo-tree-id1421 . -4) (undo-tree-id1422 . -4) 375 (t 25595 51126 509925 800000)) nil (25595 51217 96575 699000) 0 nil])
([nil nil ((#("str" 0 3 (face font-lock-builtin-face fontified t)) . -367) (undo-tree-id1420 . -3) 370) nil (25595 51217 96573 255000) 0 nil])
([nil nil ((#("str(" 0 3 (face font-lock-builtin-face fontified t) 3 4 (face (rainbow-delimiters-depth-1-face) fontified t)) . -384) (undo-tree-id1363 . -3) (undo-tree-id1364 . -3) (undo-tree-id1365 . -3) (undo-tree-id1366 . -3) (undo-tree-id1367 . -3) (undo-tree-id1368 . -3) (undo-tree-id1369 . -3) (undo-tree-id1370 . -3) (undo-tree-id1371 . -3) (undo-tree-id1372 . -3) (undo-tree-id1373 . -3) (undo-tree-id1374 . -3) (undo-tree-id1375 . -3) (undo-tree-id1376 . -4) (undo-tree-id1377 . -4) (undo-tree-id1378 . -4) (undo-tree-id1379 . -4) (undo-tree-id1380 . -4) (undo-tree-id1381 . -4) (undo-tree-id1382 . -4) (undo-tree-id1383 . -3) (undo-tree-id1384 . -4) (undo-tree-id1385 . -3) (undo-tree-id1386 . -3) (undo-tree-id1387 . -3) (undo-tree-id1388 . -3) (undo-tree-id1389 . -3) (undo-tree-id1390 . -3) (undo-tree-id1391 . -3) (undo-tree-id1392 . -3) (undo-tree-id1393 . -3) (undo-tree-id1394 . -3) (undo-tree-id1395 . -3) (undo-tree-id1396 . -3) (undo-tree-id1397 . -3) (undo-tree-id1398 . -3) (undo-tree-id1399 . -3) (undo-tree-id1400 . -3) (undo-tree-id1401 . -3) (undo-tree-id1402 . -3) (undo-tree-id1403 . -3) (undo-tree-id1404 . -3) (undo-tree-id1405 . -3) (undo-tree-id1406 . -3) (undo-tree-id1407 . -3) (undo-tree-id1408 . -3) (undo-tree-id1409 . -3) (undo-tree-id1410 . -3) (undo-tree-id1411 . -3) (undo-tree-id1412 . -4) (undo-tree-id1413 . -4) (undo-tree-id1414 . -4) (undo-tree-id1415 . -4) (undo-tree-id1416 . -4) (undo-tree-id1417 . -4) (undo-tree-id1418 . -4) (undo-tree-id1419 . -4) 388) nil (25595 51217 96570 439000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-unmatched-face) fontified t)) . -394) (undo-tree-id1350 . -1) (undo-tree-id1351 . -1) (undo-tree-id1352 . -1) (undo-tree-id1353 . -1) (undo-tree-id1354 . -1) (undo-tree-id1355 . -1) (undo-tree-id1356 . -1) (undo-tree-id1357 . -1) (undo-tree-id1358 . -1) (undo-tree-id1359 . -1) (undo-tree-id1360 . -1) (undo-tree-id1361 . -1) (undo-tree-id1362 . -1) 395) nil (25595 51217 96541 995000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . -381) (undo-tree-id1423 . -1) (undo-tree-id1424 . -1) (undo-tree-id1425 . -1) (undo-tree-id1426 . -1) (undo-tree-id1427 . -1) (undo-tree-id1428 . -1) (undo-tree-id1429 . -1) (undo-tree-id1430 . -1) (undo-tree-id1431 . -1) (undo-tree-id1432 . -1) (undo-tree-id1433 . -1) (undo-tree-id1434 . -1) (undo-tree-id1435 . -1) (undo-tree-id1436 . -1) (undo-tree-id1437 . -1) (undo-tree-id1438 . -1) (undo-tree-id1439 . -1) (undo-tree-id1440 . -1) (undo-tree-id1441 . -1) (undo-tree-id1442 . -1) (undo-tree-id1443 . -1) (undo-tree-id1444 . -1) (undo-tree-id1445 . -1) (undo-tree-id1446 . -1) (undo-tree-id1447 . -1) (undo-tree-id1448 . -1) (undo-tree-id1449 . -1) (undo-tree-id1450 . -1) (undo-tree-id1451 . -1) 382 (t 25595 51217 108275 700000)) nil (25595 51223 66088 139000) 0 nil])
([nil nil ((367 . 370) (t 25595 51223 76678 700000)) nil (25595 51247 362267 19000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -367) (undo-tree-id1452 . -1) (undo-tree-id1453 . -1) (undo-tree-id1454 . -1) (undo-tree-id1455 . -1) (#("t" 0 1 (fontified t)) . -368) (undo-tree-id1456 . -1) (undo-tree-id1457 . -1) (undo-tree-id1458 . -1) (undo-tree-id1459 . -1) (#("r" 0 1 (face font-lock-builtin-face fontified t)) . -369) (undo-tree-id1460 . -1) (undo-tree-id1461 . -1) (undo-tree-id1462 . -1) (undo-tree-id1463 . -1) 370 (t 25595 51247 367679 0)) nil (25595 51460 556465 796000) 0 nil])
([nil nil ((367 . 369)) nil (25595 51460 556449 294000) 0 nil])
([nil nil ((370 . 371)) nil (25595 51460 556448 583000) 0 nil])
([nil nil ((384 . 385)) nil (25595 51460 556448 72000) 0 nil])
([nil nil ((387 . 388)) nil (25595 51460 556447 50000) 0 nil])
([nil nil ((398 . 399)) nil (25595 51460 556445 758000) 0 nil])
([nil nil ((400 . 401)) nil (25595 51460 556441 29000) 0 nil])
([nil nil ((23 . 30) (t 25595 51460 571358 700000)) nil (25595 51530 497496 418000) 0 nil])
([nil nil ((35 . 44)) nil (25595 51530 497495 696000) 0 nil])
([nil nil ((45 . 46)) nil (25595 51530 497494 624000) 0 nil])
([nil nil ((281 . 289)) nil (25595 51530 497491 158000) 0 nil])
([nil nil ((148 . 157) (t 25595 51530 509838 100000)) nil (25595 51716 81920 691000) 0 nil])
([nil nil ((150 . 158) (#("        " 0 8 (fontified nil)) . 149) (undo-tree-id1575 . -8) (157 . 158)) nil (25595 51716 81920 210000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -154) (undo-tree-id1574 . -4) 158) nil (25595 51716 81919 358000) 0 nil])
([nil nil ((154 . 166)) nil (25595 51716 81918 577000) 0 nil])
([nil nil ((#("f" 0 1 (face font-lock-type-face fontified t)) . -165) (undo-tree-id1573 . -1) 166) nil (25595 51716 81918 126000) 0 nil])
([nil nil ((165 . 166)) nil (25595 51716 81917 344000) 0 nil])
([nil nil ((166 . 171)) nil (25595 51716 81917 94000) 0 nil])
([nil nil ((171 . 183)) nil (25595 51716 81916 713000) 0 nil])
([nil nil ((#("L" 0 1 (face font-lock-function-name-face fontified t)) . -179) (undo-tree-id1569 . -1) (#("i" 0 1 (face font-lock-function-name-face fontified t)) . -180) (undo-tree-id1570 . -1) (#("s" 0 1 (face font-lock-function-name-face fontified t)) . -181) (undo-tree-id1571 . -1) (#("t" 0 1 (face font-lock-function-name-face fontified t)) . -182) (undo-tree-id1572 . -1) 183) nil (25595 51716 81915 801000) 0 nil])
([nil nil ((179 . 186)) nil (25595 51716 81913 477000) 0 nil])
([nil nil ((186 . 195)) nil (25595 51716 81913 96000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -193) (undo-tree-id1567 . -1) (#("=" 0 1 (face font-lock-operator-face fontified t)) . -194) (undo-tree-id1568 . -1) 195) nil (25595 51716 81912 405000) 0 nil])
([nil nil ((193 . 198)) nil (25595 51716 81910 902000) 0 nil])
([nil nil ((193 . 194)) nil (25595 51716 81910 451000) 0 nil])
([nil nil ((194 . 198)) nil (25595 51716 81910 60000) 0 nil])
([nil nil ((202 . 207)) nil (25595 51716 81909 259000) 0 nil])
([nil nil ((#("    @classmethod" 0 4 (fontified t) 4 5 (fontified t) 5 16 (face font-lock-builtin-face fontified t)) . 150) (undo-tree-id1545 . -16) (undo-tree-id1546 . -16) (undo-tree-id1547 . -16) (undo-tree-id1548 . -16) (undo-tree-id1549 . -16) (undo-tree-id1550 . -16) (undo-tree-id1551 . -16) (undo-tree-id1552 . -16) (undo-tree-id1553 . -16) (undo-tree-id1554 . -4) (undo-tree-id1555 . -4) (undo-tree-id1556 . -4) (undo-tree-id1557 . -4) (undo-tree-id1558 . -16) (undo-tree-id1559 . -16) (undo-tree-id1560 . -16) (undo-tree-id1561 . -16) (undo-tree-id1562 . -16) (undo-tree-id1563 . -16) (undo-tree-id1564 . -16) (undo-tree-id1565 . -16) (undo-tree-id1566 . -16)) nil (25595 51716 81908 327000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 150) (undo-tree-id1543 . -1) (undo-tree-id1544 . -1)) nil (25595 51716 81899 360000) 0 nil])
([nil nil ((#("    def from_lists(cls, vs_list, es_list)" 0 4 (fontified t) 4 7 (face font-lock-keyword-face fontified t) 7 8 (fontified t) 8 18 (face font-lock-function-name-face fontified t) 18 19 (face (rainbow-delimiters-depth-1-face) fontified t) 19 40 (fontified t) 40 41 (face (rainbow-delimiters-depth-1-face) fontified t)) . 150) (undo-tree-id1466 . -36) (undo-tree-id1467 . -35) (undo-tree-id1468 . -36) (undo-tree-id1469 . -36) (undo-tree-id1470 . -36) (undo-tree-id1471 . -36) (undo-tree-id1472 . -36) (undo-tree-id1473 . -36) (undo-tree-id1474 . -4) (undo-tree-id1475 . -41) (undo-tree-id1476 . -37) (undo-tree-id1477 . -36) (undo-tree-id1478 . -37) (undo-tree-id1479 . -37) (undo-tree-id1480 . -37) (undo-tree-id1481 . -37) (undo-tree-id1482 . -37) (undo-tree-id1483 . -37) (undo-tree-id1484 . -4) (undo-tree-id1485 . -41) (undo-tree-id1486 . -38) (undo-tree-id1487 . -37) (undo-tree-id1488 . -38) (undo-tree-id1489 . -38) (undo-tree-id1490 . -38) (undo-tree-id1491 . -38) (undo-tree-id1492 . -38) (undo-tree-id1493 . -38) (undo-tree-id1494 . -4) (undo-tree-id1495 . -41) (undo-tree-id1496 . -39) (undo-tree-id1497 . -38) (undo-tree-id1498 . -39) (undo-tree-id1499 . -39) (undo-tree-id1500 . -39) (undo-tree-id1501 . -39) (undo-tree-id1502 . -39) (undo-tree-id1503 . -39) (undo-tree-id1504 . -4) (undo-tree-id1505 . -41) (undo-tree-id1506 . -40) (undo-tree-id1507 . -39) (undo-tree-id1508 . -40) (undo-tree-id1509 . -40) (undo-tree-id1510 . -40) (undo-tree-id1511 . -40) (undo-tree-id1512 . -40) (undo-tree-id1513 . -40) (undo-tree-id1514 . -41) (undo-tree-id1515 . -4) (undo-tree-id1516 . -4) (undo-tree-id1517 . -4) (undo-tree-id1518 . -41) (undo-tree-id1519 . -4) (undo-tree-id1520 . -4) (undo-tree-id1521 . -4) (undo-tree-id1522 . -4) (undo-tree-id1523 . -4) (undo-tree-id1524 . -41) (undo-tree-id1525 . -40) (undo-tree-id1526 . -40) (undo-tree-id1527 . -40) (undo-tree-id1528 . -40) (undo-tree-id1529 . -40) (undo-tree-id1530 . -40) (undo-tree-id1531 . -40) (undo-tree-id1532 . -40) (undo-tree-id1533 . -40) (undo-tree-id1534 . -40) (undo-tree-id1535 . -40) (undo-tree-id1536 . -40) (undo-tree-id1537 . -40) (undo-tree-id1538 . -41) (undo-tree-id1539 . -41) (undo-tree-id1540 . -4) (undo-tree-id1541 . -41) (undo-tree-id1542 . -41)) nil (25595 51716 81895 953000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 150) (undo-tree-id1465 . -1)) nil (25595 51716 81861 728000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 150) (undo-tree-id1464 . -1)) nil (25595 51716 81857 821000) 0 nil])
([nil nil ((#("set()" 0 3 (face font-lock-builtin-face fontified t) 3 4 (face (rainbow-delimiters-depth-2-face) fontified t) 4 5 (face (rainbow-delimiters-depth-2-face) fontified t)) . -87) (undo-tree-id1670 . -5) 92 (t 25595 51716 93879 300000)) nil (25595 52221 424083 324000) 0 nil])
([nil nil ((#("es=" 0 2 (fontified t) 2 3 (face font-lock-operator-face fontified t)) . -84) (undo-tree-id1669 . -3) 87) nil (25595 52221 424082 373000) 0 nil])
([nil nil ((#("set(), " 0 3 (face font-lock-builtin-face fontified t) 3 4 (face (rainbow-delimiters-depth-2-face) fontified t) 4 5 (face (rainbow-delimiters-depth-2-face) fontified t) 5 7 (fontified t)) . -77) (undo-tree-id1668 . -7) 84) nil (25595 52221 424081 341000) 0 nil])
([nil nil ((#("vs=" 0 2 (fontified t) 2 3 (face font-lock-operator-face fontified t)) . -74) (undo-tree-id1667 . -3) 77) nil (25595 52221 424080 259000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -72) (undo-tree-id1665 . -1) (#(" " 0 1 (fontified t)) . -73) (undo-tree-id1666 . -1) 74) nil (25595 52221 424078 766000) 0 nil])
([nil nil ((#("v" 0 1 (fontified t)) . -99) (undo-tree-id1663 . -1) (#("s" 0 1 (fontified t)) . -100) (undo-tree-id1664 . -1) 101) nil (25595 52221 424076 481000) 0 nil])
([nil nil ((99 . 104)) nil (25595 52221 424075 249000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -129) (undo-tree-id1661 . -1) (#("s" 0 1 (fontified t)) . -130) (undo-tree-id1662 . -1) 131) nil (25595 52221 424074 227000) 0 nil])
([nil nil ((129 . 130)) nil (25595 52221 424072 744000) 0 nil])
([nil nil ((130 . 134)) nil (25595 52221 424072 213000) 0 nil])
([nil nil ((136 . 144) (#("        " 0 8 (fontified nil)) . 135) (undo-tree-id1660 . -8) (134 . 144)) nil (25595 52221 424071 352000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -140) (undo-tree-id1659 . -4) 144) nil (25595 52221 424070 59000) 0 nil])
([nil nil ((140 . 144)) nil (25595 52221 424068 747000) 0 nil])
([nil nil ((144 . 152)) nil (25595 52221 424068 116000) 0 nil])
([nil nil ((152 . 157)) nil (25595 52221 424067 414000) 0 nil])
([nil nil ((157 . 166)) nil (25595 52221 424066 512000) 0 nil])
([nil nil ((166 . 174)) nil (25595 52221 424065 651000) 0 nil])
([nil nil ((174 . 190)) nil (25595 52221 424065 80000) 0 nil])
([nil nil ((190 . 191)) nil (25595 52221 424064 258000) 0 nil])
([nil nil ((191 . 192)) nil (25595 52221 424063 497000) 0 nil])
([nil nil ((192 . 201)) nil (25595 52221 424062 916000) 0 nil])
([nil nil ((201 . 219)) nil (25595 52221 424062 284000) 0 nil])
([nil nil ((219 . 228)) nil (25595 52221 424061 603000) 0 nil])
([nil nil ((228 . 232)) nil (25595 52221 424060 882000) 0 nil])
([nil nil ((232 . 240)) nil (25595 52221 424060 301000) 0 nil])
([nil nil ((240 . 253)) nil (25595 52221 424059 409000) 0 nil])
([nil nil ((253 . 256)) nil (25595 52221 424058 898000) 0 nil])
([nil nil ((256 . 276)) nil (25595 52221 424058 277000) 0 nil])
([nil nil ((276 . 283)) nil (25595 52221 424057 505000) 0 nil])
([nil nil ((283 . 294)) nil (25595 52221 424056 734000) 0 nil])
([nil nil ((294 . 307)) nil (25595 52221 424056 33000) 0 nil])
([nil nil ((307 . 324)) nil (25595 52221 424055 271000) 0 nil])
([nil nil ((324 . 335)) nil (25595 52221 424054 530000) 0 nil])
([nil nil ((192 . 201)) nil (25595 52221 424053 808000) 0 nil])
([nil nil ((201 . 210)) nil (25595 52221 424053 137000) 0 nil])
([nil nil ((#("self" 0 4 (face font-lock-keyword-face fontified t)) . -219) (undo-tree-id1657 . -4) (undo-tree-id1658 . -4) 223) nil (25595 52221 424052 175000) 0 nil])
([nil nil ((219 . 220)) nil (25595 52221 424050 201000) 0 nil])
([nil nil ((339 . 341)) nil (25595 52221 424049 630000) 0 nil])
([nil nil ((352 . 369)) nil (25595 52221 424048 989000) 0 nil])
([nil nil ((369 . 377)) nil (25595 52221 424048 268000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -365) 377) nil (25595 52221 424047 326000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -361) 373) nil (25595 52221 424045 683000) 0 nil])
([nil nil ((#("e" 0 1 (face font-lock-function-name-face fontified t)) . -166) (undo-tree-id1576 . -1) (undo-tree-id1577 . -1) (undo-tree-id1578 . -1) (undo-tree-id1579 . -1) (undo-tree-id1580 . -1) (undo-tree-id1581 . -1) (undo-tree-id1582 . -1) (undo-tree-id1583 . -1) (undo-tree-id1584 . -1) (undo-tree-id1585 . -1) (undo-tree-id1586 . -1) (undo-tree-id1587 . -1) (undo-tree-id1588 . -1) (undo-tree-id1589 . -1) (undo-tree-id1590 . -1) (undo-tree-id1591 . -1) (undo-tree-id1592 . -1) (undo-tree-id1593 . -1) (undo-tree-id1594 . -1) (undo-tree-id1595 . -1) (undo-tree-id1596 . -1) (undo-tree-id1597 . -1) (undo-tree-id1598 . -1) (undo-tree-id1599 . -1) (undo-tree-id1600 . -1) (undo-tree-id1601 . -1) (undo-tree-id1602 . -1) (undo-tree-id1603 . -1) (undo-tree-id1604 . -1) (undo-tree-id1605 . -1) (undo-tree-id1606 . -1) (undo-tree-id1607 . -1) (undo-tree-id1608 . -1) (undo-tree-id1609 . -1) (undo-tree-id1610 . -1) (undo-tree-id1611 . -1) (undo-tree-id1612 . -1) (undo-tree-id1613 . -1) (undo-tree-id1614 . -1) (undo-tree-id1615 . -1) (undo-tree-id1616 . -1) (undo-tree-id1617 . -1) (undo-tree-id1618 . -1) (undo-tree-id1619 . -1) (undo-tree-id1620 . -1) (undo-tree-id1621 . -1) (undo-tree-id1622 . -1) (undo-tree-id1623 . -1) (undo-tree-id1624 . -1) (undo-tree-id1625 . -1) (undo-tree-id1626 . -1) (#("r" 0 1 (face font-lock-function-name-face fontified t)) . -167) (undo-tree-id1627 . -1) (undo-tree-id1628 . -1) (undo-tree-id1629 . -1) (undo-tree-id1630 . -1) (undo-tree-id1631 . -1) (undo-tree-id1632 . -1) (undo-tree-id1633 . -1) (undo-tree-id1634 . -1) (undo-tree-id1635 . -1) (undo-tree-id1636 . -1) (undo-tree-id1637 . -1) (undo-tree-id1638 . -1) (undo-tree-id1639 . -1) (undo-tree-id1640 . -1) (undo-tree-id1641 . -1) (undo-tree-id1642 . -1) (undo-tree-id1643 . -1) (undo-tree-id1644 . -1) (undo-tree-id1645 . -1) (undo-tree-id1646 . -1) (undo-tree-id1647 . -1) (undo-tree-id1648 . -1) (undo-tree-id1649 . -1) (undo-tree-id1650 . -1) (undo-tree-id1651 . -1) (undo-tree-id1652 . -1) (undo-tree-id1653 . -1) (undo-tree-id1654 . -1) (undo-tree-id1655 . -1) (undo-tree-id1656 . -1) 168) nil (25595 52221 424040 653000) 0 nil])
([nil nil ((208 . 210) (t 25595 52221 442348 400000)) nil (25595 52335 12179 925000) 0 nil])
([nil nil ((291 . 292) (t 25595 52335 25947 100000)) nil (25595 52699 915029 661000) 0 nil])
([nil nil ((293 . 309) (#(" " 0 1 (fontified nil)) . 293) (292 . 293)) nil (25595 52699 915028 769000) 0 nil])
([nil nil ((309 . 311)) nil (25595 52699 915028 319000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t)) . 311) (#("n" 0 1 (fontified t)) . 311) (#("a" 0 1 (fontified t)) . 311)) nil (25595 52699 915027 657000) 0 nil])
([nil nil ((355 . 359) 357) nil (25595 52699 915026 956000) 0 nil])
([nil nil ((372 . 393)) nil (25595 52699 915026 195000) 0 nil])
([nil nil ((#("    " 0 4 (fontified nil)) . -389) (393 . 398)) nil (25595 52699 915025 824000) 0 nil])
([nil nil ((394 . 415)) nil (25595 52699 915025 173000) 0 nil])
([nil nil ((415 . 435)) nil (25595 52699 915024 752000) 0 nil])
([nil nil ((434 . 437)) nil (25595 52699 915024 321000) 0 nil])
([nil nil ((#("vertices" 0 8 (face font-lock-variable-name-face fontified t)) . -88) (undo-tree-id1683 . -8) 96) nil (25595 52699 915023 570000) 0 nil])
([nil nil ((88 . 93)) nil (25595 52699 915022 137000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 120) (#(" " 0 1 (fontified t)) . 120) (#(" " 0 1 (fontified t)) . 120)) nil (25595 52699 915021 315000) 0 nil])
([nil nil ((#("vertices" 0 8 (face font-lock-variable-name-face fontified t)) . -215) (undo-tree-id1682 . -8) 223) nil (25595 52699 915019 973000) 0 nil])
([nil nil ((215 . 220)) nil (25595 52699 915018 510000) 0 nil])
([nil nil ((#("v" 0 1 (fontified t)) . -166) (undo-tree-id1681 . -1) 167) nil (25595 52699 915017 769000) 0 nil])
([nil nil ((166 . 167)) nil (25595 52699 915016 737000) 0 nil])
([nil nil ((#("v" 0 1 (fontified t)) . -223) (undo-tree-id1680 . -1) 224) nil (25595 52699 915016 226000) 0 nil])
([nil nil ((223 . 224)) nil (25595 52699 915015 434000) 0 nil])
([nil nil ((#("v" 0 1 (fontified t)) . -311) (undo-tree-id1679 . -1) 312) nil (25595 52699 915014 743000) 0 nil])
([nil nil ((311 . 312)) nil (25595 52699 915013 791000) 0 nil])
([nil nil ((#("v" 0 1 (fontified t)) . -326) (undo-tree-id1678 . -1) 327) nil (25595 52699 915013 40000) 0 nil])
([nil nil ((326 . 327)) nil (25595 52699 915011 917000) 0 nil])
([nil nil ((427 . 433)) nil (25595 52699 915011 446000) 0 nil])
([nil nil ((#("N" 0 1 (face font-lock-string-face fontified t)) . -427) (undo-tree-id1672 . -1) (#("o" 0 1 (face font-lock-string-face fontified t)) . -428) (undo-tree-id1673 . -1) (#("d" 0 1 (face font-lock-string-face fontified t)) . -429) (undo-tree-id1674 . -1) (#("e" 0 1 (face font-lock-string-face fontified t)) . -430) (undo-tree-id1675 . -1) (#("s" 0 1 (face font-lock-string-face fontified t)) . -431) (undo-tree-id1676 . -1) (#(" " 0 1 (face font-lock-string-face fontified t)) . -432) (undo-tree-id1677 . -1) 433) nil (25595 52699 915010 284000) 0 nil])
([nil nil ((427 . 444)) nil (25595 52699 915005 806000) 0 nil])
([nil nil ((#("more " 0 5 (face font-lock-string-face fontified t)) . -434) (undo-tree-id1671 . -5) 439) nil (25595 52699 915004 473000) 0 nil])
([nil nil ((434 . 439)) nil (25595 52699 914994 574000) 0 nil])
([nil nil ((444 . 454)) nil (25595 52699 914994 144000) 0 nil])
([nil nil ((454 . 462)) nil (25595 52699 914993 623000) 0 nil])
([nil nil ((464 . 481)) nil (25595 52699 914993 41000) 0 nil])
([nil nil ((#("    " 0 4 (fontified nil)) . -477) (481 . 486)) nil (25595 52699 914991 709000) 0 nil])
([nil nil ((482 . 499)) nil (25595 52699 914990 988000) 0 nil])
([nil nil ((499 . 513)) nil (25595 52699 914990 406000) 0 nil])
([nil nil ((513 . 519)) nil (25595 52699 914989 875000) 0 nil])
([nil nil ((518 . 521)) nil (25595 52699 914989 264000) 0 nil])
([nil nil ((520 . 541)) nil (25595 52699 914988 182000) 0 nil])
([nil nil ((541 . 546)) nil (25595 52699 914984 74000) 0 nil])
([nil nil ((#("vertices" 0 8 (fontified t)) . -629) (undo-tree-id1700 . -8) (undo-tree-id1701 . -8) 637 (t 25595 52699 927964 800000)) nil (25595 52759 274588 582000) 0 nil])
([nil nil ((629 . 634)) nil (25595 52759 274586 598000) 0 nil])
([nil nil ((#("vertices" 0 8 (fontified t)) . -653) (undo-tree-id1692 . -8) (undo-tree-id1693 . -8) (undo-tree-id1694 . -8) (undo-tree-id1695 . -8) (undo-tree-id1696 . -8) (undo-tree-id1697 . -8) (undo-tree-id1698 . -8) (undo-tree-id1699 . -8) 661) nil (25595 52759 274585 406000) 0 nil])
([nil nil ((653 . 658)) nil (25595 52759 274580 196000) 0 nil])
([nil nil ((#("vertices" 0 8 (face nil fontified t)) . -812) (undo-tree-id1684 . -8) (undo-tree-id1685 . -8) (undo-tree-id1686 . -8) (undo-tree-id1687 . -8) (undo-tree-id1688 . -8) (undo-tree-id1689 . -8) (undo-tree-id1690 . -8) (undo-tree-id1691 . -8) 820) nil (25595 52759 274578 553000) 0 nil])
([nil nil ((812 . 817)) nil (25595 52759 274562 12000) 0 nil])
([nil nil ((#("o" 0 1 (face font-lock-string-face fontified t)) . -529) (undo-tree-id1702 . -1) (undo-tree-id1703 . -1) (undo-tree-id1704 . -1) (undo-tree-id1705 . -1) (undo-tree-id1706 . -1) (undo-tree-id1707 . -1) (undo-tree-id1708 . -1) (undo-tree-id1709 . -1) (undo-tree-id1710 . -1) (undo-tree-id1711 . -1) (undo-tree-id1712 . -1) (undo-tree-id1713 . -1) (undo-tree-id1714 . -1) (undo-tree-id1715 . -1) (undo-tree-id1716 . -1) (undo-tree-id1717 . -1) (undo-tree-id1718 . -1) (undo-tree-id1719 . -1) (undo-tree-id1720 . -1) 530 (t 25595 52759 288392 400000)) nil (25595 52798 619709 206000) 0 nil])
([nil nil ((700 . 709) (t 25595 52798 632647 500000)) nil (25595 52899 378070 863000) 0 nil])
([nil nil ((nil rear-nonsticky nil 737 . 738) (nil fontified nil 734 . 738) (nil fontified nil 732 . 734) (nil fontified nil 731 . 732) (nil fontified nil 730 . 731) (nil fontified nil 729 . 730) (nil fontified nil 728 . 729) (nil fontified nil 726 . 728) (nil fontified nil 723 . 726) (nil fontified nil 719 . 723) (nil fontified nil 717 . 719) (nil fontified nil 716 . 717) (nil fontified nil 715 . 716) (nil fontified nil 714 . 715) (nil fontified nil 713 . 714) (nil fontified nil 711 . 713) (nil fontified nil 709 . 711) (709 . 738)) nil (25595 52899 378069 961000) 0 nil])
([nil nil ((717 . 721)) nil (25595 52899 378068 399000) 0 nil])
([nil nil ((724 . 729)) nil (25595 52899 378067 968000) 0 nil])
([nil nil ((730 . 733)) nil (25595 52899 378067 507000) 0 nil])
([nil nil ((#("and" 0 3 (face font-lock-keyword-face fontified t)) . -735) (undo-tree-id1721 . -3) 738) nil (25595 52899 378066 375000) 0 nil])
([nil nil ((735 . 737)) nil (25595 52899 378056 967000) 0 nil])
([nil nil ((743 . 747)) nil (25595 52899 378056 596000) 0 nil])
([nil nil ((750 . 755)) nil (25595 52899 378056 326000) 0 nil])
([nil nil ((756 . 759)) nil (25595 52899 378055 905000) 0 nil])
([nil nil ((761 . 774)) nil (25595 52899 378055 574000) 0 nil])
([nil nil ((774 . 791)) nil (25595 52899 378055 304000) 0 nil])
([nil nil ((791 . 795)) nil (25595 52899 378054 963000) 0 nil])
([nil nil ((795 . 797)) nil (25595 52899 378054 582000) 0 nil])
([nil nil ((795 . 796)) nil (25595 52899 378054 282000) 0 nil])
([nil nil ((796 . 817)) nil (25595 52899 378053 761000) 0 nil])
([nil nil ((817 . 827)) nil (25595 52899 378053 270000) 0 nil])
([nil nil ((827 . 829)) nil (25595 52899 378052 268000) 0 nil])
([nil nil ((828 . 829)) nil (25595 52899 378048 671000) 0 nil])
([nil nil ((967 . 971) (#("    " 0 4 (fontified nil)) . 966) (undo-tree-id6133 . -4) (965 . 971) (t 25595 52899 393896 0)) nil (25595 53527 623835 875000) 0 nil])
([nil nil ((971 . 986)) nil (25595 53527 623834 873000) 0 nil])
([nil nil ((986 . 995)) nil (25595 53527 623834 362000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -991) (undo-tree-id6076 . -4) (undo-tree-id6077 . -4) (undo-tree-id6078 . -4) (undo-tree-id6079 . -4) (undo-tree-id6080 . -4) (undo-tree-id6081 . -4) (undo-tree-id6082 . -4) (undo-tree-id6083 . -4) (undo-tree-id6084 . -4) (undo-tree-id6085 . -4) (undo-tree-id6086 . -4) (undo-tree-id6087 . -4) (undo-tree-id6088 . -4) (undo-tree-id6089 . -4) (undo-tree-id6090 . -4) (undo-tree-id6091 . -4) (undo-tree-id6092 . -4) (undo-tree-id6093 . -4) (undo-tree-id6094 . -4) (undo-tree-id6095 . -4) (undo-tree-id6096 . -4) (undo-tree-id6097 . -4) (undo-tree-id6098 . -4) (undo-tree-id6099 . -4) (undo-tree-id6100 . -4) (undo-tree-id6101 . -4) (undo-tree-id6102 . -4) (undo-tree-id6103 . -4) (undo-tree-id6104 . -4) (undo-tree-id6105 . -4) (undo-tree-id6106 . -4) (undo-tree-id6107 . -4) (undo-tree-id6108 . -4) (undo-tree-id6109 . -4) (undo-tree-id6110 . -4) (undo-tree-id6111 . -4) (undo-tree-id6112 . -4) (undo-tree-id6113 . -4) (undo-tree-id6114 . -4) (undo-tree-id6115 . -4) (undo-tree-id6116 . -4) (undo-tree-id6117 . -4) (undo-tree-id6118 . -4) (undo-tree-id6119 . -4) (undo-tree-id6120 . -4) (undo-tree-id6121 . -4) (undo-tree-id6122 . -4) (undo-tree-id6123 . -4) (undo-tree-id6124 . -4) (undo-tree-id6125 . -4) (undo-tree-id6126 . -4) (undo-tree-id6127 . -4) (undo-tree-id6128 . -4) (undo-tree-id6129 . -4) (undo-tree-id6130 . -4) (undo-tree-id6131 . -4) (undo-tree-id6132 . -4) 995) nil (25595 53527 623832 579000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -987) (undo-tree-id6008 . -4) (undo-tree-id6009 . -4) (undo-tree-id6010 . -4) (undo-tree-id6011 . -4) (undo-tree-id6012 . -4) (undo-tree-id6013 . -4) (undo-tree-id6014 . -4) (undo-tree-id6015 . -4) (undo-tree-id6016 . -4) (undo-tree-id6017 . -4) (undo-tree-id6018 . -4) (undo-tree-id6019 . -4) (undo-tree-id6020 . -4) (undo-tree-id6021 . -4) (undo-tree-id6022 . -4) (undo-tree-id6023 . -4) (undo-tree-id6024 . -4) (undo-tree-id6025 . -4) (undo-tree-id6026 . -4) (undo-tree-id6027 . -4) (undo-tree-id6028 . -4) (undo-tree-id6029 . -4) (undo-tree-id6030 . -4) (undo-tree-id6031 . -4) (undo-tree-id6032 . -4) (undo-tree-id6033 . -4) (undo-tree-id6034 . -4) (undo-tree-id6035 . -4) (undo-tree-id6036 . -4) (undo-tree-id6037 . -4) (undo-tree-id6038 . -4) (undo-tree-id6039 . -4) (undo-tree-id6040 . -4) (undo-tree-id6041 . -4) (undo-tree-id6042 . -4) (undo-tree-id6043 . -4) (undo-tree-id6044 . -4) (undo-tree-id6045 . -4) (undo-tree-id6046 . -4) (undo-tree-id6047 . -4) (undo-tree-id6048 . -4) (undo-tree-id6049 . -4) (undo-tree-id6050 . -4) (undo-tree-id6051 . -4) (undo-tree-id6052 . -4) (undo-tree-id6053 . -4) (undo-tree-id6054 . -4) (undo-tree-id6055 . -4) (undo-tree-id6056 . -4) (undo-tree-id6057 . -4) (undo-tree-id6058 . -4) (undo-tree-id6059 . -4) (undo-tree-id6060 . -4) (undo-tree-id6061 . -4) (undo-tree-id6062 . -4) (undo-tree-id6063 . -4) (undo-tree-id6064 . -4) (undo-tree-id6065 . -4) (undo-tree-id6066 . -4) (undo-tree-id6067 . -4) (undo-tree-id6068 . -4) (undo-tree-id6069 . -4) (undo-tree-id6070 . -4) (undo-tree-id6071 . -4) (undo-tree-id6072 . -4) (undo-tree-id6073 . -4) (undo-tree-id6074 . -4) (undo-tree-id6075 . -4) 991) nil (25595 53527 623811 328000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t)) . -971) (undo-tree-id2431 . -1) (undo-tree-id2432 . -1) (undo-tree-id2433 . -1) (undo-tree-id2434 . -1) (undo-tree-id2435 . -1) (undo-tree-id2436 . -1) (undo-tree-id2437 . -1) (undo-tree-id2438 . -1) (undo-tree-id2439 . -1) (undo-tree-id2440 . -1) (undo-tree-id2441 . -1) (undo-tree-id2442 . -1) (undo-tree-id2443 . -1) (undo-tree-id2444 . -1) (undo-tree-id2445 . -1) (undo-tree-id2446 . -1) (undo-tree-id2447 . -1) (undo-tree-id2448 . -1) (undo-tree-id2449 . -1) (undo-tree-id2450 . -1) (undo-tree-id2451 . -1) (undo-tree-id2452 . -1) (undo-tree-id2453 . -1) (undo-tree-id2454 . -1) (undo-tree-id2455 . -1) (undo-tree-id2456 . -1) (undo-tree-id2457 . -1) (undo-tree-id2458 . -1) (undo-tree-id2459 . -1) (undo-tree-id2460 . -1) (undo-tree-id2461 . -1) (undo-tree-id2462 . -1) (undo-tree-id2463 . -1) (undo-tree-id2464 . -1) (undo-tree-id2465 . -1) (undo-tree-id2466 . -1) (undo-tree-id2467 . -1) (undo-tree-id2468 . -1) (undo-tree-id2469 . -1) (undo-tree-id2470 . -1) (undo-tree-id2471 . -1) (undo-tree-id2472 . -1) (undo-tree-id2473 . -1) (undo-tree-id2474 . -1) (undo-tree-id2475 . -1) (undo-tree-id2476 . -1) (undo-tree-id2477 . -1) (undo-tree-id2478 . -1) (undo-tree-id2479 . -1) (undo-tree-id2480 . -1) (undo-tree-id2481 . -1) (undo-tree-id2482 . -1) (undo-tree-id2483 . -1) (undo-tree-id2484 . -1) (undo-tree-id2485 . -1) (undo-tree-id2486 . -1) (undo-tree-id2487 . -1) (undo-tree-id2488 . -1) (undo-tree-id2489 . -1) (undo-tree-id2490 . -1) (undo-tree-id2491 . -1) (undo-tree-id2492 . -1) (undo-tree-id2493 . -1) (undo-tree-id2494 . -1) (undo-tree-id2495 . -1) (undo-tree-id2496 . -1) (undo-tree-id2497 . -1) (undo-tree-id2498 . -1) (undo-tree-id2499 . -1) (undo-tree-id2500 . -1) (undo-tree-id2501 . -1) (undo-tree-id2502 . -1) (undo-tree-id2503 . -1) (undo-tree-id2504 . -1) (undo-tree-id2505 . -1) (undo-tree-id2506 . -1) (undo-tree-id2507 . -1) (undo-tree-id2508 . -1) (undo-tree-id2509 . -1) (undo-tree-id2510 . -1) (undo-tree-id2511 . -1) (undo-tree-id2512 . -1) (undo-tree-id2513 . -1) (undo-tree-id2514 . -1) (undo-tree-id2515 . -1) (undo-tree-id2516 . -1) (undo-tree-id2517 . -1) (undo-tree-id2518 . -1) (undo-tree-id2519 . -1) (undo-tree-id2520 . -1) (undo-tree-id2521 . -1) (undo-tree-id2522 . -1) (undo-tree-id2523 . -1) (undo-tree-id2524 . -1) (undo-tree-id2525 . -1) (undo-tree-id2526 . -1) (undo-tree-id2527 . -1) (undo-tree-id2528 . -1) (undo-tree-id2529 . -1) (undo-tree-id2530 . -1) (undo-tree-id2531 . -1) (undo-tree-id2532 . -1) (undo-tree-id2533 . -1) (undo-tree-id2534 . -1) (undo-tree-id2535 . -1) (undo-tree-id2536 . -1) (undo-tree-id2537 . -1) (undo-tree-id2538 . -1) (undo-tree-id2539 . -1) (undo-tree-id2540 . -1) (undo-tree-id2541 . -1) (undo-tree-id2542 . -1) (undo-tree-id2543 . -1) (undo-tree-id2544 . -1) (undo-tree-id2545 . -1) (undo-tree-id2546 . -1) (undo-tree-id2547 . -1) (undo-tree-id2548 . -1) (undo-tree-id2549 . -1) (undo-tree-id2550 . -1) (undo-tree-id2551 . -1) (undo-tree-id2552 . -1) (undo-tree-id2553 . -1) (undo-tree-id2554 . -1) (undo-tree-id2555 . -1) (undo-tree-id2556 . -1) (undo-tree-id2557 . -1) (undo-tree-id2558 . -1) (undo-tree-id2559 . -1) (undo-tree-id2560 . -1) (undo-tree-id2561 . -1) (undo-tree-id2562 . -1) (undo-tree-id2563 . -1) (undo-tree-id2564 . -1) (undo-tree-id2565 . -1) (undo-tree-id2566 . -1) (undo-tree-id2567 . -1) (undo-tree-id2568 . -1) (undo-tree-id2569 . -1) (undo-tree-id2570 . -1) (undo-tree-id2571 . -1) (undo-tree-id2572 . -1) (undo-tree-id2573 . -1) (undo-tree-id2574 . -1) (undo-tree-id2575 . -1) (undo-tree-id2576 . -1) (undo-tree-id2577 . -1) (undo-tree-id2578 . -1) (undo-tree-id2579 . -1) (undo-tree-id2580 . -1) (undo-tree-id2581 . -1) (undo-tree-id2582 . -1) (undo-tree-id2583 . -1) (undo-tree-id2584 . -1) (undo-tree-id2585 . -1) (undo-tree-id2586 . -1) (undo-tree-id2587 . -1) (undo-tree-id2588 . -1) (undo-tree-id2589 . -1) (undo-tree-id2590 . -1) (undo-tree-id2591 . -1) (undo-tree-id2592 . -1) (undo-tree-id2593 . -1) (undo-tree-id2594 . -1) (undo-tree-id2595 . -1) (undo-tree-id2596 . -1) (undo-tree-id2597 . -1) (undo-tree-id2598 . -1) (undo-tree-id2599 . -1) (undo-tree-id2600 . -1) (undo-tree-id2601 . -1) (undo-tree-id2602 . -1) (undo-tree-id2603 . -1) (undo-tree-id2604 . -1) (undo-tree-id2605 . -1) (undo-tree-id2606 . -1) (undo-tree-id2607 . -1) (undo-tree-id2608 . -1) (undo-tree-id2609 . -1) (undo-tree-id2610 . -1) (undo-tree-id2611 . -1) (undo-tree-id2612 . -1) (undo-tree-id2613 . -1) (undo-tree-id2614 . -1) (undo-tree-id2615 . -1) (undo-tree-id2616 . -1) (undo-tree-id2617 . -1) (undo-tree-id2618 . -1) (undo-tree-id2619 . -1) (undo-tree-id2620 . -1) (undo-tree-id2621 . -1) (undo-tree-id2622 . -1) (undo-tree-id2623 . -1) (undo-tree-id2624 . -1) (undo-tree-id2625 . -1) (undo-tree-id2626 . -1) (undo-tree-id2627 . -1) (undo-tree-id2628 . -1) (undo-tree-id2629 . -1) (undo-tree-id2630 . -1) (undo-tree-id2631 . -1) (undo-tree-id2632 . -1) (undo-tree-id2633 . -1) (undo-tree-id2634 . -1) (undo-tree-id2635 . -1) (undo-tree-id2636 . -1) (undo-tree-id2637 . -1) (undo-tree-id2638 . -1) (undo-tree-id2639 . -1) (undo-tree-id2640 . -1) (undo-tree-id2641 . -1) (undo-tree-id2642 . -1) (undo-tree-id2643 . -1) (undo-tree-id2644 . -1) (undo-tree-id2645 . -1) (undo-tree-id2646 . -1) (undo-tree-id2647 . -1) (undo-tree-id2648 . -1) (undo-tree-id2649 . -1) (undo-tree-id2650 . -1) (undo-tree-id2651 . -1) (undo-tree-id2652 . -1) (undo-tree-id2653 . -1) (undo-tree-id2654 . -1) (undo-tree-id2655 . -1) (undo-tree-id2656 . -1) (undo-tree-id2657 . -1) (undo-tree-id2658 . -1) (undo-tree-id2659 . -1) (undo-tree-id2660 . -1) (undo-tree-id2661 . -1) (undo-tree-id2662 . -1) (undo-tree-id2663 . -1) (undo-tree-id2664 . -1) (undo-tree-id2665 . -1) (undo-tree-id2666 . -1) (undo-tree-id2667 . -1) (undo-tree-id2668 . -1) (undo-tree-id2669 . -1) (undo-tree-id2670 . -1) (undo-tree-id2671 . -1) (undo-tree-id2672 . -1) (undo-tree-id2673 . -1) (undo-tree-id2674 . -1) (undo-tree-id2675 . -1) (undo-tree-id2676 . -1) (undo-tree-id2677 . -1) (undo-tree-id2678 . -1) (undo-tree-id2679 . -1) (undo-tree-id2680 . -1) (undo-tree-id2681 . -1) (undo-tree-id2682 . -1) (undo-tree-id2683 . -1) (undo-tree-id2684 . -1) (undo-tree-id2685 . -1) (undo-tree-id2686 . -1) (undo-tree-id2687 . -1) (undo-tree-id2688 . -1) (undo-tree-id2689 . -1) (undo-tree-id2690 . -1) (undo-tree-id2691 . -1) (undo-tree-id2692 . -1) (undo-tree-id2693 . -1) (undo-tree-id2694 . -1) (undo-tree-id2695 . -1) (undo-tree-id2696 . -1) (undo-tree-id2697 . -1) (undo-tree-id2698 . -1) (undo-tree-id2699 . -1) (undo-tree-id2700 . -1) (undo-tree-id2701 . -1) (undo-tree-id2702 . -1) (undo-tree-id2703 . -1) (undo-tree-id2704 . -1) (undo-tree-id2705 . -1) (undo-tree-id2706 . -1) (undo-tree-id2707 . -1) (undo-tree-id2708 . -1) (undo-tree-id2709 . -1) (undo-tree-id2710 . -1) (undo-tree-id2711 . -1) (undo-tree-id2712 . -1) (undo-tree-id2713 . -1) (undo-tree-id2714 . -1) (undo-tree-id2715 . -1) (undo-tree-id2716 . -1) (undo-tree-id2717 . -1) (undo-tree-id2718 . -1) (undo-tree-id2719 . -1) (undo-tree-id2720 . -1) (undo-tree-id2721 . -1) (undo-tree-id2722 . -1) (undo-tree-id2723 . -1) (undo-tree-id2724 . -1) (undo-tree-id2725 . -1) (undo-tree-id2726 . -1) (undo-tree-id2727 . -1) (undo-tree-id2728 . -1) (undo-tree-id2729 . -1) (undo-tree-id2730 . -1) (undo-tree-id2731 . -1) (undo-tree-id2732 . -1) (undo-tree-id2733 . -1) (undo-tree-id2734 . -1) (undo-tree-id2735 . -1) (undo-tree-id2736 . -1) (#("e" 0 1 (fontified t)) . -972) (undo-tree-id2737 . -1) (undo-tree-id2738 . -1) (undo-tree-id2739 . -1) (undo-tree-id2740 . -1) (undo-tree-id2741 . -1) (undo-tree-id2742 . -1) (undo-tree-id2743 . -1) (undo-tree-id2744 . -1) (undo-tree-id2745 . -1) (undo-tree-id2746 . -1) (undo-tree-id2747 . -1) (undo-tree-id2748 . -1) (undo-tree-id2749 . -1) (undo-tree-id2750 . -1) (undo-tree-id2751 . -1) (undo-tree-id2752 . -1) (undo-tree-id2753 . -1) (undo-tree-id2754 . -1) (undo-tree-id2755 . -1) (undo-tree-id2756 . -1) (undo-tree-id2757 . -1) (undo-tree-id2758 . -1) (undo-tree-id2759 . -1) (undo-tree-id2760 . -1) (undo-tree-id2761 . -1) (undo-tree-id2762 . -1) (undo-tree-id2763 . -1) (undo-tree-id2764 . -1) (undo-tree-id2765 . -1) (undo-tree-id2766 . -1) (undo-tree-id2767 . -1) (undo-tree-id2768 . -1) (undo-tree-id2769 . -1) (undo-tree-id2770 . -1) (undo-tree-id2771 . -1) (undo-tree-id2772 . -1) (undo-tree-id2773 . -1) (undo-tree-id2774 . -1) (undo-tree-id2775 . -1) (undo-tree-id2776 . -1) (undo-tree-id2777 . -1) (undo-tree-id2778 . -1) (undo-tree-id2779 . -1) (undo-tree-id2780 . -1) (undo-tree-id2781 . -1) (undo-tree-id2782 . -1) (undo-tree-id2783 . -1) (undo-tree-id2784 . -1) (undo-tree-id2785 . -1) (undo-tree-id2786 . -1) (undo-tree-id2787 . -1) (undo-tree-id2788 . -1) (undo-tree-id2789 . -1) (undo-tree-id2790 . -1) (undo-tree-id2791 . -1) (undo-tree-id2792 . -1) (undo-tree-id2793 . -1) (undo-tree-id2794 . -1) (undo-tree-id2795 . -1) (undo-tree-id2796 . -1) (undo-tree-id2797 . -1) (undo-tree-id2798 . -1) (undo-tree-id2799 . -1) (undo-tree-id2800 . -1) (undo-tree-id2801 . -1) (undo-tree-id2802 . -1) (undo-tree-id2803 . -1) (undo-tree-id2804 . -1) (undo-tree-id2805 . -1) (undo-tree-id2806 . -1) (undo-tree-id2807 . -1) (undo-tree-id2808 . -1) (undo-tree-id2809 . -1) (undo-tree-id2810 . -1) (undo-tree-id2811 . -1) (undo-tree-id2812 . -1) (undo-tree-id2813 . -1) (undo-tree-id2814 . -1) (undo-tree-id2815 . -1) (undo-tree-id2816 . -1) (undo-tree-id2817 . -1) (undo-tree-id2818 . -1) (undo-tree-id2819 . -1) (undo-tree-id2820 . -1) (undo-tree-id2821 . -1) (undo-tree-id2822 . -1) (undo-tree-id2823 . -1) (undo-tree-id2824 . -1) (undo-tree-id2825 . -1) (undo-tree-id2826 . -1) (undo-tree-id2827 . -1) (undo-tree-id2828 . -1) (undo-tree-id2829 . -1) (undo-tree-id2830 . -1) (undo-tree-id2831 . -1) (undo-tree-id2832 . -1) (undo-tree-id2833 . -1) (undo-tree-id2834 . -1) (undo-tree-id2835 . -1) (undo-tree-id2836 . -1) (undo-tree-id2837 . -1) (undo-tree-id2838 . -1) (undo-tree-id2839 . -1) (undo-tree-id2840 . -1) (undo-tree-id2841 . -1) (undo-tree-id2842 . -1) (undo-tree-id2843 . -1) (undo-tree-id2844 . -1) (undo-tree-id2845 . -1) (undo-tree-id2846 . -1) (undo-tree-id2847 . -1) (undo-tree-id2848 . -1) (undo-tree-id2849 . -1) (undo-tree-id2850 . -1) (undo-tree-id2851 . -1) (undo-tree-id2852 . -1) (undo-tree-id2853 . -1) (undo-tree-id2854 . -1) (undo-tree-id2855 . -1) (undo-tree-id2856 . -1) (undo-tree-id2857 . -1) (undo-tree-id2858 . -1) (undo-tree-id2859 . -1) (undo-tree-id2860 . -1) (undo-tree-id2861 . -1) (undo-tree-id2862 . -1) (undo-tree-id2863 . -1) (undo-tree-id2864 . -1) (undo-tree-id2865 . -1) (undo-tree-id2866 . -1) (undo-tree-id2867 . -1) (undo-tree-id2868 . -1) (undo-tree-id2869 . -1) (undo-tree-id2870 . -1) (undo-tree-id2871 . -1) (undo-tree-id2872 . -1) (undo-tree-id2873 . -1) (undo-tree-id2874 . -1) (undo-tree-id2875 . -1) (undo-tree-id2876 . -1) (undo-tree-id2877 . -1) (undo-tree-id2878 . -1) (undo-tree-id2879 . -1) (undo-tree-id2880 . -1) (undo-tree-id2881 . -1) (undo-tree-id2882 . -1) (undo-tree-id2883 . -1) (undo-tree-id2884 . -1) (undo-tree-id2885 . -1) (undo-tree-id2886 . -1) (undo-tree-id2887 . -1) (undo-tree-id2888 . -1) (undo-tree-id2889 . -1) (undo-tree-id2890 . -1) (undo-tree-id2891 . -1) (undo-tree-id2892 . -1) (undo-tree-id2893 . -1) (undo-tree-id2894 . -1) (undo-tree-id2895 . -1) (undo-tree-id2896 . -1) (undo-tree-id2897 . -1) (undo-tree-id2898 . -1) (undo-tree-id2899 . -1) (undo-tree-id2900 . -1) (undo-tree-id2901 . -1) (undo-tree-id2902 . -1) (undo-tree-id2903 . -1) (undo-tree-id2904 . -1) (undo-tree-id2905 . -1) (undo-tree-id2906 . -1) (undo-tree-id2907 . -1) (undo-tree-id2908 . -1) (undo-tree-id2909 . -1) (undo-tree-id2910 . -1) (undo-tree-id2911 . -1) (undo-tree-id2912 . -1) (undo-tree-id2913 . -1) (undo-tree-id2914 . -1) (undo-tree-id2915 . -1) (undo-tree-id2916 . -1) (undo-tree-id2917 . -1) (undo-tree-id2918 . -1) (undo-tree-id2919 . -1) (undo-tree-id2920 . -1) (undo-tree-id2921 . -1) (undo-tree-id2922 . -1) (undo-tree-id2923 . -1) (undo-tree-id2924 . -1) (undo-tree-id2925 . -1) (undo-tree-id2926 . -1) (undo-tree-id2927 . -1) (undo-tree-id2928 . -1) (undo-tree-id2929 . -1) (undo-tree-id2930 . -1) (undo-tree-id2931 . -1) (undo-tree-id2932 . -1) (undo-tree-id2933 . -1) (undo-tree-id2934 . -1) (undo-tree-id2935 . -1) (undo-tree-id2936 . -1) (undo-tree-id2937 . -1) (undo-tree-id2938 . -1) (undo-tree-id2939 . -1) (undo-tree-id2940 . -1) (undo-tree-id2941 . -1) (undo-tree-id2942 . -1) (undo-tree-id2943 . -1) (undo-tree-id2944 . -1) (undo-tree-id2945 . -1) (undo-tree-id2946 . -1) (undo-tree-id2947 . -1) (undo-tree-id2948 . -1) (undo-tree-id2949 . -1) (undo-tree-id2950 . -1) (undo-tree-id2951 . -1) (undo-tree-id2952 . -1) (undo-tree-id2953 . -1) (undo-tree-id2954 . -1) (undo-tree-id2955 . -1) (undo-tree-id2956 . -1) (undo-tree-id2957 . -1) (undo-tree-id2958 . -1) (undo-tree-id2959 . -1) (undo-tree-id2960 . -1) (undo-tree-id2961 . -1) (undo-tree-id2962 . -1) (undo-tree-id2963 . -1) (undo-tree-id2964 . -1) (undo-tree-id2965 . -1) (undo-tree-id2966 . -1) (undo-tree-id2967 . -1) (undo-tree-id2968 . -1) (undo-tree-id2969 . -1) (undo-tree-id2970 . -1) (undo-tree-id2971 . -1) (undo-tree-id2972 . -1) (undo-tree-id2973 . -1) (undo-tree-id2974 . -1) (undo-tree-id2975 . -1) (undo-tree-id2976 . -1) (undo-tree-id2977 . -1) (undo-tree-id2978 . -1) (undo-tree-id2979 . -1) (undo-tree-id2980 . -1) (undo-tree-id2981 . -1) (undo-tree-id2982 . -1) (undo-tree-id2983 . -1) (undo-tree-id2984 . -1) (undo-tree-id2985 . -1) (undo-tree-id2986 . -1) (undo-tree-id2987 . -1) (undo-tree-id2988 . -1) (undo-tree-id2989 . -1) (undo-tree-id2990 . -1) (undo-tree-id2991 . -1) (undo-tree-id2992 . -1) (undo-tree-id2993 . -1) (undo-tree-id2994 . -1) (undo-tree-id2995 . -1) (undo-tree-id2996 . -1) (undo-tree-id2997 . -1) (undo-tree-id2998 . -1) (undo-tree-id2999 . -1) (undo-tree-id3000 . -1) (undo-tree-id3001 . -1) (undo-tree-id3002 . -1) (undo-tree-id3003 . -1) (undo-tree-id3004 . -1) (undo-tree-id3005 . -1) (undo-tree-id3006 . -1) (undo-tree-id3007 . -1) (undo-tree-id3008 . -1) (undo-tree-id3009 . -1) (undo-tree-id3010 . -1) (undo-tree-id3011 . -1) (undo-tree-id3012 . -1) (undo-tree-id3013 . -1) (undo-tree-id3014 . -1) (undo-tree-id3015 . -1) (undo-tree-id3016 . -1) (undo-tree-id3017 . -1) (undo-tree-id3018 . -1) (undo-tree-id3019 . -1) (undo-tree-id3020 . -1) (undo-tree-id3021 . -1) (undo-tree-id3022 . -1) (undo-tree-id3023 . -1) (undo-tree-id3024 . -1) (undo-tree-id3025 . -1) (undo-tree-id3026 . -1) (undo-tree-id3027 . -1) (undo-tree-id3028 . -1) (undo-tree-id3029 . -1) (undo-tree-id3030 . -1) (undo-tree-id3031 . -1) (undo-tree-id3032 . -1) (undo-tree-id3033 . -1) (#("f" 0 1 (face font-lock-keyword-face fontified t)) . -973) (undo-tree-id3034 . -1) (undo-tree-id3035 . -1) (undo-tree-id3036 . -1) (undo-tree-id3037 . -1) (undo-tree-id3038 . -1) (undo-tree-id3039 . -1) (undo-tree-id3040 . -1) (undo-tree-id3041 . -1) (undo-tree-id3042 . -1) (undo-tree-id3043 . -1) (undo-tree-id3044 . -1) (undo-tree-id3045 . -1) (undo-tree-id3046 . -1) (undo-tree-id3047 . -1) (undo-tree-id3048 . -1) (undo-tree-id3049 . -1) (undo-tree-id3050 . -1) (undo-tree-id3051 . -1) (undo-tree-id3052 . -1) (undo-tree-id3053 . -1) (undo-tree-id3054 . -1) (undo-tree-id3055 . -1) (undo-tree-id3056 . -1) (undo-tree-id3057 . -1) (undo-tree-id3058 . -1) (undo-tree-id3059 . -1) (undo-tree-id3060 . -1) (undo-tree-id3061 . -1) (undo-tree-id3062 . -1) (undo-tree-id3063 . -1) (undo-tree-id3064 . -1) (undo-tree-id3065 . -1) (undo-tree-id3066 . -1) (undo-tree-id3067 . -1) (undo-tree-id3068 . -1) (undo-tree-id3069 . -1) (undo-tree-id3070 . -1) (undo-tree-id3071 . -1) (undo-tree-id3072 . -1) (undo-tree-id3073 . -1) (undo-tree-id3074 . -1) (undo-tree-id3075 . -1) (undo-tree-id3076 . -1) (undo-tree-id3077 . -1) (undo-tree-id3078 . -1) (undo-tree-id3079 . -1) (undo-tree-id3080 . -1) (undo-tree-id3081 . -1) (undo-tree-id3082 . -1) (undo-tree-id3083 . -1) (undo-tree-id3084 . -1) (undo-tree-id3085 . -1) (undo-tree-id3086 . -1) (undo-tree-id3087 . -1) (undo-tree-id3088 . -1) (undo-tree-id3089 . -1) (undo-tree-id3090 . -1) (undo-tree-id3091 . -1) (undo-tree-id3092 . -1) (undo-tree-id3093 . -1) (undo-tree-id3094 . -1) (undo-tree-id3095 . -1) (undo-tree-id3096 . -1) (undo-tree-id3097 . -1) (undo-tree-id3098 . -1) (undo-tree-id3099 . -1) (undo-tree-id3100 . -1) (undo-tree-id3101 . -1) (undo-tree-id3102 . -1) (undo-tree-id3103 . -1) (undo-tree-id3104 . -1) (undo-tree-id3105 . -1) (undo-tree-id3106 . -1) (undo-tree-id3107 . -1) (undo-tree-id3108 . -1) (undo-tree-id3109 . -1) (undo-tree-id3110 . -1) (undo-tree-id3111 . -1) (undo-tree-id3112 . -1) (undo-tree-id3113 . -1) (undo-tree-id3114 . -1) (undo-tree-id3115 . -1) (undo-tree-id3116 . -1) (undo-tree-id3117 . -1) (undo-tree-id3118 . -1) (undo-tree-id3119 . -1) (undo-tree-id3120 . -1) (undo-tree-id3121 . -1) (undo-tree-id3122 . -1) (undo-tree-id3123 . -1) (undo-tree-id3124 . -1) (undo-tree-id3125 . -1) (undo-tree-id3126 . -1) (undo-tree-id3127 . -1) (undo-tree-id3128 . -1) (undo-tree-id3129 . -1) (undo-tree-id3130 . -1) (undo-tree-id3131 . -1) (undo-tree-id3132 . -1) (undo-tree-id3133 . -1) (undo-tree-id3134 . -1) (undo-tree-id3135 . -1) (undo-tree-id3136 . -1) (undo-tree-id3137 . -1) (undo-tree-id3138 . -1) (undo-tree-id3139 . -1) (undo-tree-id3140 . -1) (undo-tree-id3141 . -1) (undo-tree-id3142 . -1) (undo-tree-id3143 . -1) (undo-tree-id3144 . -1) (undo-tree-id3145 . -1) (undo-tree-id3146 . -1) (undo-tree-id3147 . -1) (undo-tree-id3148 . -1) (undo-tree-id3149 . -1) (undo-tree-id3150 . -1) (undo-tree-id3151 . -1) (undo-tree-id3152 . -1) (undo-tree-id3153 . -1) (undo-tree-id3154 . -1) (undo-tree-id3155 . -1) (undo-tree-id3156 . -1) (undo-tree-id3157 . -1) (undo-tree-id3158 . -1) (undo-tree-id3159 . -1) (undo-tree-id3160 . -1) (undo-tree-id3161 . -1) (undo-tree-id3162 . -1) (undo-tree-id3163 . -1) (undo-tree-id3164 . -1) (undo-tree-id3165 . -1) (undo-tree-id3166 . -1) (undo-tree-id3167 . -1) (undo-tree-id3168 . -1) (undo-tree-id3169 . -1) (undo-tree-id3170 . -1) (undo-tree-id3171 . -1) (undo-tree-id3172 . -1) (undo-tree-id3173 . -1) (undo-tree-id3174 . -1) (undo-tree-id3175 . -1) (undo-tree-id3176 . -1) (undo-tree-id3177 . -1) (undo-tree-id3178 . -1) (undo-tree-id3179 . -1) (undo-tree-id3180 . -1) (undo-tree-id3181 . -1) (undo-tree-id3182 . -1) (undo-tree-id3183 . -1) (undo-tree-id3184 . -1) (undo-tree-id3185 . -1) (undo-tree-id3186 . -1) (undo-tree-id3187 . -1) (undo-tree-id3188 . -1) (undo-tree-id3189 . -1) (undo-tree-id3190 . -1) (undo-tree-id3191 . -1) (undo-tree-id3192 . -1) (undo-tree-id3193 . -1) (undo-tree-id3194 . -1) (undo-tree-id3195 . -1) (undo-tree-id3196 . -1) (undo-tree-id3197 . -1) (undo-tree-id3198 . -1) (undo-tree-id3199 . -1) (undo-tree-id3200 . -1) (undo-tree-id3201 . -1) (undo-tree-id3202 . -1) (undo-tree-id3203 . -1) (undo-tree-id3204 . -1) (undo-tree-id3205 . -1) (undo-tree-id3206 . -1) (undo-tree-id3207 . -1) (undo-tree-id3208 . -1) (undo-tree-id3209 . -1) (undo-tree-id3210 . -1) (undo-tree-id3211 . -1) (undo-tree-id3212 . -1) (undo-tree-id3213 . -1) (undo-tree-id3214 . -1) (undo-tree-id3215 . -1) (undo-tree-id3216 . -1) (undo-tree-id3217 . -1) (undo-tree-id3218 . -1) (undo-tree-id3219 . -1) (undo-tree-id3220 . -1) (undo-tree-id3221 . -1) (undo-tree-id3222 . -1) (undo-tree-id3223 . -1) (undo-tree-id3224 . -1) (undo-tree-id3225 . -1) (undo-tree-id3226 . -1) (undo-tree-id3227 . -1) (undo-tree-id3228 . -1) (undo-tree-id3229 . -1) (undo-tree-id3230 . -1) (undo-tree-id3231 . -1) (undo-tree-id3232 . -1) (undo-tree-id3233 . -1) (undo-tree-id3234 . -1) (undo-tree-id3235 . -1) (undo-tree-id3236 . -1) (undo-tree-id3237 . -1) (undo-tree-id3238 . -1) (undo-tree-id3239 . -1) (undo-tree-id3240 . -1) (undo-tree-id3241 . -1) (undo-tree-id3242 . -1) (undo-tree-id3243 . -1) (undo-tree-id3244 . -1) (undo-tree-id3245 . -1) (undo-tree-id3246 . -1) (undo-tree-id3247 . -1) (undo-tree-id3248 . -1) (undo-tree-id3249 . -1) (undo-tree-id3250 . -1) (undo-tree-id3251 . -1) (undo-tree-id3252 . -1) (undo-tree-id3253 . -1) (undo-tree-id3254 . -1) (undo-tree-id3255 . -1) (undo-tree-id3256 . -1) (undo-tree-id3257 . -1) (undo-tree-id3258 . -1) (undo-tree-id3259 . -1) (undo-tree-id3260 . -1) (undo-tree-id3261 . -1) (undo-tree-id3262 . -1) (undo-tree-id3263 . -1) (undo-tree-id3264 . -1) (undo-tree-id3265 . -1) (undo-tree-id3266 . -1) (undo-tree-id3267 . -1) (undo-tree-id3268 . -1) (undo-tree-id3269 . -1) (undo-tree-id3270 . -1) (undo-tree-id3271 . -1) (undo-tree-id3272 . -1) (undo-tree-id3273 . -1) (undo-tree-id3274 . -1) (undo-tree-id3275 . -1) (undo-tree-id3276 . -1) (undo-tree-id3277 . -1) (undo-tree-id3278 . -1) (undo-tree-id3279 . -1) (undo-tree-id3280 . -1) (undo-tree-id3281 . -1) (undo-tree-id3282 . -1) (undo-tree-id3283 . -1) (undo-tree-id3284 . -1) (undo-tree-id3285 . -1) (undo-tree-id3286 . -1) (undo-tree-id3287 . -1) (undo-tree-id3288 . -1) (undo-tree-id3289 . -1) (undo-tree-id3290 . -1) (undo-tree-id3291 . -1) (undo-tree-id3292 . -1) (undo-tree-id3293 . -1) (undo-tree-id3294 . -1) (undo-tree-id3295 . -1) (undo-tree-id3296 . -1) (undo-tree-id3297 . -1) (undo-tree-id3298 . -1) (undo-tree-id3299 . -1) (undo-tree-id3300 . -1) (undo-tree-id3301 . -1) (undo-tree-id3302 . -1) (undo-tree-id3303 . -1) (undo-tree-id3304 . -1) (undo-tree-id3305 . -1) (undo-tree-id3306 . -1) (undo-tree-id3307 . -1) (undo-tree-id3308 . -1) (undo-tree-id3309 . -1) (undo-tree-id3310 . -1) (undo-tree-id3311 . -1) (undo-tree-id3312 . -1) (undo-tree-id3313 . -1) (undo-tree-id3314 . -1) (undo-tree-id3315 . -1) (undo-tree-id3316 . -1) (undo-tree-id3317 . -1) (undo-tree-id3318 . -1) (undo-tree-id3319 . -1) (undo-tree-id3320 . -1) (undo-tree-id3321 . -1) (#(" " 0 1 (fontified t)) . -974) (undo-tree-id3322 . -1) (undo-tree-id3323 . -1) (undo-tree-id3324 . -1) (undo-tree-id3325 . -1) (undo-tree-id3326 . -1) (undo-tree-id3327 . -1) (undo-tree-id3328 . -1) (undo-tree-id3329 . -1) (undo-tree-id3330 . -1) (undo-tree-id3331 . -1) (undo-tree-id3332 . -1) (undo-tree-id3333 . -1) (undo-tree-id3334 . -1) (undo-tree-id3335 . -1) (undo-tree-id3336 . -1) (undo-tree-id3337 . -1) (undo-tree-id3338 . -1) (undo-tree-id3339 . -1) (undo-tree-id3340 . -1) (undo-tree-id3341 . -1) (undo-tree-id3342 . -1) (undo-tree-id3343 . -1) (undo-tree-id3344 . -1) (undo-tree-id3345 . -1) (undo-tree-id3346 . -1) (undo-tree-id3347 . -1) (undo-tree-id3348 . -1) (undo-tree-id3349 . -1) (undo-tree-id3350 . -1) (undo-tree-id3351 . -1) (undo-tree-id3352 . -1) (undo-tree-id3353 . -1) (undo-tree-id3354 . -1) (undo-tree-id3355 . -1) (undo-tree-id3356 . -1) (undo-tree-id3357 . -1) (undo-tree-id3358 . -1) (undo-tree-id3359 . -1) (undo-tree-id3360 . -1) (undo-tree-id3361 . -1) (undo-tree-id3362 . -1) (undo-tree-id3363 . -1) (undo-tree-id3364 . -1) (undo-tree-id3365 . -1) (undo-tree-id3366 . -1) (undo-tree-id3367 . -1) (undo-tree-id3368 . -1) (undo-tree-id3369 . -1) (undo-tree-id3370 . -1) (undo-tree-id3371 . -1) (undo-tree-id3372 . -1) (undo-tree-id3373 . -1) (undo-tree-id3374 . -1) (undo-tree-id3375 . -1) (undo-tree-id3376 . -1) (undo-tree-id3377 . -1) (undo-tree-id3378 . -1) (undo-tree-id3379 . -1) (undo-tree-id3380 . -1) (undo-tree-id3381 . -1) (undo-tree-id3382 . -1) (undo-tree-id3383 . -1) (undo-tree-id3384 . -1) (undo-tree-id3385 . -1) (undo-tree-id3386 . -1) (undo-tree-id3387 . -1) (undo-tree-id3388 . -1) (undo-tree-id3389 . -1) (undo-tree-id3390 . -1) (undo-tree-id3391 . -1) (undo-tree-id3392 . -1) (undo-tree-id3393 . -1) (undo-tree-id3394 . -1) (undo-tree-id3395 . -1) (undo-tree-id3396 . -1) (undo-tree-id3397 . -1) (undo-tree-id3398 . -1) (undo-tree-id3399 . -1) (undo-tree-id3400 . -1) (undo-tree-id3401 . -1) (undo-tree-id3402 . -1) (undo-tree-id3403 . -1) (undo-tree-id3404 . -1) (undo-tree-id3405 . -1) (undo-tree-id3406 . -1) (undo-tree-id3407 . -1) (undo-tree-id3408 . -1) (undo-tree-id3409 . -1) (undo-tree-id3410 . -1) (undo-tree-id3411 . -1) (undo-tree-id3412 . -1) (undo-tree-id3413 . -1) (undo-tree-id3414 . -1) (undo-tree-id3415 . -1) (undo-tree-id3416 . -1) (undo-tree-id3417 . -1) (undo-tree-id3418 . -1) (undo-tree-id3419 . -1) (undo-tree-id3420 . -1) (undo-tree-id3421 . -1) (undo-tree-id3422 . -1) (undo-tree-id3423 . -1) (undo-tree-id3424 . -1) (undo-tree-id3425 . -1) (undo-tree-id3426 . -1) (undo-tree-id3427 . -1) (undo-tree-id3428 . -1) (undo-tree-id3429 . -1) (undo-tree-id3430 . -1) (undo-tree-id3431 . -1) (undo-tree-id3432 . -1) (undo-tree-id3433 . -1) (undo-tree-id3434 . -1) (undo-tree-id3435 . -1) (undo-tree-id3436 . -1) (undo-tree-id3437 . -1) (undo-tree-id3438 . -1) (undo-tree-id3439 . -1) (undo-tree-id3440 . -1) (undo-tree-id3441 . -1) (undo-tree-id3442 . -1) (undo-tree-id3443 . -1) (undo-tree-id3444 . -1) (undo-tree-id3445 . -1) (undo-tree-id3446 . -1) (undo-tree-id3447 . -1) (undo-tree-id3448 . -1) (undo-tree-id3449 . -1) (undo-tree-id3450 . -1) (undo-tree-id3451 . -1) (undo-tree-id3452 . -1) (undo-tree-id3453 . -1) (undo-tree-id3454 . -1) (undo-tree-id3455 . -1) (undo-tree-id3456 . -1) (undo-tree-id3457 . -1) (undo-tree-id3458 . -1) (undo-tree-id3459 . -1) (undo-tree-id3460 . -1) (undo-tree-id3461 . -1) (undo-tree-id3462 . -1) (undo-tree-id3463 . -1) (undo-tree-id3464 . -1) (undo-tree-id3465 . -1) (undo-tree-id3466 . -1) (undo-tree-id3467 . -1) (undo-tree-id3468 . -1) (undo-tree-id3469 . -1) (undo-tree-id3470 . -1) (undo-tree-id3471 . -1) (undo-tree-id3472 . -1) (undo-tree-id3473 . -1) (undo-tree-id3474 . -1) (undo-tree-id3475 . -1) (undo-tree-id3476 . -1) (undo-tree-id3477 . -1) (undo-tree-id3478 . -1) (undo-tree-id3479 . -1) (undo-tree-id3480 . -1) (undo-tree-id3481 . -1) (undo-tree-id3482 . -1) (undo-tree-id3483 . -1) (undo-tree-id3484 . -1) (undo-tree-id3485 . -1) (undo-tree-id3486 . -1) (undo-tree-id3487 . -1) (undo-tree-id3488 . -1) (undo-tree-id3489 . -1) (undo-tree-id3490 . -1) (undo-tree-id3491 . -1) (undo-tree-id3492 . -1) (undo-tree-id3493 . -1) (undo-tree-id3494 . -1) (undo-tree-id3495 . -1) (undo-tree-id3496 . -1) (undo-tree-id3497 . -1) (undo-tree-id3498 . -1) (undo-tree-id3499 . -1) (undo-tree-id3500 . -1) (undo-tree-id3501 . -1) (undo-tree-id3502 . -1) (undo-tree-id3503 . -1) (undo-tree-id3504 . -1) (undo-tree-id3505 . -1) (undo-tree-id3506 . -1) (undo-tree-id3507 . -1) (undo-tree-id3508 . -1) (undo-tree-id3509 . -1) (undo-tree-id3510 . -1) (undo-tree-id3511 . -1) (undo-tree-id3512 . -1) (undo-tree-id3513 . -1) (undo-tree-id3514 . -1) (undo-tree-id3515 . -1) (undo-tree-id3516 . -1) (undo-tree-id3517 . -1) (undo-tree-id3518 . -1) (undo-tree-id3519 . -1) (undo-tree-id3520 . -1) (undo-tree-id3521 . -1) (undo-tree-id3522 . -1) (undo-tree-id3523 . -1) (undo-tree-id3524 . -1) (undo-tree-id3525 . -1) (undo-tree-id3526 . -1) (undo-tree-id3527 . -1) (undo-tree-id3528 . -1) (undo-tree-id3529 . -1) (undo-tree-id3530 . -1) (undo-tree-id3531 . -1) (undo-tree-id3532 . -1) (undo-tree-id3533 . -1) (undo-tree-id3534 . -1) (undo-tree-id3535 . -1) (undo-tree-id3536 . -1) (undo-tree-id3537 . -1) (undo-tree-id3538 . -1) (undo-tree-id3539 . -1) (undo-tree-id3540 . -1) (undo-tree-id3541 . -1) (undo-tree-id3542 . -1) (undo-tree-id3543 . -1) (undo-tree-id3544 . -1) (undo-tree-id3545 . -1) (undo-tree-id3546 . -1) (undo-tree-id3547 . -1) (undo-tree-id3548 . -1) (undo-tree-id3549 . -1) (undo-tree-id3550 . -1) (undo-tree-id3551 . -1) (undo-tree-id3552 . -1) (undo-tree-id3553 . -1) (undo-tree-id3554 . -1) (undo-tree-id3555 . -1) (undo-tree-id3556 . -1) (undo-tree-id3557 . -1) (undo-tree-id3558 . -1) (undo-tree-id3559 . -1) (undo-tree-id3560 . -1) (undo-tree-id3561 . -1) (undo-tree-id3562 . -1) (undo-tree-id3563 . -1) (undo-tree-id3564 . -1) (undo-tree-id3565 . -1) (undo-tree-id3566 . -1) (undo-tree-id3567 . -1) (undo-tree-id3568 . -1) (undo-tree-id3569 . -1) (undo-tree-id3570 . -1) (undo-tree-id3571 . -1) (undo-tree-id3572 . -1) (undo-tree-id3573 . -1) (undo-tree-id3574 . -1) (undo-tree-id3575 . -1) (undo-tree-id3576 . -1) (undo-tree-id3577 . -1) (undo-tree-id3578 . -1) (undo-tree-id3579 . -1) (undo-tree-id3580 . -1) (undo-tree-id3581 . -1) (undo-tree-id3582 . -1) (undo-tree-id3583 . -1) (undo-tree-id3584 . -1) (undo-tree-id3585 . -1) (undo-tree-id3586 . -1) (undo-tree-id3587 . -1) (undo-tree-id3588 . -1) (undo-tree-id3589 . -1) (undo-tree-id3590 . -1) (undo-tree-id3591 . -1) (undo-tree-id3592 . -1) (undo-tree-id3593 . -1) (undo-tree-id3594 . -1) (undo-tree-id3595 . -1) (undo-tree-id3596 . -1) (undo-tree-id3597 . -1) (undo-tree-id3598 . -1) (undo-tree-id3599 . -1) (undo-tree-id3600 . -1) (#("d" 0 1 (face font-lock-function-name-face fontified t)) . -975) (undo-tree-id3601 . -1) (undo-tree-id3602 . -1) (undo-tree-id3603 . -1) (undo-tree-id3604 . -1) (undo-tree-id3605 . -1) (undo-tree-id3606 . -1) (undo-tree-id3607 . -1) (undo-tree-id3608 . -1) (undo-tree-id3609 . -1) (undo-tree-id3610 . -1) (undo-tree-id3611 . -1) (undo-tree-id3612 . -1) (undo-tree-id3613 . -1) (undo-tree-id3614 . -1) (undo-tree-id3615 . -1) (undo-tree-id3616 . -1) (undo-tree-id3617 . -1) (undo-tree-id3618 . -1) (undo-tree-id3619 . -1) (undo-tree-id3620 . -1) (undo-tree-id3621 . -1) (undo-tree-id3622 . -1) (undo-tree-id3623 . -1) (undo-tree-id3624 . -1) (undo-tree-id3625 . -1) (undo-tree-id3626 . -1) (undo-tree-id3627 . -1) (undo-tree-id3628 . -1) (undo-tree-id3629 . -1) (undo-tree-id3630 . -1) (undo-tree-id3631 . -1) (undo-tree-id3632 . -1) (undo-tree-id3633 . -1) (undo-tree-id3634 . -1) (undo-tree-id3635 . -1) (undo-tree-id3636 . -1) (undo-tree-id3637 . -1) (undo-tree-id3638 . -1) (undo-tree-id3639 . -1) (undo-tree-id3640 . -1) (undo-tree-id3641 . -1) (undo-tree-id3642 . -1) (undo-tree-id3643 . -1) (undo-tree-id3644 . -1) (undo-tree-id3645 . -1) (undo-tree-id3646 . -1) (undo-tree-id3647 . -1) (undo-tree-id3648 . -1) (undo-tree-id3649 . -1) (undo-tree-id3650 . -1) (undo-tree-id3651 . -1) (undo-tree-id3652 . -1) (undo-tree-id3653 . -1) (undo-tree-id3654 . -1) (undo-tree-id3655 . -1) (undo-tree-id3656 . -1) (undo-tree-id3657 . -1) (undo-tree-id3658 . -1) (undo-tree-id3659 . -1) (undo-tree-id3660 . -1) (undo-tree-id3661 . -1) (undo-tree-id3662 . -1) (undo-tree-id3663 . -1) (undo-tree-id3664 . -1) (undo-tree-id3665 . -1) (undo-tree-id3666 . -1) (undo-tree-id3667 . -1) (undo-tree-id3668 . -1) (undo-tree-id3669 . -1) (undo-tree-id3670 . -1) (undo-tree-id3671 . -1) (undo-tree-id3672 . -1) (undo-tree-id3673 . -1) (undo-tree-id3674 . -1) (undo-tree-id3675 . -1) (undo-tree-id3676 . -1) (undo-tree-id3677 . -1) (undo-tree-id3678 . -1) (undo-tree-id3679 . -1) (undo-tree-id3680 . -1) (undo-tree-id3681 . -1) (undo-tree-id3682 . -1) (undo-tree-id3683 . -1) (undo-tree-id3684 . -1) (undo-tree-id3685 . -1) (undo-tree-id3686 . -1) (undo-tree-id3687 . -1) (undo-tree-id3688 . -1) (undo-tree-id3689 . -1) (undo-tree-id3690 . -1) (undo-tree-id3691 . -1) (undo-tree-id3692 . -1) (undo-tree-id3693 . -1) (undo-tree-id3694 . -1) (undo-tree-id3695 . -1) (undo-tree-id3696 . -1) (undo-tree-id3697 . -1) (undo-tree-id3698 . -1) (undo-tree-id3699 . -1) (undo-tree-id3700 . -1) (undo-tree-id3701 . -1) (undo-tree-id3702 . -1) (undo-tree-id3703 . -1) (undo-tree-id3704 . -1) (undo-tree-id3705 . -1) (undo-tree-id3706 . -1) (undo-tree-id3707 . -1) (undo-tree-id3708 . -1) (undo-tree-id3709 . -1) (undo-tree-id3710 . -1) (undo-tree-id3711 . -1) (undo-tree-id3712 . -1) (undo-tree-id3713 . -1) (undo-tree-id3714 . -1) (undo-tree-id3715 . -1) (undo-tree-id3716 . -1) (undo-tree-id3717 . -1) (undo-tree-id3718 . -1) (undo-tree-id3719 . -1) (undo-tree-id3720 . -1) (undo-tree-id3721 . -1) (undo-tree-id3722 . -1) (undo-tree-id3723 . -1) (undo-tree-id3724 . -1) (undo-tree-id3725 . -1) (undo-tree-id3726 . -1) (undo-tree-id3727 . -1) (undo-tree-id3728 . -1) (undo-tree-id3729 . -1) (undo-tree-id3730 . -1) (undo-tree-id3731 . -1) (undo-tree-id3732 . -1) (undo-tree-id3733 . -1) (undo-tree-id3734 . -1) (undo-tree-id3735 . -1) (undo-tree-id3736 . -1) (undo-tree-id3737 . -1) (undo-tree-id3738 . -1) (undo-tree-id3739 . -1) (undo-tree-id3740 . -1) (undo-tree-id3741 . -1) (undo-tree-id3742 . -1) (undo-tree-id3743 . -1) (undo-tree-id3744 . -1) (undo-tree-id3745 . -1) (undo-tree-id3746 . -1) (undo-tree-id3747 . -1) (undo-tree-id3748 . -1) (undo-tree-id3749 . -1) (undo-tree-id3750 . -1) (undo-tree-id3751 . -1) (undo-tree-id3752 . -1) (undo-tree-id3753 . -1) (undo-tree-id3754 . -1) (undo-tree-id3755 . -1) (undo-tree-id3756 . -1) (undo-tree-id3757 . -1) (undo-tree-id3758 . -1) (undo-tree-id3759 . -1) (undo-tree-id3760 . -1) (undo-tree-id3761 . -1) (undo-tree-id3762 . -1) (undo-tree-id3763 . -1) (undo-tree-id3764 . -1) (undo-tree-id3765 . -1) (undo-tree-id3766 . -1) (undo-tree-id3767 . -1) (undo-tree-id3768 . -1) (undo-tree-id3769 . -1) (undo-tree-id3770 . -1) (undo-tree-id3771 . -1) (undo-tree-id3772 . -1) (undo-tree-id3773 . -1) (undo-tree-id3774 . -1) (undo-tree-id3775 . -1) (undo-tree-id3776 . -1) (undo-tree-id3777 . -1) (undo-tree-id3778 . -1) (undo-tree-id3779 . -1) (undo-tree-id3780 . -1) (undo-tree-id3781 . -1) (undo-tree-id3782 . -1) (undo-tree-id3783 . -1) (undo-tree-id3784 . -1) (undo-tree-id3785 . -1) (undo-tree-id3786 . -1) (undo-tree-id3787 . -1) (undo-tree-id3788 . -1) (undo-tree-id3789 . -1) (undo-tree-id3790 . -1) (undo-tree-id3791 . -1) (undo-tree-id3792 . -1) (undo-tree-id3793 . -1) (undo-tree-id3794 . -1) (undo-tree-id3795 . -1) (undo-tree-id3796 . -1) (undo-tree-id3797 . -1) (undo-tree-id3798 . -1) (undo-tree-id3799 . -1) (undo-tree-id3800 . -1) (undo-tree-id3801 . -1) (undo-tree-id3802 . -1) (undo-tree-id3803 . -1) (undo-tree-id3804 . -1) (undo-tree-id3805 . -1) (undo-tree-id3806 . -1) (undo-tree-id3807 . -1) (undo-tree-id3808 . -1) (undo-tree-id3809 . -1) (undo-tree-id3810 . -1) (undo-tree-id3811 . -1) (undo-tree-id3812 . -1) (undo-tree-id3813 . -1) (undo-tree-id3814 . -1) (undo-tree-id3815 . -1) (undo-tree-id3816 . -1) (undo-tree-id3817 . -1) (undo-tree-id3818 . -1) (undo-tree-id3819 . -1) (undo-tree-id3820 . -1) (undo-tree-id3821 . -1) (undo-tree-id3822 . -1) (undo-tree-id3823 . -1) (undo-tree-id3824 . -1) (undo-tree-id3825 . -1) (undo-tree-id3826 . -1) (undo-tree-id3827 . -1) (undo-tree-id3828 . -1) (undo-tree-id3829 . -1) (undo-tree-id3830 . -1) (undo-tree-id3831 . -1) (undo-tree-id3832 . -1) (undo-tree-id3833 . -1) (undo-tree-id3834 . -1) (undo-tree-id3835 . -1) (undo-tree-id3836 . -1) (undo-tree-id3837 . -1) (undo-tree-id3838 . -1) (undo-tree-id3839 . -1) (undo-tree-id3840 . -1) (undo-tree-id3841 . -1) (undo-tree-id3842 . -1) (undo-tree-id3843 . -1) (undo-tree-id3844 . -1) (undo-tree-id3845 . -1) (undo-tree-id3846 . -1) (undo-tree-id3847 . -1) (undo-tree-id3848 . -1) (undo-tree-id3849 . -1) (undo-tree-id3850 . -1) (undo-tree-id3851 . -1) (undo-tree-id3852 . -1) (undo-tree-id3853 . -1) (undo-tree-id3854 . -1) (undo-tree-id3855 . -1) (undo-tree-id3856 . -1) (undo-tree-id3857 . -1) (undo-tree-id3858 . -1) (undo-tree-id3859 . -1) (undo-tree-id3860 . -1) (undo-tree-id3861 . -1) (undo-tree-id3862 . -1) (undo-tree-id3863 . -1) (undo-tree-id3864 . -1) (undo-tree-id3865 . -1) (undo-tree-id3866 . -1) (undo-tree-id3867 . -1) (undo-tree-id3868 . -1) (undo-tree-id3869 . -1) (undo-tree-id3870 . -1) (#("r" 0 1 (face font-lock-function-name-face fontified t)) . -976) (undo-tree-id3871 . -1) (undo-tree-id3872 . -1) (undo-tree-id3873 . -1) (undo-tree-id3874 . -1) (undo-tree-id3875 . -1) (undo-tree-id3876 . -1) (undo-tree-id3877 . -1) (undo-tree-id3878 . -1) (undo-tree-id3879 . -1) (undo-tree-id3880 . -1) (undo-tree-id3881 . -1) (undo-tree-id3882 . -1) (undo-tree-id3883 . -1) (undo-tree-id3884 . -1) (undo-tree-id3885 . -1) (undo-tree-id3886 . -1) (undo-tree-id3887 . -1) (undo-tree-id3888 . -1) (undo-tree-id3889 . -1) (undo-tree-id3890 . -1) (undo-tree-id3891 . -1) (undo-tree-id3892 . -1) (undo-tree-id3893 . -1) (undo-tree-id3894 . -1) (undo-tree-id3895 . -1) (undo-tree-id3896 . -1) (undo-tree-id3897 . -1) (undo-tree-id3898 . -1) (undo-tree-id3899 . -1) (undo-tree-id3900 . -1) (undo-tree-id3901 . -1) (undo-tree-id3902 . -1) (undo-tree-id3903 . -1) (undo-tree-id3904 . -1) (undo-tree-id3905 . -1) (undo-tree-id3906 . -1) (undo-tree-id3907 . -1) (undo-tree-id3908 . -1) (undo-tree-id3909 . -1) (undo-tree-id3910 . -1) (undo-tree-id3911 . -1) (undo-tree-id3912 . -1) (undo-tree-id3913 . -1) (undo-tree-id3914 . -1) (undo-tree-id3915 . -1) (undo-tree-id3916 . -1) (undo-tree-id3917 . -1) (undo-tree-id3918 . -1) (undo-tree-id3919 . -1) (undo-tree-id3920 . -1) (undo-tree-id3921 . -1) (undo-tree-id3922 . -1) (undo-tree-id3923 . -1) (undo-tree-id3924 . -1) (undo-tree-id3925 . -1) (undo-tree-id3926 . -1) (undo-tree-id3927 . -1) (undo-tree-id3928 . -1) (undo-tree-id3929 . -1) (undo-tree-id3930 . -1) (undo-tree-id3931 . -1) (undo-tree-id3932 . -1) (undo-tree-id3933 . -1) (undo-tree-id3934 . -1) (undo-tree-id3935 . -1) (undo-tree-id3936 . -1) (undo-tree-id3937 . -1) (undo-tree-id3938 . -1) (undo-tree-id3939 . -1) (undo-tree-id3940 . -1) (undo-tree-id3941 . -1) (undo-tree-id3942 . -1) (undo-tree-id3943 . -1) (undo-tree-id3944 . -1) (undo-tree-id3945 . -1) (undo-tree-id3946 . -1) (undo-tree-id3947 . -1) (undo-tree-id3948 . -1) (undo-tree-id3949 . -1) (undo-tree-id3950 . -1) (undo-tree-id3951 . -1) (undo-tree-id3952 . -1) (undo-tree-id3953 . -1) (undo-tree-id3954 . -1) (undo-tree-id3955 . -1) (undo-tree-id3956 . -1) (undo-tree-id3957 . -1) (undo-tree-id3958 . -1) (undo-tree-id3959 . -1) (undo-tree-id3960 . -1) (undo-tree-id3961 . -1) (undo-tree-id3962 . -1) (undo-tree-id3963 . -1) (undo-tree-id3964 . -1) (undo-tree-id3965 . -1) (undo-tree-id3966 . -1) (undo-tree-id3967 . -1) (undo-tree-id3968 . -1) (undo-tree-id3969 . -1) (undo-tree-id3970 . -1) (undo-tree-id3971 . -1) (undo-tree-id3972 . -1) (undo-tree-id3973 . -1) (undo-tree-id3974 . -1) (undo-tree-id3975 . -1) (undo-tree-id3976 . -1) (undo-tree-id3977 . -1) (undo-tree-id3978 . -1) (undo-tree-id3979 . -1) (undo-tree-id3980 . -1) (undo-tree-id3981 . -1) (undo-tree-id3982 . -1) (undo-tree-id3983 . -1) (undo-tree-id3984 . -1) (undo-tree-id3985 . -1) (undo-tree-id3986 . -1) (undo-tree-id3987 . -1) (undo-tree-id3988 . -1) (undo-tree-id3989 . -1) (undo-tree-id3990 . -1) (undo-tree-id3991 . -1) (undo-tree-id3992 . -1) (undo-tree-id3993 . -1) (undo-tree-id3994 . -1) (undo-tree-id3995 . -1) (undo-tree-id3996 . -1) (undo-tree-id3997 . -1) (undo-tree-id3998 . -1) (undo-tree-id3999 . -1) (undo-tree-id4000 . -1) (undo-tree-id4001 . -1) (undo-tree-id4002 . -1) (undo-tree-id4003 . -1) (undo-tree-id4004 . -1) (undo-tree-id4005 . -1) (undo-tree-id4006 . -1) (undo-tree-id4007 . -1) (undo-tree-id4008 . -1) (undo-tree-id4009 . -1) (undo-tree-id4010 . -1) (undo-tree-id4011 . -1) (undo-tree-id4012 . -1) (undo-tree-id4013 . -1) (undo-tree-id4014 . -1) (undo-tree-id4015 . -1) (undo-tree-id4016 . -1) (undo-tree-id4017 . -1) (undo-tree-id4018 . -1) (undo-tree-id4019 . -1) (undo-tree-id4020 . -1) (undo-tree-id4021 . -1) (undo-tree-id4022 . -1) (undo-tree-id4023 . -1) (undo-tree-id4024 . -1) (undo-tree-id4025 . -1) (undo-tree-id4026 . -1) (undo-tree-id4027 . -1) (undo-tree-id4028 . -1) (undo-tree-id4029 . -1) (undo-tree-id4030 . -1) (undo-tree-id4031 . -1) (undo-tree-id4032 . -1) (undo-tree-id4033 . -1) (undo-tree-id4034 . -1) (undo-tree-id4035 . -1) (undo-tree-id4036 . -1) (undo-tree-id4037 . -1) (undo-tree-id4038 . -1) (undo-tree-id4039 . -1) (undo-tree-id4040 . -1) (undo-tree-id4041 . -1) (undo-tree-id4042 . -1) (undo-tree-id4043 . -1) (undo-tree-id4044 . -1) (undo-tree-id4045 . -1) (undo-tree-id4046 . -1) (undo-tree-id4047 . -1) (undo-tree-id4048 . -1) (undo-tree-id4049 . -1) (undo-tree-id4050 . -1) (undo-tree-id4051 . -1) (undo-tree-id4052 . -1) (undo-tree-id4053 . -1) (undo-tree-id4054 . -1) (undo-tree-id4055 . -1) (undo-tree-id4056 . -1) (undo-tree-id4057 . -1) (undo-tree-id4058 . -1) (undo-tree-id4059 . -1) (undo-tree-id4060 . -1) (undo-tree-id4061 . -1) (undo-tree-id4062 . -1) (undo-tree-id4063 . -1) (undo-tree-id4064 . -1) (undo-tree-id4065 . -1) (undo-tree-id4066 . -1) (undo-tree-id4067 . -1) (undo-tree-id4068 . -1) (undo-tree-id4069 . -1) (undo-tree-id4070 . -1) (undo-tree-id4071 . -1) (undo-tree-id4072 . -1) (undo-tree-id4073 . -1) (undo-tree-id4074 . -1) (undo-tree-id4075 . -1) (undo-tree-id4076 . -1) (undo-tree-id4077 . -1) (undo-tree-id4078 . -1) (undo-tree-id4079 . -1) (undo-tree-id4080 . -1) (undo-tree-id4081 . -1) (undo-tree-id4082 . -1) (undo-tree-id4083 . -1) (undo-tree-id4084 . -1) (undo-tree-id4085 . -1) (undo-tree-id4086 . -1) (undo-tree-id4087 . -1) (undo-tree-id4088 . -1) (undo-tree-id4089 . -1) (undo-tree-id4090 . -1) (undo-tree-id4091 . -1) (undo-tree-id4092 . -1) (undo-tree-id4093 . -1) (undo-tree-id4094 . -1) (undo-tree-id4095 . -1) (undo-tree-id4096 . -1) (undo-tree-id4097 . -1) (undo-tree-id4098 . -1) (undo-tree-id4099 . -1) (undo-tree-id4100 . -1) (undo-tree-id4101 . -1) (undo-tree-id4102 . -1) (undo-tree-id4103 . -1) (undo-tree-id4104 . -1) (undo-tree-id4105 . -1) (undo-tree-id4106 . -1) (undo-tree-id4107 . -1) (undo-tree-id4108 . -1) (undo-tree-id4109 . -1) (undo-tree-id4110 . -1) (undo-tree-id4111 . -1) (undo-tree-id4112 . -1) (undo-tree-id4113 . -1) (undo-tree-id4114 . -1) (undo-tree-id4115 . -1) (undo-tree-id4116 . -1) (undo-tree-id4117 . -1) (undo-tree-id4118 . -1) (undo-tree-id4119 . -1) (undo-tree-id4120 . -1) (undo-tree-id4121 . -1) (undo-tree-id4122 . -1) (undo-tree-id4123 . -1) (undo-tree-id4124 . -1) (undo-tree-id4125 . -1) (undo-tree-id4126 . -1) (undo-tree-id4127 . -1) (undo-tree-id4128 . -1) (undo-tree-id4129 . -1) (undo-tree-id4130 . -1) (undo-tree-id4131 . -1) (#("a" 0 1 (face font-lock-function-name-face fontified t)) . -977) (undo-tree-id4132 . -1) (undo-tree-id4133 . -1) (undo-tree-id4134 . -1) (undo-tree-id4135 . -1) (undo-tree-id4136 . -1) (undo-tree-id4137 . -1) (undo-tree-id4138 . -1) (undo-tree-id4139 . -1) (undo-tree-id4140 . -1) (undo-tree-id4141 . -1) (undo-tree-id4142 . -1) (undo-tree-id4143 . -1) (undo-tree-id4144 . -1) (undo-tree-id4145 . -1) (undo-tree-id4146 . -1) (undo-tree-id4147 . -1) (undo-tree-id4148 . -1) (undo-tree-id4149 . -1) (undo-tree-id4150 . -1) (undo-tree-id4151 . -1) (undo-tree-id4152 . -1) (undo-tree-id4153 . -1) (undo-tree-id4154 . -1) (undo-tree-id4155 . -1) (undo-tree-id4156 . -1) (undo-tree-id4157 . -1) (undo-tree-id4158 . -1) (undo-tree-id4159 . -1) (undo-tree-id4160 . -1) (undo-tree-id4161 . -1) (undo-tree-id4162 . -1) (undo-tree-id4163 . -1) (undo-tree-id4164 . -1) (undo-tree-id4165 . -1) (undo-tree-id4166 . -1) (undo-tree-id4167 . -1) (undo-tree-id4168 . -1) (undo-tree-id4169 . -1) (undo-tree-id4170 . -1) (undo-tree-id4171 . -1) (undo-tree-id4172 . -1) (undo-tree-id4173 . -1) (undo-tree-id4174 . -1) (undo-tree-id4175 . -1) (undo-tree-id4176 . -1) (undo-tree-id4177 . -1) (undo-tree-id4178 . -1) (undo-tree-id4179 . -1) (undo-tree-id4180 . -1) (undo-tree-id4181 . -1) (undo-tree-id4182 . -1) (undo-tree-id4183 . -1) (undo-tree-id4184 . -1) (undo-tree-id4185 . -1) (undo-tree-id4186 . -1) (undo-tree-id4187 . -1) (undo-tree-id4188 . -1) (undo-tree-id4189 . -1) (undo-tree-id4190 . -1) (undo-tree-id4191 . -1) (undo-tree-id4192 . -1) (undo-tree-id4193 . -1) (undo-tree-id4194 . -1) (undo-tree-id4195 . -1) (undo-tree-id4196 . -1) (undo-tree-id4197 . -1) (undo-tree-id4198 . -1) (undo-tree-id4199 . -1) (undo-tree-id4200 . -1) (undo-tree-id4201 . -1) (undo-tree-id4202 . -1) (undo-tree-id4203 . -1) (undo-tree-id4204 . -1) (undo-tree-id4205 . -1) (undo-tree-id4206 . -1) (undo-tree-id4207 . -1) (undo-tree-id4208 . -1) (undo-tree-id4209 . -1) (undo-tree-id4210 . -1) (undo-tree-id4211 . -1) (undo-tree-id4212 . -1) (undo-tree-id4213 . -1) (undo-tree-id4214 . -1) (undo-tree-id4215 . -1) (undo-tree-id4216 . -1) (undo-tree-id4217 . -1) (undo-tree-id4218 . -1) (undo-tree-id4219 . -1) (undo-tree-id4220 . -1) (undo-tree-id4221 . -1) (undo-tree-id4222 . -1) (undo-tree-id4223 . -1) (undo-tree-id4224 . -1) (undo-tree-id4225 . -1) (undo-tree-id4226 . -1) (undo-tree-id4227 . -1) (undo-tree-id4228 . -1) (undo-tree-id4229 . -1) (undo-tree-id4230 . -1) (undo-tree-id4231 . -1) (undo-tree-id4232 . -1) (undo-tree-id4233 . -1) (undo-tree-id4234 . -1) (undo-tree-id4235 . -1) (undo-tree-id4236 . -1) (undo-tree-id4237 . -1) (undo-tree-id4238 . -1) (undo-tree-id4239 . -1) (undo-tree-id4240 . -1) (undo-tree-id4241 . -1) (undo-tree-id4242 . -1) (undo-tree-id4243 . -1) (undo-tree-id4244 . -1) (undo-tree-id4245 . -1) (undo-tree-id4246 . -1) (undo-tree-id4247 . -1) (undo-tree-id4248 . -1) (undo-tree-id4249 . -1) (undo-tree-id4250 . -1) (undo-tree-id4251 . -1) (undo-tree-id4252 . -1) (undo-tree-id4253 . -1) (undo-tree-id4254 . -1) (undo-tree-id4255 . -1) (undo-tree-id4256 . -1) (undo-tree-id4257 . -1) (undo-tree-id4258 . -1) (undo-tree-id4259 . -1) (undo-tree-id4260 . -1) (undo-tree-id4261 . -1) (undo-tree-id4262 . -1) (undo-tree-id4263 . -1) (undo-tree-id4264 . -1) (undo-tree-id4265 . -1) (undo-tree-id4266 . -1) (undo-tree-id4267 . -1) (undo-tree-id4268 . -1) (undo-tree-id4269 . -1) (undo-tree-id4270 . -1) (undo-tree-id4271 . -1) (undo-tree-id4272 . -1) (undo-tree-id4273 . -1) (undo-tree-id4274 . -1) (undo-tree-id4275 . -1) (undo-tree-id4276 . -1) (undo-tree-id4277 . -1) (undo-tree-id4278 . -1) (undo-tree-id4279 . -1) (undo-tree-id4280 . -1) (undo-tree-id4281 . -1) (undo-tree-id4282 . -1) (undo-tree-id4283 . -1) (undo-tree-id4284 . -1) (undo-tree-id4285 . -1) (undo-tree-id4286 . -1) (undo-tree-id4287 . -1) (undo-tree-id4288 . -1) (undo-tree-id4289 . -1) (undo-tree-id4290 . -1) (undo-tree-id4291 . -1) (undo-tree-id4292 . -1) (undo-tree-id4293 . -1) (undo-tree-id4294 . -1) (undo-tree-id4295 . -1) (undo-tree-id4296 . -1) (undo-tree-id4297 . -1) (undo-tree-id4298 . -1) (undo-tree-id4299 . -1) (undo-tree-id4300 . -1) (undo-tree-id4301 . -1) (undo-tree-id4302 . -1) (undo-tree-id4303 . -1) (undo-tree-id4304 . -1) (undo-tree-id4305 . -1) (undo-tree-id4306 . -1) (undo-tree-id4307 . -1) (undo-tree-id4308 . -1) (undo-tree-id4309 . -1) (undo-tree-id4310 . -1) (undo-tree-id4311 . -1) (undo-tree-id4312 . -1) (undo-tree-id4313 . -1) (undo-tree-id4314 . -1) (undo-tree-id4315 . -1) (undo-tree-id4316 . -1) (undo-tree-id4317 . -1) (undo-tree-id4318 . -1) (undo-tree-id4319 . -1) (undo-tree-id4320 . -1) (undo-tree-id4321 . -1) (undo-tree-id4322 . -1) (undo-tree-id4323 . -1) (undo-tree-id4324 . -1) (undo-tree-id4325 . -1) (undo-tree-id4326 . -1) (undo-tree-id4327 . -1) (undo-tree-id4328 . -1) (undo-tree-id4329 . -1) (undo-tree-id4330 . -1) (undo-tree-id4331 . -1) (undo-tree-id4332 . -1) (undo-tree-id4333 . -1) (undo-tree-id4334 . -1) (undo-tree-id4335 . -1) (undo-tree-id4336 . -1) (undo-tree-id4337 . -1) (undo-tree-id4338 . -1) (undo-tree-id4339 . -1) (undo-tree-id4340 . -1) (undo-tree-id4341 . -1) (undo-tree-id4342 . -1) (undo-tree-id4343 . -1) (undo-tree-id4344 . -1) (undo-tree-id4345 . -1) (undo-tree-id4346 . -1) (undo-tree-id4347 . -1) (undo-tree-id4348 . -1) (undo-tree-id4349 . -1) (undo-tree-id4350 . -1) (undo-tree-id4351 . -1) (undo-tree-id4352 . -1) (undo-tree-id4353 . -1) (undo-tree-id4354 . -1) (undo-tree-id4355 . -1) (undo-tree-id4356 . -1) (undo-tree-id4357 . -1) (undo-tree-id4358 . -1) (undo-tree-id4359 . -1) (undo-tree-id4360 . -1) (undo-tree-id4361 . -1) (undo-tree-id4362 . -1) (undo-tree-id4363 . -1) (undo-tree-id4364 . -1) (undo-tree-id4365 . -1) (undo-tree-id4366 . -1) (undo-tree-id4367 . -1) (undo-tree-id4368 . -1) (undo-tree-id4369 . -1) (undo-tree-id4370 . -1) (undo-tree-id4371 . -1) (undo-tree-id4372 . -1) (undo-tree-id4373 . -1) (undo-tree-id4374 . -1) (undo-tree-id4375 . -1) (undo-tree-id4376 . -1) (undo-tree-id4377 . -1) (undo-tree-id4378 . -1) (undo-tree-id4379 . -1) (undo-tree-id4380 . -1) (undo-tree-id4381 . -1) (undo-tree-id4382 . -1) (undo-tree-id4383 . -1) (#("w" 0 1 (face font-lock-function-name-face fontified t)) . -978) (undo-tree-id4384 . -1) (undo-tree-id4385 . -1) (undo-tree-id4386 . -1) (undo-tree-id4387 . -1) (undo-tree-id4388 . -1) (undo-tree-id4389 . -1) (undo-tree-id4390 . -1) (undo-tree-id4391 . -1) (undo-tree-id4392 . -1) (undo-tree-id4393 . -1) (undo-tree-id4394 . -1) (undo-tree-id4395 . -1) (undo-tree-id4396 . -1) (undo-tree-id4397 . -1) (undo-tree-id4398 . -1) (undo-tree-id4399 . -1) (undo-tree-id4400 . -1) (undo-tree-id4401 . -1) (undo-tree-id4402 . -1) (undo-tree-id4403 . -1) (undo-tree-id4404 . -1) (undo-tree-id4405 . -1) (undo-tree-id4406 . -1) (undo-tree-id4407 . -1) (undo-tree-id4408 . -1) (undo-tree-id4409 . -1) (undo-tree-id4410 . -1) (undo-tree-id4411 . -1) (undo-tree-id4412 . -1) (undo-tree-id4413 . -1) (undo-tree-id4414 . -1) (undo-tree-id4415 . -1) (undo-tree-id4416 . -1) (undo-tree-id4417 . -1) (undo-tree-id4418 . -1) (undo-tree-id4419 . -1) (undo-tree-id4420 . -1) (undo-tree-id4421 . -1) (undo-tree-id4422 . -1) (undo-tree-id4423 . -1) (undo-tree-id4424 . -1) (undo-tree-id4425 . -1) (undo-tree-id4426 . -1) (undo-tree-id4427 . -1) (undo-tree-id4428 . -1) (undo-tree-id4429 . -1) (undo-tree-id4430 . -1) (undo-tree-id4431 . -1) (undo-tree-id4432 . -1) (undo-tree-id4433 . -1) (undo-tree-id4434 . -1) (undo-tree-id4435 . -1) (undo-tree-id4436 . -1) (undo-tree-id4437 . -1) (undo-tree-id4438 . -1) (undo-tree-id4439 . -1) (undo-tree-id4440 . -1) (undo-tree-id4441 . -1) (undo-tree-id4442 . -1) (undo-tree-id4443 . -1) (undo-tree-id4444 . -1) (undo-tree-id4445 . -1) (undo-tree-id4446 . -1) (undo-tree-id4447 . -1) (undo-tree-id4448 . -1) (undo-tree-id4449 . -1) (undo-tree-id4450 . -1) (undo-tree-id4451 . -1) (undo-tree-id4452 . -1) (undo-tree-id4453 . -1) (undo-tree-id4454 . -1) (undo-tree-id4455 . -1) (undo-tree-id4456 . -1) (undo-tree-id4457 . -1) (undo-tree-id4458 . -1) (undo-tree-id4459 . -1) (undo-tree-id4460 . -1) (undo-tree-id4461 . -1) (undo-tree-id4462 . -1) (undo-tree-id4463 . -1) (undo-tree-id4464 . -1) (undo-tree-id4465 . -1) (undo-tree-id4466 . -1) (undo-tree-id4467 . -1) (undo-tree-id4468 . -1) (undo-tree-id4469 . -1) (undo-tree-id4470 . -1) (undo-tree-id4471 . -1) (undo-tree-id4472 . -1) (undo-tree-id4473 . -1) (undo-tree-id4474 . -1) (undo-tree-id4475 . -1) (undo-tree-id4476 . -1) (undo-tree-id4477 . -1) (undo-tree-id4478 . -1) (undo-tree-id4479 . -1) (undo-tree-id4480 . -1) (undo-tree-id4481 . -1) (undo-tree-id4482 . -1) (undo-tree-id4483 . -1) (undo-tree-id4484 . -1) (undo-tree-id4485 . -1) (undo-tree-id4486 . -1) (undo-tree-id4487 . -1) (undo-tree-id4488 . -1) (undo-tree-id4489 . -1) (undo-tree-id4490 . -1) (undo-tree-id4491 . -1) (undo-tree-id4492 . -1) (undo-tree-id4493 . -1) (undo-tree-id4494 . -1) (undo-tree-id4495 . -1) (undo-tree-id4496 . -1) (undo-tree-id4497 . -1) (undo-tree-id4498 . -1) (undo-tree-id4499 . -1) (undo-tree-id4500 . -1) (undo-tree-id4501 . -1) (undo-tree-id4502 . -1) (undo-tree-id4503 . -1) (undo-tree-id4504 . -1) (undo-tree-id4505 . -1) (undo-tree-id4506 . -1) (undo-tree-id4507 . -1) (undo-tree-id4508 . -1) (undo-tree-id4509 . -1) (undo-tree-id4510 . -1) (undo-tree-id4511 . -1) (undo-tree-id4512 . -1) (undo-tree-id4513 . -1) (undo-tree-id4514 . -1) (undo-tree-id4515 . -1) (undo-tree-id4516 . -1) (undo-tree-id4517 . -1) (undo-tree-id4518 . -1) (undo-tree-id4519 . -1) (undo-tree-id4520 . -1) (undo-tree-id4521 . -1) (undo-tree-id4522 . -1) (undo-tree-id4523 . -1) (undo-tree-id4524 . -1) (undo-tree-id4525 . -1) (undo-tree-id4526 . -1) (undo-tree-id4527 . -1) (undo-tree-id4528 . -1) (undo-tree-id4529 . -1) (undo-tree-id4530 . -1) (undo-tree-id4531 . -1) (undo-tree-id4532 . -1) (undo-tree-id4533 . -1) (undo-tree-id4534 . -1) (undo-tree-id4535 . -1) (undo-tree-id4536 . -1) (undo-tree-id4537 . -1) (undo-tree-id4538 . -1) (undo-tree-id4539 . -1) (undo-tree-id4540 . -1) (undo-tree-id4541 . -1) (undo-tree-id4542 . -1) (undo-tree-id4543 . -1) (undo-tree-id4544 . -1) (undo-tree-id4545 . -1) (undo-tree-id4546 . -1) (undo-tree-id4547 . -1) (undo-tree-id4548 . -1) (undo-tree-id4549 . -1) (undo-tree-id4550 . -1) (undo-tree-id4551 . -1) (undo-tree-id4552 . -1) (undo-tree-id4553 . -1) (undo-tree-id4554 . -1) (undo-tree-id4555 . -1) (undo-tree-id4556 . -1) (undo-tree-id4557 . -1) (undo-tree-id4558 . -1) (undo-tree-id4559 . -1) (undo-tree-id4560 . -1) (undo-tree-id4561 . -1) (undo-tree-id4562 . -1) (undo-tree-id4563 . -1) (undo-tree-id4564 . -1) (undo-tree-id4565 . -1) (undo-tree-id4566 . -1) (undo-tree-id4567 . -1) (undo-tree-id4568 . -1) (undo-tree-id4569 . -1) (undo-tree-id4570 . -1) (undo-tree-id4571 . -1) (undo-tree-id4572 . -1) (undo-tree-id4573 . -1) (undo-tree-id4574 . -1) (undo-tree-id4575 . -1) (undo-tree-id4576 . -1) (undo-tree-id4577 . -1) (undo-tree-id4578 . -1) (undo-tree-id4579 . -1) (undo-tree-id4580 . -1) (undo-tree-id4581 . -1) (undo-tree-id4582 . -1) (undo-tree-id4583 . -1) (undo-tree-id4584 . -1) (undo-tree-id4585 . -1) (undo-tree-id4586 . -1) (undo-tree-id4587 . -1) (undo-tree-id4588 . -1) (undo-tree-id4589 . -1) (undo-tree-id4590 . -1) (undo-tree-id4591 . -1) (undo-tree-id4592 . -1) (undo-tree-id4593 . -1) (undo-tree-id4594 . -1) (undo-tree-id4595 . -1) (undo-tree-id4596 . -1) (undo-tree-id4597 . -1) (undo-tree-id4598 . -1) (undo-tree-id4599 . -1) (undo-tree-id4600 . -1) (undo-tree-id4601 . -1) (undo-tree-id4602 . -1) (undo-tree-id4603 . -1) (undo-tree-id4604 . -1) (undo-tree-id4605 . -1) (undo-tree-id4606 . -1) (undo-tree-id4607 . -1) (undo-tree-id4608 . -1) (undo-tree-id4609 . -1) (undo-tree-id4610 . -1) (undo-tree-id4611 . -1) (undo-tree-id4612 . -1) (undo-tree-id4613 . -1) (undo-tree-id4614 . -1) (undo-tree-id4615 . -1) (undo-tree-id4616 . -1) (undo-tree-id4617 . -1) (undo-tree-id4618 . -1) (undo-tree-id4619 . -1) (undo-tree-id4620 . -1) (undo-tree-id4621 . -1) (undo-tree-id4622 . -1) (undo-tree-id4623 . -1) (undo-tree-id4624 . -1) (undo-tree-id4625 . -1) (undo-tree-id4626 . -1) (#("(" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . -979) (undo-tree-id4627 . -1) (undo-tree-id4628 . -1) (undo-tree-id4629 . -1) (undo-tree-id4630 . -1) (undo-tree-id4631 . -1) (undo-tree-id4632 . -1) (undo-tree-id4633 . -1) (undo-tree-id4634 . -1) (undo-tree-id4635 . -1) (undo-tree-id4636 . -1) (undo-tree-id4637 . -1) (undo-tree-id4638 . -1) (undo-tree-id4639 . -1) (undo-tree-id4640 . -1) (undo-tree-id4641 . -1) (undo-tree-id4642 . -1) (undo-tree-id4643 . -1) (undo-tree-id4644 . -1) (undo-tree-id4645 . -1) (undo-tree-id4646 . -1) (undo-tree-id4647 . -1) (undo-tree-id4648 . -1) (undo-tree-id4649 . -1) (undo-tree-id4650 . -1) (undo-tree-id4651 . -1) (undo-tree-id4652 . -1) (undo-tree-id4653 . -1) (undo-tree-id4654 . -1) (undo-tree-id4655 . -1) (undo-tree-id4656 . -1) (undo-tree-id4657 . -1) (undo-tree-id4658 . -1) (undo-tree-id4659 . -1) (undo-tree-id4660 . -1) (undo-tree-id4661 . -1) (undo-tree-id4662 . -1) (undo-tree-id4663 . -1) (undo-tree-id4664 . -1) (undo-tree-id4665 . -1) (undo-tree-id4666 . -1) (undo-tree-id4667 . -1) (undo-tree-id4668 . -1) (undo-tree-id4669 . -1) (undo-tree-id4670 . -1) (undo-tree-id4671 . -1) (undo-tree-id4672 . -1) (undo-tree-id4673 . -1) (undo-tree-id4674 . -1) (undo-tree-id4675 . -1) (undo-tree-id4676 . -1) (undo-tree-id4677 . -1) (undo-tree-id4678 . -1) (undo-tree-id4679 . -1) (undo-tree-id4680 . -1) (undo-tree-id4681 . -1) (undo-tree-id4682 . -1) (undo-tree-id4683 . -1) (undo-tree-id4684 . -1) (undo-tree-id4685 . -1) (undo-tree-id4686 . -1) (undo-tree-id4687 . -1) (undo-tree-id4688 . -1) (undo-tree-id4689 . -1) (undo-tree-id4690 . -1) (undo-tree-id4691 . -1) (undo-tree-id4692 . -1) (undo-tree-id4693 . -1) (undo-tree-id4694 . -1) (undo-tree-id4695 . -1) (undo-tree-id4696 . -1) (undo-tree-id4697 . -1) (undo-tree-id4698 . -1) (undo-tree-id4699 . -1) (undo-tree-id4700 . -1) (undo-tree-id4701 . -1) (undo-tree-id4702 . -1) (undo-tree-id4703 . -1) (undo-tree-id4704 . -1) (undo-tree-id4705 . -1) (undo-tree-id4706 . -1) (undo-tree-id4707 . -1) (undo-tree-id4708 . -1) (undo-tree-id4709 . -1) (undo-tree-id4710 . -1) (undo-tree-id4711 . -1) (undo-tree-id4712 . -1) (undo-tree-id4713 . -1) (undo-tree-id4714 . -1) (undo-tree-id4715 . -1) (undo-tree-id4716 . -1) (undo-tree-id4717 . -1) (undo-tree-id4718 . -1) (undo-tree-id4719 . -1) (undo-tree-id4720 . -1) (undo-tree-id4721 . -1) (undo-tree-id4722 . -1) (undo-tree-id4723 . -1) (undo-tree-id4724 . -1) (undo-tree-id4725 . -1) (undo-tree-id4726 . -1) (undo-tree-id4727 . -1) (undo-tree-id4728 . -1) (undo-tree-id4729 . -1) (undo-tree-id4730 . -1) (undo-tree-id4731 . -1) (undo-tree-id4732 . -1) (undo-tree-id4733 . -1) (undo-tree-id4734 . -1) (undo-tree-id4735 . -1) (undo-tree-id4736 . -1) (undo-tree-id4737 . -1) (undo-tree-id4738 . -1) (undo-tree-id4739 . -1) (undo-tree-id4740 . -1) (undo-tree-id4741 . -1) (undo-tree-id4742 . -1) (undo-tree-id4743 . -1) (undo-tree-id4744 . -1) (undo-tree-id4745 . -1) (undo-tree-id4746 . -1) (undo-tree-id4747 . -1) (undo-tree-id4748 . -1) (undo-tree-id4749 . -1) (undo-tree-id4750 . -1) (undo-tree-id4751 . -1) (undo-tree-id4752 . -1) (undo-tree-id4753 . -1) (undo-tree-id4754 . -1) (undo-tree-id4755 . -1) (undo-tree-id4756 . -1) (undo-tree-id4757 . -1) (undo-tree-id4758 . -1) (undo-tree-id4759 . -1) (undo-tree-id4760 . -1) (undo-tree-id4761 . -1) (undo-tree-id4762 . -1) (undo-tree-id4763 . -1) (undo-tree-id4764 . -1) (undo-tree-id4765 . -1) (undo-tree-id4766 . -1) (undo-tree-id4767 . -1) (undo-tree-id4768 . -1) (undo-tree-id4769 . -1) (undo-tree-id4770 . -1) (undo-tree-id4771 . -1) (undo-tree-id4772 . -1) (undo-tree-id4773 . -1) (undo-tree-id4774 . -1) (undo-tree-id4775 . -1) (undo-tree-id4776 . -1) (undo-tree-id4777 . -1) (undo-tree-id4778 . -1) (undo-tree-id4779 . -1) (undo-tree-id4780 . -1) (undo-tree-id4781 . -1) (undo-tree-id4782 . -1) (undo-tree-id4783 . -1) (undo-tree-id4784 . -1) (undo-tree-id4785 . -1) (undo-tree-id4786 . -1) (undo-tree-id4787 . -1) (undo-tree-id4788 . -1) (undo-tree-id4789 . -1) (undo-tree-id4790 . -1) (undo-tree-id4791 . -1) (undo-tree-id4792 . -1) (undo-tree-id4793 . -1) (undo-tree-id4794 . -1) (undo-tree-id4795 . -1) (undo-tree-id4796 . -1) (undo-tree-id4797 . -1) (undo-tree-id4798 . -1) (undo-tree-id4799 . -1) (undo-tree-id4800 . -1) (undo-tree-id4801 . -1) (undo-tree-id4802 . -1) (undo-tree-id4803 . -1) (undo-tree-id4804 . -1) (undo-tree-id4805 . -1) (undo-tree-id4806 . -1) (undo-tree-id4807 . -1) (undo-tree-id4808 . -1) (undo-tree-id4809 . -1) (undo-tree-id4810 . -1) (undo-tree-id4811 . -1) (undo-tree-id4812 . -1) (undo-tree-id4813 . -1) (undo-tree-id4814 . -1) (undo-tree-id4815 . -1) (undo-tree-id4816 . -1) (undo-tree-id4817 . -1) (undo-tree-id4818 . -1) (undo-tree-id4819 . -1) (undo-tree-id4820 . -1) (undo-tree-id4821 . -1) (undo-tree-id4822 . -1) (undo-tree-id4823 . -1) (undo-tree-id4824 . -1) (undo-tree-id4825 . -1) (undo-tree-id4826 . -1) (undo-tree-id4827 . -1) (undo-tree-id4828 . -1) (undo-tree-id4829 . -1) (undo-tree-id4830 . -1) (undo-tree-id4831 . -1) (undo-tree-id4832 . -1) (undo-tree-id4833 . -1) (undo-tree-id4834 . -1) (undo-tree-id4835 . -1) (undo-tree-id4836 . -1) (undo-tree-id4837 . -1) (undo-tree-id4838 . -1) (undo-tree-id4839 . -1) (undo-tree-id4840 . -1) (undo-tree-id4841 . -1) (undo-tree-id4842 . -1) (undo-tree-id4843 . -1) (undo-tree-id4844 . -1) (undo-tree-id4845 . -1) (undo-tree-id4846 . -1) (undo-tree-id4847 . -1) (undo-tree-id4848 . -1) (undo-tree-id4849 . -1) (undo-tree-id4850 . -1) (undo-tree-id4851 . -1) (undo-tree-id4852 . -1) (undo-tree-id4853 . -1) (undo-tree-id4854 . -1) (undo-tree-id4855 . -1) (undo-tree-id4856 . -1) (undo-tree-id4857 . -1) (undo-tree-id4858 . -1) (undo-tree-id4859 . -1) (undo-tree-id4860 . -1) (#("s" 0 1 (fontified t)) . -980) (undo-tree-id4861 . -1) (undo-tree-id4862 . -1) (undo-tree-id4863 . -1) (undo-tree-id4864 . -1) (undo-tree-id4865 . -1) (undo-tree-id4866 . -1) (undo-tree-id4867 . -1) (undo-tree-id4868 . -1) (undo-tree-id4869 . -1) (undo-tree-id4870 . -1) (undo-tree-id4871 . -1) (undo-tree-id4872 . -1) (undo-tree-id4873 . -1) (undo-tree-id4874 . -1) (undo-tree-id4875 . -1) (undo-tree-id4876 . -1) (undo-tree-id4877 . -1) (undo-tree-id4878 . -1) (undo-tree-id4879 . -1) (undo-tree-id4880 . -1) (undo-tree-id4881 . -1) (undo-tree-id4882 . -1) (undo-tree-id4883 . -1) (undo-tree-id4884 . -1) (undo-tree-id4885 . -1) (undo-tree-id4886 . -1) (undo-tree-id4887 . -1) (undo-tree-id4888 . -1) (undo-tree-id4889 . -1) (undo-tree-id4890 . -1) (undo-tree-id4891 . -1) (undo-tree-id4892 . -1) (undo-tree-id4893 . -1) (undo-tree-id4894 . -1) (undo-tree-id4895 . -1) (undo-tree-id4896 . -1) (undo-tree-id4897 . -1) (undo-tree-id4898 . -1) (undo-tree-id4899 . -1) (undo-tree-id4900 . -1) (undo-tree-id4901 . -1) (undo-tree-id4902 . -1) (undo-tree-id4903 . -1) (undo-tree-id4904 . -1) (undo-tree-id4905 . -1) (undo-tree-id4906 . -1) (undo-tree-id4907 . -1) (undo-tree-id4908 . -1) (undo-tree-id4909 . -1) (undo-tree-id4910 . -1) (undo-tree-id4911 . -1) (undo-tree-id4912 . -1) (undo-tree-id4913 . -1) (undo-tree-id4914 . -1) (undo-tree-id4915 . -1) (undo-tree-id4916 . -1) (undo-tree-id4917 . -1) (undo-tree-id4918 . -1) (undo-tree-id4919 . -1) (undo-tree-id4920 . -1) (undo-tree-id4921 . -1) (undo-tree-id4922 . -1) (undo-tree-id4923 . -1) (undo-tree-id4924 . -1) (undo-tree-id4925 . -1) (undo-tree-id4926 . -1) (undo-tree-id4927 . -1) (undo-tree-id4928 . -1) (undo-tree-id4929 . -1) (undo-tree-id4930 . -1) (undo-tree-id4931 . -1) (undo-tree-id4932 . -1) (undo-tree-id4933 . -1) (undo-tree-id4934 . -1) (undo-tree-id4935 . -1) (undo-tree-id4936 . -1) (undo-tree-id4937 . -1) (undo-tree-id4938 . -1) (undo-tree-id4939 . -1) (undo-tree-id4940 . -1) (undo-tree-id4941 . -1) (undo-tree-id4942 . -1) (undo-tree-id4943 . -1) (undo-tree-id4944 . -1) (undo-tree-id4945 . -1) (undo-tree-id4946 . -1) (undo-tree-id4947 . -1) (undo-tree-id4948 . -1) (undo-tree-id4949 . -1) (undo-tree-id4950 . -1) (undo-tree-id4951 . -1) (undo-tree-id4952 . -1) (undo-tree-id4953 . -1) (undo-tree-id4954 . -1) (undo-tree-id4955 . -1) (undo-tree-id4956 . -1) (undo-tree-id4957 . -1) (undo-tree-id4958 . -1) (undo-tree-id4959 . -1) (undo-tree-id4960 . -1) (undo-tree-id4961 . -1) (undo-tree-id4962 . -1) (undo-tree-id4963 . -1) (undo-tree-id4964 . -1) (undo-tree-id4965 . -1) (undo-tree-id4966 . -1) (undo-tree-id4967 . -1) (undo-tree-id4968 . -1) (undo-tree-id4969 . -1) (undo-tree-id4970 . -1) (undo-tree-id4971 . -1) (undo-tree-id4972 . -1) (undo-tree-id4973 . -1) (undo-tree-id4974 . -1) (undo-tree-id4975 . -1) (undo-tree-id4976 . -1) (undo-tree-id4977 . -1) (undo-tree-id4978 . -1) (undo-tree-id4979 . -1) (undo-tree-id4980 . -1) (undo-tree-id4981 . -1) (undo-tree-id4982 . -1) (undo-tree-id4983 . -1) (undo-tree-id4984 . -1) (undo-tree-id4985 . -1) (undo-tree-id4986 . -1) (undo-tree-id4987 . -1) (undo-tree-id4988 . -1) (undo-tree-id4989 . -1) (undo-tree-id4990 . -1) (undo-tree-id4991 . -1) (undo-tree-id4992 . -1) (undo-tree-id4993 . -1) (undo-tree-id4994 . -1) (undo-tree-id4995 . -1) (undo-tree-id4996 . -1) (undo-tree-id4997 . -1) (undo-tree-id4998 . -1) (undo-tree-id4999 . -1) (undo-tree-id5000 . -1) (undo-tree-id5001 . -1) (undo-tree-id5002 . -1) (undo-tree-id5003 . -1) (undo-tree-id5004 . -1) (undo-tree-id5005 . -1) (undo-tree-id5006 . -1) (undo-tree-id5007 . -1) (undo-tree-id5008 . -1) (undo-tree-id5009 . -1) (undo-tree-id5010 . -1) (undo-tree-id5011 . -1) (undo-tree-id5012 . -1) (undo-tree-id5013 . -1) (undo-tree-id5014 . -1) (undo-tree-id5015 . -1) (undo-tree-id5016 . -1) (undo-tree-id5017 . -1) (undo-tree-id5018 . -1) (undo-tree-id5019 . -1) (undo-tree-id5020 . -1) (undo-tree-id5021 . -1) (undo-tree-id5022 . -1) (undo-tree-id5023 . -1) (undo-tree-id5024 . -1) (undo-tree-id5025 . -1) (undo-tree-id5026 . -1) (undo-tree-id5027 . -1) (undo-tree-id5028 . -1) (undo-tree-id5029 . -1) (undo-tree-id5030 . -1) (undo-tree-id5031 . -1) (undo-tree-id5032 . -1) (undo-tree-id5033 . -1) (undo-tree-id5034 . -1) (undo-tree-id5035 . -1) (undo-tree-id5036 . -1) (undo-tree-id5037 . -1) (undo-tree-id5038 . -1) (undo-tree-id5039 . -1) (undo-tree-id5040 . -1) (undo-tree-id5041 . -1) (undo-tree-id5042 . -1) (undo-tree-id5043 . -1) (undo-tree-id5044 . -1) (undo-tree-id5045 . -1) (undo-tree-id5046 . -1) (undo-tree-id5047 . -1) (undo-tree-id5048 . -1) (undo-tree-id5049 . -1) (undo-tree-id5050 . -1) (undo-tree-id5051 . -1) (undo-tree-id5052 . -1) (undo-tree-id5053 . -1) (undo-tree-id5054 . -1) (undo-tree-id5055 . -1) (undo-tree-id5056 . -1) (undo-tree-id5057 . -1) (undo-tree-id5058 . -1) (undo-tree-id5059 . -1) (undo-tree-id5060 . -1) (undo-tree-id5061 . -1) (undo-tree-id5062 . -1) (undo-tree-id5063 . -1) (undo-tree-id5064 . -1) (undo-tree-id5065 . -1) (undo-tree-id5066 . -1) (undo-tree-id5067 . -1) (undo-tree-id5068 . -1) (undo-tree-id5069 . -1) (undo-tree-id5070 . -1) (undo-tree-id5071 . -1) (undo-tree-id5072 . -1) (undo-tree-id5073 . -1) (undo-tree-id5074 . -1) (undo-tree-id5075 . -1) (undo-tree-id5076 . -1) (undo-tree-id5077 . -1) (undo-tree-id5078 . -1) (undo-tree-id5079 . -1) (undo-tree-id5080 . -1) (undo-tree-id5081 . -1) (undo-tree-id5082 . -1) (undo-tree-id5083 . -1) (undo-tree-id5084 . -1) (undo-tree-id5085 . -1) (#("e" 0 1 (fontified t)) . -981) (undo-tree-id5086 . -1) (undo-tree-id5087 . -1) (undo-tree-id5088 . -1) (undo-tree-id5089 . -1) (undo-tree-id5090 . -1) (undo-tree-id5091 . -1) (undo-tree-id5092 . -1) (undo-tree-id5093 . -1) (undo-tree-id5094 . -1) (undo-tree-id5095 . -1) (undo-tree-id5096 . -1) (undo-tree-id5097 . -1) (undo-tree-id5098 . -1) (undo-tree-id5099 . -1) (undo-tree-id5100 . -1) (undo-tree-id5101 . -1) (undo-tree-id5102 . -1) (undo-tree-id5103 . -1) (undo-tree-id5104 . -1) (undo-tree-id5105 . -1) (undo-tree-id5106 . -1) (undo-tree-id5107 . -1) (undo-tree-id5108 . -1) (undo-tree-id5109 . -1) (undo-tree-id5110 . -1) (undo-tree-id5111 . -1) (undo-tree-id5112 . -1) (undo-tree-id5113 . -1) (undo-tree-id5114 . -1) (undo-tree-id5115 . -1) (undo-tree-id5116 . -1) (undo-tree-id5117 . -1) (undo-tree-id5118 . -1) (undo-tree-id5119 . -1) (undo-tree-id5120 . -1) (undo-tree-id5121 . -1) (undo-tree-id5122 . -1) (undo-tree-id5123 . -1) (undo-tree-id5124 . -1) (undo-tree-id5125 . -1) (undo-tree-id5126 . -1) (undo-tree-id5127 . -1) (undo-tree-id5128 . -1) (undo-tree-id5129 . -1) (undo-tree-id5130 . -1) (undo-tree-id5131 . -1) (undo-tree-id5132 . -1) (undo-tree-id5133 . -1) (undo-tree-id5134 . -1) (undo-tree-id5135 . -1) (undo-tree-id5136 . -1) (undo-tree-id5137 . -1) (undo-tree-id5138 . -1) (undo-tree-id5139 . -1) (undo-tree-id5140 . -1) (undo-tree-id5141 . -1) (undo-tree-id5142 . -1) (undo-tree-id5143 . -1) (undo-tree-id5144 . -1) (undo-tree-id5145 . -1) (undo-tree-id5146 . -1) (undo-tree-id5147 . -1) (undo-tree-id5148 . -1) (undo-tree-id5149 . -1) (undo-tree-id5150 . -1) (undo-tree-id5151 . -1) (undo-tree-id5152 . -1) (undo-tree-id5153 . -1) (undo-tree-id5154 . -1) (undo-tree-id5155 . -1) (undo-tree-id5156 . -1) (undo-tree-id5157 . -1) (undo-tree-id5158 . -1) (undo-tree-id5159 . -1) (undo-tree-id5160 . -1) (undo-tree-id5161 . -1) (undo-tree-id5162 . -1) (undo-tree-id5163 . -1) (undo-tree-id5164 . -1) (undo-tree-id5165 . -1) (undo-tree-id5166 . -1) (undo-tree-id5167 . -1) (undo-tree-id5168 . -1) (undo-tree-id5169 . -1) (undo-tree-id5170 . -1) (undo-tree-id5171 . -1) (undo-tree-id5172 . -1) (undo-tree-id5173 . -1) (undo-tree-id5174 . -1) (undo-tree-id5175 . -1) (undo-tree-id5176 . -1) (undo-tree-id5177 . -1) (undo-tree-id5178 . -1) (undo-tree-id5179 . -1) (undo-tree-id5180 . -1) (undo-tree-id5181 . -1) (undo-tree-id5182 . -1) (undo-tree-id5183 . -1) (undo-tree-id5184 . -1) (undo-tree-id5185 . -1) (undo-tree-id5186 . -1) (undo-tree-id5187 . -1) (undo-tree-id5188 . -1) (undo-tree-id5189 . -1) (undo-tree-id5190 . -1) (undo-tree-id5191 . -1) (undo-tree-id5192 . -1) (undo-tree-id5193 . -1) (undo-tree-id5194 . -1) (undo-tree-id5195 . -1) (undo-tree-id5196 . -1) (undo-tree-id5197 . -1) (undo-tree-id5198 . -1) (undo-tree-id5199 . -1) (undo-tree-id5200 . -1) (undo-tree-id5201 . -1) (undo-tree-id5202 . -1) (undo-tree-id5203 . -1) (undo-tree-id5204 . -1) (undo-tree-id5205 . -1) (undo-tree-id5206 . -1) (undo-tree-id5207 . -1) (undo-tree-id5208 . -1) (undo-tree-id5209 . -1) (undo-tree-id5210 . -1) (undo-tree-id5211 . -1) (undo-tree-id5212 . -1) (undo-tree-id5213 . -1) (undo-tree-id5214 . -1) (undo-tree-id5215 . -1) (undo-tree-id5216 . -1) (undo-tree-id5217 . -1) (undo-tree-id5218 . -1) (undo-tree-id5219 . -1) (undo-tree-id5220 . -1) (undo-tree-id5221 . -1) (undo-tree-id5222 . -1) (undo-tree-id5223 . -1) (undo-tree-id5224 . -1) (undo-tree-id5225 . -1) (undo-tree-id5226 . -1) (undo-tree-id5227 . -1) (undo-tree-id5228 . -1) (undo-tree-id5229 . -1) (undo-tree-id5230 . -1) (undo-tree-id5231 . -1) (undo-tree-id5232 . -1) (undo-tree-id5233 . -1) (undo-tree-id5234 . -1) (undo-tree-id5235 . -1) (undo-tree-id5236 . -1) (undo-tree-id5237 . -1) (undo-tree-id5238 . -1) (undo-tree-id5239 . -1) (undo-tree-id5240 . -1) (undo-tree-id5241 . -1) (undo-tree-id5242 . -1) (undo-tree-id5243 . -1) (undo-tree-id5244 . -1) (undo-tree-id5245 . -1) (undo-tree-id5246 . -1) (undo-tree-id5247 . -1) (undo-tree-id5248 . -1) (undo-tree-id5249 . -1) (undo-tree-id5250 . -1) (undo-tree-id5251 . -1) (undo-tree-id5252 . -1) (undo-tree-id5253 . -1) (undo-tree-id5254 . -1) (undo-tree-id5255 . -1) (undo-tree-id5256 . -1) (undo-tree-id5257 . -1) (undo-tree-id5258 . -1) (undo-tree-id5259 . -1) (undo-tree-id5260 . -1) (undo-tree-id5261 . -1) (undo-tree-id5262 . -1) (undo-tree-id5263 . -1) (undo-tree-id5264 . -1) (undo-tree-id5265 . -1) (undo-tree-id5266 . -1) (undo-tree-id5267 . -1) (undo-tree-id5268 . -1) (undo-tree-id5269 . -1) (undo-tree-id5270 . -1) (undo-tree-id5271 . -1) (undo-tree-id5272 . -1) (undo-tree-id5273 . -1) (undo-tree-id5274 . -1) (undo-tree-id5275 . -1) (undo-tree-id5276 . -1) (undo-tree-id5277 . -1) (undo-tree-id5278 . -1) (undo-tree-id5279 . -1) (undo-tree-id5280 . -1) (undo-tree-id5281 . -1) (undo-tree-id5282 . -1) (undo-tree-id5283 . -1) (undo-tree-id5284 . -1) (undo-tree-id5285 . -1) (undo-tree-id5286 . -1) (undo-tree-id5287 . -1) (undo-tree-id5288 . -1) (undo-tree-id5289 . -1) (undo-tree-id5290 . -1) (undo-tree-id5291 . -1) (undo-tree-id5292 . -1) (undo-tree-id5293 . -1) (undo-tree-id5294 . -1) (undo-tree-id5295 . -1) (#("l" 0 1 (fontified t)) . -982) (undo-tree-id5296 . -1) (undo-tree-id5297 . -1) (undo-tree-id5298 . -1) (undo-tree-id5299 . -1) (undo-tree-id5300 . -1) (undo-tree-id5301 . -1) (undo-tree-id5302 . -1) (undo-tree-id5303 . -1) (undo-tree-id5304 . -1) (undo-tree-id5305 . -1) (undo-tree-id5306 . -1) (undo-tree-id5307 . -1) (undo-tree-id5308 . -1) (undo-tree-id5309 . -1) (undo-tree-id5310 . -1) (undo-tree-id5311 . -1) (undo-tree-id5312 . -1) (undo-tree-id5313 . -1) (undo-tree-id5314 . -1) (undo-tree-id5315 . -1) (undo-tree-id5316 . -1) (undo-tree-id5317 . -1) (undo-tree-id5318 . -1) (undo-tree-id5319 . -1) (undo-tree-id5320 . -1) (undo-tree-id5321 . -1) (undo-tree-id5322 . -1) (undo-tree-id5323 . -1) (undo-tree-id5324 . -1) (undo-tree-id5325 . -1) (undo-tree-id5326 . -1) (undo-tree-id5327 . -1) (undo-tree-id5328 . -1) (undo-tree-id5329 . -1) (undo-tree-id5330 . -1) (undo-tree-id5331 . -1) (undo-tree-id5332 . -1) (undo-tree-id5333 . -1) (undo-tree-id5334 . -1) (undo-tree-id5335 . -1) (undo-tree-id5336 . -1) (undo-tree-id5337 . -1) (undo-tree-id5338 . -1) (undo-tree-id5339 . -1) (undo-tree-id5340 . -1) (undo-tree-id5341 . -1) (undo-tree-id5342 . -1) (undo-tree-id5343 . -1) (undo-tree-id5344 . -1) (undo-tree-id5345 . -1) (undo-tree-id5346 . -1) (undo-tree-id5347 . -1) (undo-tree-id5348 . -1) (undo-tree-id5349 . -1) (undo-tree-id5350 . -1) (undo-tree-id5351 . -1) (undo-tree-id5352 . -1) (undo-tree-id5353 . -1) (undo-tree-id5354 . -1) (undo-tree-id5355 . -1) (undo-tree-id5356 . -1) (undo-tree-id5357 . -1) (undo-tree-id5358 . -1) (undo-tree-id5359 . -1) (undo-tree-id5360 . -1) (undo-tree-id5361 . -1) (undo-tree-id5362 . -1) (undo-tree-id5363 . -1) (undo-tree-id5364 . -1) (undo-tree-id5365 . -1) (undo-tree-id5366 . -1) (undo-tree-id5367 . -1) (undo-tree-id5368 . -1) (undo-tree-id5369 . -1) (undo-tree-id5370 . -1) (undo-tree-id5371 . -1) (undo-tree-id5372 . -1) (undo-tree-id5373 . -1) (undo-tree-id5374 . -1) (undo-tree-id5375 . -1) (undo-tree-id5376 . -1) (undo-tree-id5377 . -1) (undo-tree-id5378 . -1) (undo-tree-id5379 . -1) (undo-tree-id5380 . -1) (undo-tree-id5381 . -1) (undo-tree-id5382 . -1) (undo-tree-id5383 . -1) (undo-tree-id5384 . -1) (undo-tree-id5385 . -1) (undo-tree-id5386 . -1) (undo-tree-id5387 . -1) (undo-tree-id5388 . -1) (undo-tree-id5389 . -1) (undo-tree-id5390 . -1) (undo-tree-id5391 . -1) (undo-tree-id5392 . -1) (undo-tree-id5393 . -1) (undo-tree-id5394 . -1) (undo-tree-id5395 . -1) (undo-tree-id5396 . -1) (undo-tree-id5397 . -1) (undo-tree-id5398 . -1) (undo-tree-id5399 . -1) (undo-tree-id5400 . -1) (undo-tree-id5401 . -1) (undo-tree-id5402 . -1) (undo-tree-id5403 . -1) (undo-tree-id5404 . -1) (undo-tree-id5405 . -1) (undo-tree-id5406 . -1) (undo-tree-id5407 . -1) (undo-tree-id5408 . -1) (undo-tree-id5409 . -1) (undo-tree-id5410 . -1) (undo-tree-id5411 . -1) (undo-tree-id5412 . -1) (undo-tree-id5413 . -1) (undo-tree-id5414 . -1) (undo-tree-id5415 . -1) (undo-tree-id5416 . -1) (undo-tree-id5417 . -1) (undo-tree-id5418 . -1) (undo-tree-id5419 . -1) (undo-tree-id5420 . -1) (undo-tree-id5421 . -1) (undo-tree-id5422 . -1) (undo-tree-id5423 . -1) (undo-tree-id5424 . -1) (undo-tree-id5425 . -1) (undo-tree-id5426 . -1) (undo-tree-id5427 . -1) (undo-tree-id5428 . -1) (undo-tree-id5429 . -1) (undo-tree-id5430 . -1) (undo-tree-id5431 . -1) (undo-tree-id5432 . -1) (undo-tree-id5433 . -1) (undo-tree-id5434 . -1) (undo-tree-id5435 . -1) (undo-tree-id5436 . -1) (undo-tree-id5437 . -1) (undo-tree-id5438 . -1) (undo-tree-id5439 . -1) (undo-tree-id5440 . -1) (undo-tree-id5441 . -1) (undo-tree-id5442 . -1) (undo-tree-id5443 . -1) (undo-tree-id5444 . -1) (undo-tree-id5445 . -1) (undo-tree-id5446 . -1) (undo-tree-id5447 . -1) (undo-tree-id5448 . -1) (undo-tree-id5449 . -1) (undo-tree-id5450 . -1) (undo-tree-id5451 . -1) (undo-tree-id5452 . -1) (undo-tree-id5453 . -1) (undo-tree-id5454 . -1) (undo-tree-id5455 . -1) (undo-tree-id5456 . -1) (undo-tree-id5457 . -1) (undo-tree-id5458 . -1) (undo-tree-id5459 . -1) (undo-tree-id5460 . -1) (undo-tree-id5461 . -1) (undo-tree-id5462 . -1) (undo-tree-id5463 . -1) (undo-tree-id5464 . -1) (undo-tree-id5465 . -1) (undo-tree-id5466 . -1) (undo-tree-id5467 . -1) (undo-tree-id5468 . -1) (undo-tree-id5469 . -1) (undo-tree-id5470 . -1) (undo-tree-id5471 . -1) (undo-tree-id5472 . -1) (undo-tree-id5473 . -1) (undo-tree-id5474 . -1) (undo-tree-id5475 . -1) (undo-tree-id5476 . -1) (undo-tree-id5477 . -1) (undo-tree-id5478 . -1) (undo-tree-id5479 . -1) (undo-tree-id5480 . -1) (undo-tree-id5481 . -1) (undo-tree-id5482 . -1) (undo-tree-id5483 . -1) (undo-tree-id5484 . -1) (undo-tree-id5485 . -1) (undo-tree-id5486 . -1) (undo-tree-id5487 . -1) (undo-tree-id5488 . -1) (undo-tree-id5489 . -1) (#("f" 0 1 (face font-lock-keyword-face fontified t)) . -983) (undo-tree-id5490 . -1) (undo-tree-id5491 . -1) (undo-tree-id5492 . -1) (undo-tree-id5493 . -1) (undo-tree-id5494 . -1) (undo-tree-id5495 . -1) (undo-tree-id5496 . -1) (undo-tree-id5497 . -1) (undo-tree-id5498 . -1) (undo-tree-id5499 . -1) (undo-tree-id5500 . -1) (undo-tree-id5501 . -1) (undo-tree-id5502 . -1) (undo-tree-id5503 . -1) (undo-tree-id5504 . -1) (undo-tree-id5505 . -1) (undo-tree-id5506 . -1) (undo-tree-id5507 . -1) (undo-tree-id5508 . -1) (undo-tree-id5509 . -1) (undo-tree-id5510 . -1) (undo-tree-id5511 . -1) (undo-tree-id5512 . -1) (undo-tree-id5513 . -1) (undo-tree-id5514 . -1) (undo-tree-id5515 . -1) (undo-tree-id5516 . -1) (undo-tree-id5517 . -1) (undo-tree-id5518 . -1) (undo-tree-id5519 . -1) (undo-tree-id5520 . -1) (undo-tree-id5521 . -1) (undo-tree-id5522 . -1) (undo-tree-id5523 . -1) (undo-tree-id5524 . -1) (undo-tree-id5525 . -1) (undo-tree-id5526 . -1) (undo-tree-id5527 . -1) (undo-tree-id5528 . -1) (undo-tree-id5529 . -1) (undo-tree-id5530 . -1) (undo-tree-id5531 . -1) (undo-tree-id5532 . -1) (undo-tree-id5533 . -1) (undo-tree-id5534 . -1) (undo-tree-id5535 . -1) (undo-tree-id5536 . -1) (undo-tree-id5537 . -1) (undo-tree-id5538 . -1) (undo-tree-id5539 . -1) (undo-tree-id5540 . -1) (undo-tree-id5541 . -1) (undo-tree-id5542 . -1) (undo-tree-id5543 . -1) (undo-tree-id5544 . -1) (undo-tree-id5545 . -1) (undo-tree-id5546 . -1) (undo-tree-id5547 . -1) (undo-tree-id5548 . -1) (undo-tree-id5549 . -1) (undo-tree-id5550 . -1) (undo-tree-id5551 . -1) (undo-tree-id5552 . -1) (undo-tree-id5553 . -1) (undo-tree-id5554 . -1) (undo-tree-id5555 . -1) (undo-tree-id5556 . -1) (undo-tree-id5557 . -1) (undo-tree-id5558 . -1) (undo-tree-id5559 . -1) (undo-tree-id5560 . -1) (undo-tree-id5561 . -1) (undo-tree-id5562 . -1) (undo-tree-id5563 . -1) (undo-tree-id5564 . -1) (undo-tree-id5565 . -1) (undo-tree-id5566 . -1) (undo-tree-id5567 . -1) (undo-tree-id5568 . -1) (undo-tree-id5569 . -1) (undo-tree-id5570 . -1) (undo-tree-id5571 . -1) (undo-tree-id5572 . -1) (undo-tree-id5573 . -1) (undo-tree-id5574 . -1) (undo-tree-id5575 . -1) (undo-tree-id5576 . -1) (undo-tree-id5577 . -1) (undo-tree-id5578 . -1) (undo-tree-id5579 . -1) (undo-tree-id5580 . -1) (undo-tree-id5581 . -1) (undo-tree-id5582 . -1) (undo-tree-id5583 . -1) (undo-tree-id5584 . -1) (undo-tree-id5585 . -1) (undo-tree-id5586 . -1) (undo-tree-id5587 . -1) (undo-tree-id5588 . -1) (undo-tree-id5589 . -1) (undo-tree-id5590 . -1) (undo-tree-id5591 . -1) (undo-tree-id5592 . -1) (undo-tree-id5593 . -1) (undo-tree-id5594 . -1) (undo-tree-id5595 . -1) (undo-tree-id5596 . -1) (undo-tree-id5597 . -1) (undo-tree-id5598 . -1) (undo-tree-id5599 . -1) (undo-tree-id5600 . -1) (undo-tree-id5601 . -1) (undo-tree-id5602 . -1) (undo-tree-id5603 . -1) (undo-tree-id5604 . -1) (undo-tree-id5605 . -1) (undo-tree-id5606 . -1) (undo-tree-id5607 . -1) (undo-tree-id5608 . -1) (undo-tree-id5609 . -1) (undo-tree-id5610 . -1) (undo-tree-id5611 . -1) (undo-tree-id5612 . -1) (undo-tree-id5613 . -1) (undo-tree-id5614 . -1) (undo-tree-id5615 . -1) (undo-tree-id5616 . -1) (undo-tree-id5617 . -1) (undo-tree-id5618 . -1) (undo-tree-id5619 . -1) (undo-tree-id5620 . -1) (undo-tree-id5621 . -1) (undo-tree-id5622 . -1) (undo-tree-id5623 . -1) (undo-tree-id5624 . -1) (undo-tree-id5625 . -1) (undo-tree-id5626 . -1) (undo-tree-id5627 . -1) (undo-tree-id5628 . -1) (undo-tree-id5629 . -1) (undo-tree-id5630 . -1) (undo-tree-id5631 . -1) (undo-tree-id5632 . -1) (undo-tree-id5633 . -1) (undo-tree-id5634 . -1) (undo-tree-id5635 . -1) (undo-tree-id5636 . -1) (undo-tree-id5637 . -1) (undo-tree-id5638 . -1) (undo-tree-id5639 . -1) (undo-tree-id5640 . -1) (undo-tree-id5641 . -1) (undo-tree-id5642 . -1) (undo-tree-id5643 . -1) (undo-tree-id5644 . -1) (undo-tree-id5645 . -1) (undo-tree-id5646 . -1) (undo-tree-id5647 . -1) (undo-tree-id5648 . -1) (undo-tree-id5649 . -1) (undo-tree-id5650 . -1) (undo-tree-id5651 . -1) (undo-tree-id5652 . -1) (undo-tree-id5653 . -1) (undo-tree-id5654 . -1) (undo-tree-id5655 . -1) (undo-tree-id5656 . -1) (undo-tree-id5657 . -1) (undo-tree-id5658 . -1) (undo-tree-id5659 . -1) (undo-tree-id5660 . -1) (undo-tree-id5661 . -1) (undo-tree-id5662 . -1) (undo-tree-id5663 . -1) (undo-tree-id5664 . -1) (undo-tree-id5665 . -1) (undo-tree-id5666 . -1) (undo-tree-id5667 . -1) (#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . -984) (undo-tree-id5668 . -1) (undo-tree-id5669 . -1) (undo-tree-id5670 . -1) (undo-tree-id5671 . -1) (undo-tree-id5672 . -1) (undo-tree-id5673 . -1) (undo-tree-id5674 . -1) (undo-tree-id5675 . -1) (undo-tree-id5676 . -1) (undo-tree-id5677 . -1) (undo-tree-id5678 . -1) (undo-tree-id5679 . -1) (undo-tree-id5680 . -1) (undo-tree-id5681 . -1) (undo-tree-id5682 . -1) (undo-tree-id5683 . -1) (undo-tree-id5684 . -1) (undo-tree-id5685 . -1) (undo-tree-id5686 . -1) (undo-tree-id5687 . -1) (undo-tree-id5688 . -1) (undo-tree-id5689 . -1) (undo-tree-id5690 . -1) (undo-tree-id5691 . -1) (undo-tree-id5692 . -1) (undo-tree-id5693 . -1) (undo-tree-id5694 . -1) (undo-tree-id5695 . -1) (undo-tree-id5696 . -1) (undo-tree-id5697 . -1) (undo-tree-id5698 . -1) (undo-tree-id5699 . -1) (undo-tree-id5700 . -1) (undo-tree-id5701 . -1) (undo-tree-id5702 . -1) (undo-tree-id5703 . -1) (undo-tree-id5704 . -1) (undo-tree-id5705 . -1) (undo-tree-id5706 . -1) (undo-tree-id5707 . -1) (undo-tree-id5708 . -1) (undo-tree-id5709 . -1) (undo-tree-id5710 . -1) (undo-tree-id5711 . -1) (undo-tree-id5712 . -1) (undo-tree-id5713 . -1) (undo-tree-id5714 . -1) (undo-tree-id5715 . -1) (undo-tree-id5716 . -1) (undo-tree-id5717 . -1) (undo-tree-id5718 . -1) (undo-tree-id5719 . -1) (undo-tree-id5720 . -1) (undo-tree-id5721 . -1) (undo-tree-id5722 . -1) (undo-tree-id5723 . -1) (undo-tree-id5724 . -1) (undo-tree-id5725 . -1) (undo-tree-id5726 . -1) (undo-tree-id5727 . -1) (undo-tree-id5728 . -1) (undo-tree-id5729 . -1) (undo-tree-id5730 . -1) (undo-tree-id5731 . -1) (undo-tree-id5732 . -1) (undo-tree-id5733 . -1) (undo-tree-id5734 . -1) (undo-tree-id5735 . -1) (undo-tree-id5736 . -1) (undo-tree-id5737 . -1) (undo-tree-id5738 . -1) (undo-tree-id5739 . -1) (undo-tree-id5740 . -1) (undo-tree-id5741 . -1) (undo-tree-id5742 . -1) (undo-tree-id5743 . -1) (undo-tree-id5744 . -1) (undo-tree-id5745 . -1) (undo-tree-id5746 . -1) (undo-tree-id5747 . -1) (undo-tree-id5748 . -1) (undo-tree-id5749 . -1) (undo-tree-id5750 . -1) (undo-tree-id5751 . -1) (undo-tree-id5752 . -1) (undo-tree-id5753 . -1) (undo-tree-id5754 . -1) (undo-tree-id5755 . -1) (undo-tree-id5756 . -1) (undo-tree-id5757 . -1) (undo-tree-id5758 . -1) (undo-tree-id5759 . -1) (undo-tree-id5760 . -1) (undo-tree-id5761 . -1) (undo-tree-id5762 . -1) (undo-tree-id5763 . -1) (undo-tree-id5764 . -1) (undo-tree-id5765 . -1) (undo-tree-id5766 . -1) (undo-tree-id5767 . -1) (undo-tree-id5768 . -1) (undo-tree-id5769 . -1) (undo-tree-id5770 . -1) (undo-tree-id5771 . -1) (undo-tree-id5772 . -1) (undo-tree-id5773 . -1) (undo-tree-id5774 . -1) (undo-tree-id5775 . -1) (undo-tree-id5776 . -1) (undo-tree-id5777 . -1) (undo-tree-id5778 . -1) (undo-tree-id5779 . -1) (undo-tree-id5780 . -1) (undo-tree-id5781 . -1) (undo-tree-id5782 . -1) (undo-tree-id5783 . -1) (undo-tree-id5784 . -1) (undo-tree-id5785 . -1) (undo-tree-id5786 . -1) (undo-tree-id5787 . -1) (undo-tree-id5788 . -1) (undo-tree-id5789 . -1) (undo-tree-id5790 . -1) (undo-tree-id5791 . -1) (undo-tree-id5792 . -1) (undo-tree-id5793 . -1) (undo-tree-id5794 . -1) (undo-tree-id5795 . -1) (undo-tree-id5796 . -1) (undo-tree-id5797 . -1) (undo-tree-id5798 . -1) (undo-tree-id5799 . -1) (undo-tree-id5800 . -1) (undo-tree-id5801 . -1) (undo-tree-id5802 . -1) (undo-tree-id5803 . -1) (undo-tree-id5804 . -1) (undo-tree-id5805 . -1) (undo-tree-id5806 . -1) (undo-tree-id5807 . -1) (undo-tree-id5808 . -1) (undo-tree-id5809 . -1) (undo-tree-id5810 . -1) (undo-tree-id5811 . -1) (undo-tree-id5812 . -1) (undo-tree-id5813 . -1) (undo-tree-id5814 . -1) (undo-tree-id5815 . -1) (#(":" 0 1 (fontified t)) . -985) (undo-tree-id5816 . -1) (undo-tree-id5817 . -1) (undo-tree-id5818 . -1) (undo-tree-id5819 . -1) (undo-tree-id5820 . -1) (undo-tree-id5821 . -1) (undo-tree-id5822 . -1) (undo-tree-id5823 . -1) (undo-tree-id5824 . -1) (undo-tree-id5825 . -1) (undo-tree-id5826 . -1) (undo-tree-id5827 . -1) (undo-tree-id5828 . -1) (undo-tree-id5829 . -1) (undo-tree-id5830 . -1) (undo-tree-id5831 . -1) (undo-tree-id5832 . -1) (undo-tree-id5833 . -1) (undo-tree-id5834 . -1) (undo-tree-id5835 . -1) (undo-tree-id5836 . -1) (undo-tree-id5837 . -1) (undo-tree-id5838 . -1) (undo-tree-id5839 . -1) (undo-tree-id5840 . -1) (undo-tree-id5841 . -1) (undo-tree-id5842 . -1) (undo-tree-id5843 . -1) (undo-tree-id5844 . -1) (undo-tree-id5845 . -1) (undo-tree-id5846 . -1) (undo-tree-id5847 . -1) (undo-tree-id5848 . -1) (undo-tree-id5849 . -1) (undo-tree-id5850 . -1) (undo-tree-id5851 . -1) (undo-tree-id5852 . -1) (undo-tree-id5853 . -1) (undo-tree-id5854 . -1) (undo-tree-id5855 . -1) (undo-tree-id5856 . -1) (undo-tree-id5857 . -1) (undo-tree-id5858 . -1) (undo-tree-id5859 . -1) (undo-tree-id5860 . -1) (undo-tree-id5861 . -1) (undo-tree-id5862 . -1) (undo-tree-id5863 . -1) (undo-tree-id5864 . -1) (undo-tree-id5865 . -1) (undo-tree-id5866 . -1) (undo-tree-id5867 . -1) (undo-tree-id5868 . -1) (undo-tree-id5869 . -1) (undo-tree-id5870 . -1) (undo-tree-id5871 . -1) (undo-tree-id5872 . -1) (undo-tree-id5873 . -1) (undo-tree-id5874 . -1) (undo-tree-id5875 . -1) (undo-tree-id5876 . -1) (undo-tree-id5877 . -1) (undo-tree-id5878 . -1) (undo-tree-id5879 . -1) (undo-tree-id5880 . -1) (undo-tree-id5881 . -1) (undo-tree-id5882 . -1) (undo-tree-id5883 . -1) (undo-tree-id5884 . -1) (undo-tree-id5885 . -1) (undo-tree-id5886 . -1) (undo-tree-id5887 . -1) (undo-tree-id5888 . -1) (undo-tree-id5889 . -1) (undo-tree-id5890 . -1) (undo-tree-id5891 . -1) (undo-tree-id5892 . -1) (undo-tree-id5893 . -1) (undo-tree-id5894 . -1) (undo-tree-id5895 . -1) (undo-tree-id5896 . -1) (undo-tree-id5897 . -1) (undo-tree-id5898 . -1) (undo-tree-id5899 . -1) (undo-tree-id5900 . -1) (undo-tree-id5901 . -1) (undo-tree-id5902 . -1) (undo-tree-id5903 . -1) (undo-tree-id5904 . -1) (undo-tree-id5905 . -1) (undo-tree-id5906 . -1) (undo-tree-id5907 . -1) (undo-tree-id5908 . -1) (undo-tree-id5909 . -1) (undo-tree-id5910 . -1) (undo-tree-id5911 . -1) (undo-tree-id5912 . -1) (undo-tree-id5913 . -1) (undo-tree-id5914 . -1) (undo-tree-id5915 . -1) (undo-tree-id5916 . -1) (undo-tree-id5917 . -1) (undo-tree-id5918 . -1) (undo-tree-id5919 . -1) (undo-tree-id5920 . -1) (undo-tree-id5921 . -1) (undo-tree-id5922 . -1) (undo-tree-id5923 . -1) (undo-tree-id5924 . -1) (undo-tree-id5925 . -1) (undo-tree-id5926 . -1) (#("
" 0 1 (fontified t)) . -986) (undo-tree-id5927 . -1) (undo-tree-id5928 . 1) (undo-tree-id5929 . -1) (undo-tree-id5930 . -1) (undo-tree-id5931 . -1) (undo-tree-id5932 . -1) (undo-tree-id5933 . -1) (undo-tree-id5934 . -1) (undo-tree-id5935 . -1) (undo-tree-id5936 . -1) (undo-tree-id5937 . -1) (undo-tree-id5938 . -1) (undo-tree-id5939 . -1) (undo-tree-id5940 . -1) (undo-tree-id5941 . -1) (undo-tree-id5942 . -1) (undo-tree-id5943 . -1) (undo-tree-id5944 . -1) (undo-tree-id5945 . -1) (undo-tree-id5946 . -1) (undo-tree-id5947 . -1) (undo-tree-id5948 . -1) (undo-tree-id5949 . -1) (undo-tree-id5950 . -1) (undo-tree-id5951 . -1) (undo-tree-id5952 . -1) (undo-tree-id5953 . -1) (undo-tree-id5954 . -1) (undo-tree-id5955 . -1) (undo-tree-id5956 . -1) (undo-tree-id5957 . -1) (undo-tree-id5958 . -1) (undo-tree-id5959 . -1) (undo-tree-id5960 . -1) (undo-tree-id5961 . -1) (undo-tree-id5962 . -1) (undo-tree-id5963 . -1) (undo-tree-id5964 . -1) (undo-tree-id5965 . -1) (undo-tree-id5966 . -1) (undo-tree-id5967 . -1) (undo-tree-id5968 . -1) (undo-tree-id5969 . -1) (undo-tree-id5970 . -1) (undo-tree-id5971 . -1) (undo-tree-id5972 . -1) (undo-tree-id5973 . -1) (undo-tree-id5974 . -1) (undo-tree-id5975 . -1) (undo-tree-id5976 . -1) (undo-tree-id5977 . -1) (undo-tree-id5978 . -1) (undo-tree-id5979 . -1) (undo-tree-id5980 . -1) (undo-tree-id5981 . -1) (undo-tree-id5982 . -1) (undo-tree-id5983 . -1) (undo-tree-id5984 . -1) (undo-tree-id5985 . -1) (undo-tree-id5986 . -1) (undo-tree-id5987 . -1) (undo-tree-id5988 . -1) (undo-tree-id5989 . -1) (undo-tree-id5990 . -1) (undo-tree-id5991 . -1) (undo-tree-id5992 . -1) (undo-tree-id5993 . -1) (undo-tree-id5994 . -1) (undo-tree-id5995 . -1) (undo-tree-id5996 . -1) (undo-tree-id5997 . -1) (undo-tree-id5998 . -1) (undo-tree-id5999 . -1) (undo-tree-id6000 . -1) (undo-tree-id6001 . -1) (undo-tree-id6002 . -1) (undo-tree-id6003 . -1) (undo-tree-id6004 . -1) (undo-tree-id6005 . -1) (undo-tree-id6006 . -1) (undo-tree-id6007 . -1) 987) nil (25595 53527 623714 174000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -967) (undo-tree-id2082 . -4) (undo-tree-id2083 . -4) (undo-tree-id2084 . -4) (undo-tree-id2085 . -4) (undo-tree-id2086 . -4) (undo-tree-id2087 . -4) (undo-tree-id2088 . -4) (undo-tree-id2089 . -4) (undo-tree-id2090 . -4) (undo-tree-id2091 . -4) (undo-tree-id2092 . -4) (undo-tree-id2093 . -4) (undo-tree-id2094 . -4) (undo-tree-id2095 . -4) (undo-tree-id2096 . -4) (undo-tree-id2097 . -4) (undo-tree-id2098 . -4) (undo-tree-id2099 . -4) (undo-tree-id2100 . -4) (undo-tree-id2101 . -4) (undo-tree-id2102 . -4) (undo-tree-id2103 . -4) (undo-tree-id2104 . -4) (undo-tree-id2105 . -4) (undo-tree-id2106 . -4) (undo-tree-id2107 . -4) (undo-tree-id2108 . -4) (undo-tree-id2109 . -4) (undo-tree-id2110 . -4) (undo-tree-id2111 . -4) (undo-tree-id2112 . -4) (undo-tree-id2113 . -4) (undo-tree-id2114 . -4) (undo-tree-id2115 . -4) (undo-tree-id2116 . -4) (undo-tree-id2117 . -4) (undo-tree-id2118 . -4) (undo-tree-id2119 . -4) (undo-tree-id2120 . -4) (undo-tree-id2121 . -4) (undo-tree-id2122 . -4) (undo-tree-id2123 . -4) (undo-tree-id2124 . -4) (undo-tree-id2125 . -4) (undo-tree-id2126 . -4) (undo-tree-id2127 . -4) (undo-tree-id2128 . -4) (undo-tree-id2129 . -4) (undo-tree-id2130 . -4) (undo-tree-id2131 . -4) (undo-tree-id2132 . -4) (undo-tree-id2133 . -4) (undo-tree-id2134 . -4) (undo-tree-id2135 . -4) (undo-tree-id2136 . -4) (undo-tree-id2137 . -4) (undo-tree-id2138 . -4) (undo-tree-id2139 . -4) (undo-tree-id2140 . -4) (undo-tree-id2141 . -4) (undo-tree-id2142 . -4) (undo-tree-id2143 . -4) (undo-tree-id2144 . -4) (undo-tree-id2145 . -4) (undo-tree-id2146 . -4) (undo-tree-id2147 . -4) (undo-tree-id2148 . -4) (undo-tree-id2149 . -4) (undo-tree-id2150 . -4) (undo-tree-id2151 . -4) (undo-tree-id2152 . -4) (undo-tree-id2153 . -4) (undo-tree-id2154 . -4) (undo-tree-id2155 . -4) (undo-tree-id2156 . -4) (undo-tree-id2157 . -4) (undo-tree-id2158 . -4) (undo-tree-id2159 . -4) (undo-tree-id2160 . -4) (undo-tree-id2161 . -4) (undo-tree-id2162 . -4) (undo-tree-id2163 . -4) (undo-tree-id2164 . -4) (undo-tree-id2165 . -4) (undo-tree-id2166 . -4) (undo-tree-id2167 . -4) (undo-tree-id2168 . -4) (undo-tree-id2169 . -4) (undo-tree-id2170 . -4) (undo-tree-id2171 . -4) (undo-tree-id2172 . -4) (undo-tree-id2173 . -4) (undo-tree-id2174 . -4) (undo-tree-id2175 . -4) (undo-tree-id2176 . -4) (undo-tree-id2177 . -4) (undo-tree-id2178 . -4) (undo-tree-id2179 . -4) (undo-tree-id2180 . -4) (undo-tree-id2181 . -4) (undo-tree-id2182 . -4) (undo-tree-id2183 . -4) (undo-tree-id2184 . -4) (undo-tree-id2185 . -4) (undo-tree-id2186 . -4) (undo-tree-id2187 . -4) (undo-tree-id2188 . -4) (undo-tree-id2189 . -4) (undo-tree-id2190 . -4) (undo-tree-id2191 . -4) (undo-tree-id2192 . -4) (undo-tree-id2193 . -4) (undo-tree-id2194 . -4) (undo-tree-id2195 . -4) (undo-tree-id2196 . -4) (undo-tree-id2197 . -4) (undo-tree-id2198 . -4) (undo-tree-id2199 . -4) (undo-tree-id2200 . -4) (undo-tree-id2201 . -4) (undo-tree-id2202 . -4) (undo-tree-id2203 . -4) (undo-tree-id2204 . -4) (undo-tree-id2205 . -4) (undo-tree-id2206 . -4) (undo-tree-id2207 . -4) (undo-tree-id2208 . -4) (undo-tree-id2209 . -4) (undo-tree-id2210 . -4) (undo-tree-id2211 . -4) (undo-tree-id2212 . -4) (undo-tree-id2213 . -4) (undo-tree-id2214 . -4) (undo-tree-id2215 . -4) (undo-tree-id2216 . -4) (undo-tree-id2217 . -4) (undo-tree-id2218 . -4) (undo-tree-id2219 . -4) (undo-tree-id2220 . -4) (undo-tree-id2221 . -4) (undo-tree-id2222 . -4) (undo-tree-id2223 . -4) (undo-tree-id2224 . -4) (undo-tree-id2225 . -4) (undo-tree-id2226 . -4) (undo-tree-id2227 . -4) (undo-tree-id2228 . -4) (undo-tree-id2229 . -4) (undo-tree-id2230 . -4) (undo-tree-id2231 . -4) (undo-tree-id2232 . -4) (undo-tree-id2233 . -4) (undo-tree-id2234 . -4) (undo-tree-id2235 . -4) (undo-tree-id2236 . -4) (undo-tree-id2237 . -4) (undo-tree-id2238 . -4) (undo-tree-id2239 . -4) (undo-tree-id2240 . -4) (undo-tree-id2241 . -4) (undo-tree-id2242 . -4) (undo-tree-id2243 . -4) (undo-tree-id2244 . -4) (undo-tree-id2245 . -4) (undo-tree-id2246 . -4) (undo-tree-id2247 . -4) (undo-tree-id2248 . -4) (undo-tree-id2249 . -4) (undo-tree-id2250 . -4) (undo-tree-id2251 . -4) (undo-tree-id2252 . -4) (undo-tree-id2253 . -4) (undo-tree-id2254 . -4) (undo-tree-id2255 . -4) (undo-tree-id2256 . -4) (undo-tree-id2257 . -4) (undo-tree-id2258 . -4) (undo-tree-id2259 . -4) (undo-tree-id2260 . -4) (undo-tree-id2261 . -4) (undo-tree-id2262 . -4) (undo-tree-id2263 . -4) (undo-tree-id2264 . -4) (undo-tree-id2265 . -4) (undo-tree-id2266 . -4) (undo-tree-id2267 . -4) (undo-tree-id2268 . -4) (undo-tree-id2269 . -4) (undo-tree-id2270 . -4) (undo-tree-id2271 . -4) (undo-tree-id2272 . -4) (undo-tree-id2273 . -4) (undo-tree-id2274 . -4) (undo-tree-id2275 . -4) (undo-tree-id2276 . -4) (undo-tree-id2277 . -4) (undo-tree-id2278 . -4) (undo-tree-id2279 . -4) (undo-tree-id2280 . -4) (undo-tree-id2281 . -4) (undo-tree-id2282 . -4) (undo-tree-id2283 . -4) (undo-tree-id2284 . -4) (undo-tree-id2285 . -4) (undo-tree-id2286 . -4) (undo-tree-id2287 . -4) (undo-tree-id2288 . -4) (undo-tree-id2289 . -4) (undo-tree-id2290 . -4) (undo-tree-id2291 . -4) (undo-tree-id2292 . -4) (undo-tree-id2293 . -4) (undo-tree-id2294 . -4) (undo-tree-id2295 . -4) (undo-tree-id2296 . -4) (undo-tree-id2297 . -4) (undo-tree-id2298 . -4) (undo-tree-id2299 . -4) (undo-tree-id2300 . -4) (undo-tree-id2301 . -4) (undo-tree-id2302 . -4) (undo-tree-id2303 . -4) (undo-tree-id2304 . -4) (undo-tree-id2305 . -4) (undo-tree-id2306 . -4) (undo-tree-id2307 . -4) (undo-tree-id2308 . -4) (undo-tree-id2309 . -4) (undo-tree-id2310 . -4) (undo-tree-id2311 . -4) (undo-tree-id2312 . -4) (undo-tree-id2313 . -4) (undo-tree-id2314 . -4) (undo-tree-id2315 . -4) (undo-tree-id2316 . -4) (undo-tree-id2317 . -4) (undo-tree-id2318 . -4) (undo-tree-id2319 . -4) (undo-tree-id2320 . -4) (undo-tree-id2321 . -4) (undo-tree-id2322 . -4) (undo-tree-id2323 . -4) (undo-tree-id2324 . -4) (undo-tree-id2325 . -4) (undo-tree-id2326 . -4) (undo-tree-id2327 . -4) (undo-tree-id2328 . -4) (undo-tree-id2329 . -4) (undo-tree-id2330 . -4) (undo-tree-id2331 . -4) (undo-tree-id2332 . -4) (undo-tree-id2333 . -4) (undo-tree-id2334 . -4) (undo-tree-id2335 . -4) (undo-tree-id2336 . -4) (undo-tree-id2337 . -4) (undo-tree-id2338 . -4) (undo-tree-id2339 . -4) (undo-tree-id2340 . -4) (undo-tree-id2341 . -4) (undo-tree-id2342 . -4) (undo-tree-id2343 . -4) (undo-tree-id2344 . -4) (undo-tree-id2345 . -4) (undo-tree-id2346 . -4) (undo-tree-id2347 . -4) (undo-tree-id2348 . -4) (undo-tree-id2349 . -4) (undo-tree-id2350 . -4) (undo-tree-id2351 . -4) (undo-tree-id2352 . -4) (undo-tree-id2353 . -4) (undo-tree-id2354 . -4) (undo-tree-id2355 . -4) (undo-tree-id2356 . -4) (undo-tree-id2357 . -4) (undo-tree-id2358 . -4) (undo-tree-id2359 . -4) (undo-tree-id2360 . -4) (undo-tree-id2361 . -4) (undo-tree-id2362 . -4) (undo-tree-id2363 . -4) (undo-tree-id2364 . -4) (undo-tree-id2365 . -4) (undo-tree-id2366 . -4) (undo-tree-id2367 . -4) (undo-tree-id2368 . -4) (undo-tree-id2369 . -4) (undo-tree-id2370 . -4) (undo-tree-id2371 . -4) (undo-tree-id2372 . -4) (undo-tree-id2373 . -4) (undo-tree-id2374 . -4) (undo-tree-id2375 . -4) (undo-tree-id2376 . -4) (undo-tree-id2377 . -4) (undo-tree-id2378 . -4) (undo-tree-id2379 . -4) (undo-tree-id2380 . -4) (undo-tree-id2381 . -4) (undo-tree-id2382 . -4) (undo-tree-id2383 . -4) (undo-tree-id2384 . -4) (undo-tree-id2385 . -4) (undo-tree-id2386 . -4) (undo-tree-id2387 . -4) (undo-tree-id2388 . -4) (undo-tree-id2389 . -4) (undo-tree-id2390 . -4) (undo-tree-id2391 . -4) (undo-tree-id2392 . -4) (undo-tree-id2393 . -4) (undo-tree-id2394 . -4) (undo-tree-id2395 . -4) (undo-tree-id2396 . -4) (undo-tree-id2397 . -4) (undo-tree-id2398 . -4) (undo-tree-id2399 . -4) (undo-tree-id2400 . -4) (undo-tree-id2401 . -4) (undo-tree-id2402 . -4) (undo-tree-id2403 . -4) (undo-tree-id2404 . -4) (undo-tree-id2405 . -4) (undo-tree-id2406 . -4) (undo-tree-id2407 . -4) (undo-tree-id2408 . -4) (undo-tree-id2409 . -4) (undo-tree-id2410 . -4) (undo-tree-id2411 . -4) (undo-tree-id2412 . -4) (undo-tree-id2413 . -4) (undo-tree-id2414 . -4) (undo-tree-id2415 . -4) (undo-tree-id2416 . -4) (undo-tree-id2417 . -4) (undo-tree-id2418 . -4) (undo-tree-id2419 . -4) (undo-tree-id2420 . -4) (undo-tree-id2421 . -4) (undo-tree-id2422 . -4) (undo-tree-id2423 . -4) (undo-tree-id2424 . -4) (undo-tree-id2425 . -4) (undo-tree-id2426 . -4) (undo-tree-id2427 . -4) (undo-tree-id2428 . -4) (undo-tree-id2429 . -4) (undo-tree-id2430 . -4) 971) nil (25595 53527 622405 203000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -966) (undo-tree-id1722 . -1) (undo-tree-id1723 . -1) (undo-tree-id1724 . -1) (undo-tree-id1725 . -1) (undo-tree-id1726 . -1) (undo-tree-id1727 . -1) (undo-tree-id1728 . -1) (undo-tree-id1729 . -1) (undo-tree-id1730 . -1) (undo-tree-id1731 . -1) (undo-tree-id1732 . -1) (undo-tree-id1733 . -1) (undo-tree-id1734 . -1) (undo-tree-id1735 . -1) (undo-tree-id1736 . -1) (undo-tree-id1737 . -1) (undo-tree-id1738 . -1) (undo-tree-id1739 . -1) (undo-tree-id1740 . -1) (undo-tree-id1741 . -1) (undo-tree-id1742 . -1) (undo-tree-id1743 . -1) (undo-tree-id1744 . -1) (undo-tree-id1745 . -1) (undo-tree-id1746 . -1) (undo-tree-id1747 . -1) (undo-tree-id1748 . -1) (undo-tree-id1749 . -1) (undo-tree-id1750 . -1) (undo-tree-id1751 . -1) (undo-tree-id1752 . -1) (undo-tree-id1753 . -1) (undo-tree-id1754 . -1) (undo-tree-id1755 . -1) (undo-tree-id1756 . -1) (undo-tree-id1757 . -1) (undo-tree-id1758 . -1) (undo-tree-id1759 . -1) (undo-tree-id1760 . -1) (undo-tree-id1761 . -1) (undo-tree-id1762 . -1) (undo-tree-id1763 . -1) (undo-tree-id1764 . -1) (undo-tree-id1765 . -1) (undo-tree-id1766 . -1) (undo-tree-id1767 . -1) (undo-tree-id1768 . -1) (undo-tree-id1769 . -1) (undo-tree-id1770 . -1) (undo-tree-id1771 . -1) (undo-tree-id1772 . -1) (undo-tree-id1773 . -1) (undo-tree-id1774 . -1) (undo-tree-id1775 . -1) (undo-tree-id1776 . -1) (undo-tree-id1777 . -1) (undo-tree-id1778 . -1) (undo-tree-id1779 . -1) (undo-tree-id1780 . -1) (undo-tree-id1781 . -1) (undo-tree-id1782 . -1) (undo-tree-id1783 . -1) (undo-tree-id1784 . -1) (undo-tree-id1785 . -1) (undo-tree-id1786 . -1) (undo-tree-id1787 . -1) (undo-tree-id1788 . -1) (undo-tree-id1789 . -1) (undo-tree-id1790 . -1) (undo-tree-id1791 . -1) (undo-tree-id1792 . -1) (undo-tree-id1793 . -1) (undo-tree-id1794 . -1) (undo-tree-id1795 . -1) (undo-tree-id1796 . -1) (undo-tree-id1797 . -1) (undo-tree-id1798 . -1) (undo-tree-id1799 . -1) (undo-tree-id1800 . -1) (undo-tree-id1801 . -1) (undo-tree-id1802 . -1) (undo-tree-id1803 . -1) (undo-tree-id1804 . -1) (undo-tree-id1805 . -1) (undo-tree-id1806 . -1) (undo-tree-id1807 . -1) (undo-tree-id1808 . -1) (undo-tree-id1809 . -1) (undo-tree-id1810 . -1) (undo-tree-id1811 . -1) (undo-tree-id1812 . -1) (undo-tree-id1813 . -1) (undo-tree-id1814 . -1) (undo-tree-id1815 . -1) (undo-tree-id1816 . -1) (undo-tree-id1817 . -1) (undo-tree-id1818 . -1) (undo-tree-id1819 . -1) (undo-tree-id1820 . -1) (undo-tree-id1821 . -1) (undo-tree-id1822 . -1) (undo-tree-id1823 . -1) (undo-tree-id1824 . -1) (undo-tree-id1825 . -1) (undo-tree-id1826 . -1) (undo-tree-id1827 . -1) (undo-tree-id1828 . -1) (undo-tree-id1829 . -1) (undo-tree-id1830 . -1) (undo-tree-id1831 . -1) (undo-tree-id1832 . -1) (undo-tree-id1833 . -1) (undo-tree-id1834 . -1) (undo-tree-id1835 . -1) (undo-tree-id1836 . -1) (undo-tree-id1837 . -1) (undo-tree-id1838 . -1) (undo-tree-id1839 . -1) (undo-tree-id1840 . -1) (undo-tree-id1841 . -1) (undo-tree-id1842 . -1) (undo-tree-id1843 . -1) (undo-tree-id1844 . -1) (undo-tree-id1845 . -1) (undo-tree-id1846 . -1) (undo-tree-id1847 . -1) (undo-tree-id1848 . -1) (undo-tree-id1849 . -1) (undo-tree-id1850 . -1) (undo-tree-id1851 . -1) (undo-tree-id1852 . -1) (undo-tree-id1853 . -1) (undo-tree-id1854 . -1) (undo-tree-id1855 . -1) (undo-tree-id1856 . -1) (undo-tree-id1857 . -1) (undo-tree-id1858 . -1) (undo-tree-id1859 . -1) (undo-tree-id1860 . -1) (undo-tree-id1861 . -1) (undo-tree-id1862 . -1) (undo-tree-id1863 . -1) (undo-tree-id1864 . -1) (undo-tree-id1865 . -1) (undo-tree-id1866 . -1) (undo-tree-id1867 . -1) (undo-tree-id1868 . -1) (undo-tree-id1869 . -1) (undo-tree-id1870 . -1) (undo-tree-id1871 . -1) (undo-tree-id1872 . -1) (undo-tree-id1873 . -1) (undo-tree-id1874 . -1) (undo-tree-id1875 . -1) (undo-tree-id1876 . -1) (undo-tree-id1877 . -1) (undo-tree-id1878 . -1) (undo-tree-id1879 . -1) (undo-tree-id1880 . -1) (undo-tree-id1881 . -1) (undo-tree-id1882 . -1) (undo-tree-id1883 . -1) (undo-tree-id1884 . -1) (undo-tree-id1885 . -1) (undo-tree-id1886 . -1) (undo-tree-id1887 . -1) (undo-tree-id1888 . -1) (undo-tree-id1889 . -1) (undo-tree-id1890 . -1) (undo-tree-id1891 . -1) (undo-tree-id1892 . -1) (undo-tree-id1893 . -1) (undo-tree-id1894 . -1) (undo-tree-id1895 . -1) (undo-tree-id1896 . -1) (undo-tree-id1897 . -1) (undo-tree-id1898 . -1) (undo-tree-id1899 . -1) (undo-tree-id1900 . -1) (undo-tree-id1901 . -1) (undo-tree-id1902 . -1) (undo-tree-id1903 . -1) (undo-tree-id1904 . -1) (undo-tree-id1905 . -1) (undo-tree-id1906 . -1) (undo-tree-id1907 . -1) (undo-tree-id1908 . -1) (undo-tree-id1909 . -1) (undo-tree-id1910 . -1) (undo-tree-id1911 . -1) (undo-tree-id1912 . -1) (undo-tree-id1913 . -1) (undo-tree-id1914 . -1) (undo-tree-id1915 . -1) (undo-tree-id1916 . -1) (undo-tree-id1917 . -1) (undo-tree-id1918 . -1) (undo-tree-id1919 . -1) (undo-tree-id1920 . -1) (undo-tree-id1921 . -1) (undo-tree-id1922 . -1) (undo-tree-id1923 . -1) (undo-tree-id1924 . -1) (undo-tree-id1925 . -1) (undo-tree-id1926 . -1) (undo-tree-id1927 . -1) (undo-tree-id1928 . -1) (undo-tree-id1929 . -1) (undo-tree-id1930 . -1) (undo-tree-id1931 . -1) (undo-tree-id1932 . -1) (undo-tree-id1933 . -1) (undo-tree-id1934 . -1) (undo-tree-id1935 . -1) (undo-tree-id1936 . -1) (undo-tree-id1937 . -1) (undo-tree-id1938 . -1) (undo-tree-id1939 . -1) (undo-tree-id1940 . -1) (undo-tree-id1941 . -1) (undo-tree-id1942 . -1) (undo-tree-id1943 . -1) (undo-tree-id1944 . -1) (undo-tree-id1945 . -1) (undo-tree-id1946 . -1) (undo-tree-id1947 . -1) (undo-tree-id1948 . -1) (undo-tree-id1949 . -1) (undo-tree-id1950 . -1) (undo-tree-id1951 . -1) (undo-tree-id1952 . -1) (undo-tree-id1953 . -1) (undo-tree-id1954 . -1) (undo-tree-id1955 . -1) (undo-tree-id1956 . -1) (undo-tree-id1957 . -1) (undo-tree-id1958 . -1) (undo-tree-id1959 . -1) (undo-tree-id1960 . -1) (undo-tree-id1961 . -1) (undo-tree-id1962 . -1) (undo-tree-id1963 . -1) (undo-tree-id1964 . -1) (undo-tree-id1965 . -1) (undo-tree-id1966 . -1) (undo-tree-id1967 . -1) (undo-tree-id1968 . -1) (undo-tree-id1969 . -1) (undo-tree-id1970 . -1) (undo-tree-id1971 . -1) (undo-tree-id1972 . -1) (undo-tree-id1973 . -1) (undo-tree-id1974 . -1) (undo-tree-id1975 . -1) (undo-tree-id1976 . -1) (undo-tree-id1977 . -1) (undo-tree-id1978 . -1) (undo-tree-id1979 . -1) (undo-tree-id1980 . -1) (undo-tree-id1981 . -1) (undo-tree-id1982 . -1) (undo-tree-id1983 . -1) (undo-tree-id1984 . -1) (undo-tree-id1985 . -1) (undo-tree-id1986 . -1) (undo-tree-id1987 . -1) (undo-tree-id1988 . -1) (undo-tree-id1989 . -1) (undo-tree-id1990 . -1) (undo-tree-id1991 . -1) (undo-tree-id1992 . -1) (undo-tree-id1993 . -1) (undo-tree-id1994 . -1) (undo-tree-id1995 . -1) (undo-tree-id1996 . -1) (undo-tree-id1997 . -1) (undo-tree-id1998 . -1) (undo-tree-id1999 . -1) (undo-tree-id2000 . -1) (undo-tree-id2001 . -1) (undo-tree-id2002 . -1) (undo-tree-id2003 . -1) (undo-tree-id2004 . -1) (undo-tree-id2005 . -1) (undo-tree-id2006 . -1) (undo-tree-id2007 . -1) (undo-tree-id2008 . -1) (undo-tree-id2009 . -1) (undo-tree-id2010 . -1) (undo-tree-id2011 . -1) (undo-tree-id2012 . -1) (undo-tree-id2013 . -1) (undo-tree-id2014 . -1) (undo-tree-id2015 . -1) (undo-tree-id2016 . -1) (undo-tree-id2017 . -1) (undo-tree-id2018 . -1) (undo-tree-id2019 . -1) (undo-tree-id2020 . -1) (undo-tree-id2021 . -1) (undo-tree-id2022 . -1) (undo-tree-id2023 . -1) (undo-tree-id2024 . -1) (undo-tree-id2025 . -1) (undo-tree-id2026 . -1) (undo-tree-id2027 . -1) (undo-tree-id2028 . -1) (undo-tree-id2029 . -1) (undo-tree-id2030 . -1) (undo-tree-id2031 . -1) (undo-tree-id2032 . -1) (undo-tree-id2033 . -1) (undo-tree-id2034 . -1) (undo-tree-id2035 . -1) (undo-tree-id2036 . -1) (undo-tree-id2037 . -1) (undo-tree-id2038 . -1) (undo-tree-id2039 . -1) (undo-tree-id2040 . -1) (undo-tree-id2041 . -1) (undo-tree-id2042 . -1) (undo-tree-id2043 . -1) (undo-tree-id2044 . -1) (undo-tree-id2045 . -1) (undo-tree-id2046 . -1) (undo-tree-id2047 . -1) (undo-tree-id2048 . -1) (undo-tree-id2049 . -1) (undo-tree-id2050 . -1) (undo-tree-id2051 . -1) (undo-tree-id2052 . -1) (undo-tree-id2053 . -1) (undo-tree-id2054 . -1) (undo-tree-id2055 . -1) (undo-tree-id2056 . -1) (undo-tree-id2057 . -1) (undo-tree-id2058 . -1) (undo-tree-id2059 . -1) (undo-tree-id2060 . -1) (undo-tree-id2061 . -1) (undo-tree-id2062 . -1) (undo-tree-id2063 . -1) (undo-tree-id2064 . -1) (undo-tree-id2065 . -1) (undo-tree-id2066 . -1) (undo-tree-id2067 . -1) (undo-tree-id2068 . -1) (undo-tree-id2069 . -1) (undo-tree-id2070 . -1) (undo-tree-id2071 . -1) (undo-tree-id2072 . -1) (undo-tree-id2073 . -1) (undo-tree-id2074 . -1) (undo-tree-id2075 . -1) (undo-tree-id2076 . -1) (undo-tree-id2077 . -1) (undo-tree-id2078 . -1) (undo-tree-id2079 . -1) (undo-tree-id2080 . -1) (undo-tree-id2081 . -1) 967) nil (25595 53527 622253 404000) 0 nil])
([nil nil ((966 . 971) (t 25595 53527 643037 900000)) nil (25595 53743 325883 920000) 0 nil])
([nil nil ((971 . 991)) nil (25595 53743 325883 509000) 0 nil])
([nil nil ((991 . 1002)) nil (25595 53743 325883 239000) 0 nil])
([nil nil ((1002 . 1011)) nil (25595 53743 325882 968000) 0 nil])
([nil nil ((1011 . 1022)) nil (25595 53743 325882 687000) 0 nil])
([nil nil ((1022 . 1031)) nil (25595 53743 325882 367000) 0 nil])
([nil nil ((1031 . 1035)) nil (25595 53743 325882 96000) 0 nil])
([nil nil ((1035 . 1051)) nil (25595 53743 325881 806000) 0 nil])
([nil nil ((1051 . 1064)) nil (25595 53743 325881 435000) 0 nil])
([nil nil ((1064 . 1067)) nil (25595 53743 325881 145000) 0 nil])
([nil nil ((#("list" 0 4 (face font-lock-builtin-face fontified t)) . -997) (undo-tree-id6173 . -4) 1001) nil (25595 53743 325880 654000) 0 nil])
([nil nil ((997 . 1000)) nil (25595 53743 325879 792000) 0 nil])
([nil nil ((#("[" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . -1019) (undo-tree-id6171 . -1) (#("]" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . -1020) (undo-tree-id6172 . -1) 1021) nil (25595 53743 325878 980000) 0 nil])
([nil nil ((1019 . 1024)) nil (25595 53743 325877 728000) 0 nil])
([nil nil ((1069 . 1086)) nil (25595 53743 325877 397000) 0 nil])
([nil nil ((1086 . 1103)) nil (25595 53743 325877 137000) 0 nil])
([nil nil ((1103 . 1106)) nil (25595 53743 325876 786000) 0 nil])
([nil nil ((1106 . 1108)) nil (25595 53743 325876 496000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -1107) (undo-tree-id6170 . -1) 1108) nil (25595 53743 325875 925000) 0 nil])
([nil nil ((1107 . 1118)) nil (25595 53743 325875 53000) 0 nil])
([nil nil ((1118 . 1127)) nil (25595 53743 325874 772000) 0 nil])
([nil nil ((1107 . 1108)) nil (25595 53743 325874 482000) 0 nil])
([nil nil ((1110 . 1111)) nil (25595 53743 325874 121000) 0 nil])
([nil nil ((1129 . 1150)) nil (25595 53743 325873 750000) 0 nil])
([nil nil ((1150 . 1164)) nil (25595 53743 325873 420000) 0 nil])
([nil nil ((1164 . 1166)) nil (25595 53743 325872 999000) 0 nil])
([nil nil ((1166 . 1187)) nil (25595 53743 325872 508000) 0 nil])
([nil nil ((1187 . 1200)) nil (25595 53743 325872 37000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -1183) (undo-tree-id6165 . -4) (undo-tree-id6166 . -4) (undo-tree-id6167 . -4) (undo-tree-id6168 . -4) (undo-tree-id6169 . -4) 1200) nil (25595 53743 325871 246000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -1179) (undo-tree-id6153 . -4) (undo-tree-id6154 . -4) (undo-tree-id6155 . -4) (undo-tree-id6156 . -4) (undo-tree-id6157 . -4) (undo-tree-id6158 . -4) (undo-tree-id6159 . -4) (undo-tree-id6160 . -4) (undo-tree-id6161 . -4) (undo-tree-id6162 . -4) (undo-tree-id6163 . -4) (undo-tree-id6164 . -4) 1196) nil (25595 53743 325867 218000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -1175) (undo-tree-id6134 . -4) (undo-tree-id6135 . -4) (undo-tree-id6136 . -4) (undo-tree-id6137 . -4) (undo-tree-id6138 . -4) (undo-tree-id6139 . -4) (undo-tree-id6140 . -4) (undo-tree-id6141 . -4) (undo-tree-id6142 . -4) (undo-tree-id6143 . -4) (undo-tree-id6144 . -4) (undo-tree-id6145 . -4) (undo-tree-id6146 . -4) (undo-tree-id6147 . -4) (undo-tree-id6148 . -4) (undo-tree-id6149 . -4) (undo-tree-id6150 . -4) (undo-tree-id6151 . -4) (undo-tree-id6152 . -4) 1192) nil (25595 53743 325859 463000) 0 nil])
([nil nil ((1019 . 1024) (t 25595 53743 341239 600000)) nil (25595 53787 786648 234000) 0 nil])
([nil nil ((1029 . 1036) (t 25595 53787 806650 300000)) nil (25595 53891 33724 339000) 0 nil])
([nil nil ((1036 . 1045) (t 25595 53891 46413 700000)) nil (25595 53920 818807 467000) 0 nil])
([nil nil ((1045 . 1058)) nil (25595 53920 818803 420000) 0 nil])
([nil nil ((#("remove" 0 6 (fontified t)) . -1191) (undo-tree-id6174 . -6) (undo-tree-id6175 . -6) (undo-tree-id6176 . -6) (undo-tree-id6177 . -6) (undo-tree-id6178 . -6) (undo-tree-id6179 . -6) (undo-tree-id6180 . -6) (undo-tree-id6181 . -6) (undo-tree-id6182 . -6) (undo-tree-id6183 . -6) (undo-tree-id6184 . -6) (undo-tree-id6185 . -6) (undo-tree-id6186 . -6) (undo-tree-id6187 . -6) (undo-tree-id6188 . -6) (undo-tree-id6189 . -6) (undo-tree-id6190 . -6) (undo-tree-id6191 . -6) (undo-tree-id6192 . -6) (undo-tree-id6193 . -6) (undo-tree-id6194 . -6) (undo-tree-id6195 . -6) (undo-tree-id6196 . -6) (undo-tree-id6197 . -6) (undo-tree-id6198 . -6) (undo-tree-id6199 . -6) (undo-tree-id6200 . -6) (undo-tree-id6201 . -6) (undo-tree-id6202 . -6) (undo-tree-id6203 . -6) (undo-tree-id6204 . -6) (undo-tree-id6205 . -6) (undo-tree-id6206 . -6) (undo-tree-id6207 . -6) (undo-tree-id6208 . -6) (undo-tree-id6209 . -6) (undo-tree-id6210 . -6) (undo-tree-id6211 . -6) (undo-tree-id6212 . -6) 1197 (t 25595 53920 832478 200000)) nil (25595 54073 100999 502000) 0 nil])
([nil nil ((1191 . 1198)) nil (25595 54073 100962 823000) 0 nil])
([nil nil ((#("        print(result)" 0 8 (fontified t) 8 13 (face font-lock-builtin-face fontified t) 13 14 (face (rainbow-delimiters-depth-1-face) fontified t) 14 20 (fontified t) 20 21 (face (rainbow-delimiters-depth-1-face) fontified t)) . 1037) (undo-tree-id6214 . -21) (undo-tree-id6215 . -21) (undo-tree-id6216 . -21) (undo-tree-id6217 . -21) (undo-tree-id6218 . -21) (undo-tree-id6219 . -21) (undo-tree-id6220 . -21) (undo-tree-id6221 . -21) (undo-tree-id6222 . -21) (undo-tree-id6223 . -21) (undo-tree-id6224 . -21) (undo-tree-id6225 . -21) (undo-tree-id6226 . -21) (undo-tree-id6227 . -21) (undo-tree-id6228 . -21) (undo-tree-id6229 . -21) (undo-tree-id6230 . -21) (undo-tree-id6231 . -21) (undo-tree-id6232 . -21) (undo-tree-id6233 . -21) (undo-tree-id6234 . -21) (t 25595 54073 112393 700000)) nil (25595 54094 907099 147000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 1037) (undo-tree-id6213 . -1)) nil (25595 54094 906608 153000) 0 nil])
([nil nil ((1202 . 1207) (t 25595 54094 926073 600000)) nil (25595 55055 311604 433000) 0 nil])
([nil nil ((1207 . 1225)) nil (25595 55055 311603 872000) 0 nil])
([nil nil ((#("t" 0 1 (face font-lock-function-name-face fontified t)) . -1223) (undo-tree-id6254 . -1) (#("h" 0 1 (face font-lock-function-name-face fontified t)) . -1224) (undo-tree-id6255 . -1) 1225) nil (25595 55055 311603 401000) 0 nil])
([nil nil ((#("e" 0 1 (face font-lock-function-name-face fontified t)) . -1221) (undo-tree-id6252 . -1) (#("p" 0 1 (face font-lock-function-name-face fontified t)) . -1222) (undo-tree-id6253 . -1) 1223) nil (25595 55055 311601 448000) 0 nil])
([nil nil ((1221 . 1234)) nil (25595 55055 311600 55000) 0 nil])
([nil nil ((#("N" 0 1 (fontified t)) . -1232) (undo-tree-id6250 . -1) (#("o" 0 1 (fontified t)) . -1233) (undo-tree-id6251 . -1) 1234) nil (25595 55055 311599 474000) 0 nil])
([nil nil ((1232 . 1236)) nil (25595 55055 311598 61000) 0 nil])
([nil nil ((1236 . 1245)) nil (25595 55055 311597 791000) 0 nil])
([nil nil ((1227 . 1233)) nil (25595 55055 311597 490000) 0 nil])
([nil nil ((1242 . 1251)) nil (25595 55055 311597 49000) 0 nil])
([nil nil ((1251 . 1272)) nil (25595 55055 311596 588000) 0 nil])
([nil nil ((1272 . 1276)) nil (25595 55055 311596 47000) 0 nil])
([nil nil ((1276 . 1277)) nil (25595 55055 311595 697000) 0 nil])
([nil nil ((1277 . 1290)) nil (25595 55055 311595 406000) 0 nil])
([nil nil ((1290 . 1301)) nil (25595 55055 311594 855000) 0 nil])
([nil nil ((#("u" 0 1 (fontified t)) . -1300) (undo-tree-id6249 . -1) 1301) nil (25595 55055 311594 464000) 0 nil])
([nil nil ((1300 . 1309)) nil (25595 55055 311593 382000) 0 nil])
([nil nil ((1309 . 1317)) nil (25595 55055 311593 42000) 0 nil])
([nil nil ((#("t" 0 1 (face font-lock-string-face fontified t)) . -1313) (undo-tree-id6245 . -1) (#(" " 0 1 (face font-lock-string-face fontified t)) . -1314) (undo-tree-id6246 . -1) (#("i" 0 1 (face font-lock-string-face fontified t)) . -1315) (undo-tree-id6247 . -1) (#("n" 0 1 (face font-lock-string-face fontified t)) . -1316) (undo-tree-id6248 . -1) 1317) nil (25595 55055 311592 280000) 0 nil])
([nil nil ((1313 . 1327)) nil (25595 55055 311588 894000) 0 nil])
([nil nil ((1327 . 1338)) nil (25595 55055 311588 503000) 0 nil])
([nil nil ((1338 . 1347)) nil (25595 55055 311588 162000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1342 . 1343) (nil fontified nil 1338 . 1343) (nil fontified nil 1337 . 1338) (nil fontified nil 1336 . 1337) (nil fontified nil 1330 . 1336) (nil fontified nil 1310 . 1330) (nil fontified nil 1309 . 1310) (nil fontified nil 1308 . 1309) (nil fontified nil 1296 . 1308) (nil fontified nil 1295 . 1296) (nil fontified nil 1290 . 1295) (nil fontified nil 1278 . 1290) (nil fontified nil 1270 . 1278) (nil fontified nil 1266 . 1270) (nil fontified nil 1265 . 1266) (nil fontified nil 1263 . 1265) (nil fontified nil 1262 . 1263) (nil fontified nil 1259 . 1262) (nil fontified nil 1253 . 1259) (nil fontified nil 1251 . 1253) (nil fontified nil 1243 . 1251) (nil fontified nil 1241 . 1243) (nil fontified nil 1238 . 1241) (nil fontified nil 1237 . 1238) (nil fontified nil 1236 . 1237) (nil fontified nil 1235 . 1236) (nil fontified nil 1234 . 1235) (nil fontified nil 1233 . 1234) (nil fontified nil 1227 . 1233) (nil fontified nil 1223 . 1227) (nil fontified nil 1222 . 1223) (nil fontified nil 1211 . 1222) (nil fontified nil 1210 . 1211) (nil fontified nil 1207 . 1210) (1207 . 1343)) nil (25595 55055 311587 20000) 0 nil])
([nil nil ((1340 . 1348) (#("    " 0 3 (fontified nil) 3 4 (rear-nonsticky t fontified nil)) . 1339) (undo-tree-id6244 . -4) (1343 . 1344)) nil (25595 55055 311584 4000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -1344) (undo-tree-id6243 . -4) 1348) nil (25595 55055 311582 451000) 0 nil])
([nil nil ((#("df" 0 2 (face font-lock-function-name-face fontified t)) . -1220) (undo-tree-id6242 . -2) 1222) nil (25595 55055 311580 878000) 0 nil])
([nil nil ((#("traverse_" 0 9 (face font-lock-function-name-face fontified t)) . -1211) (undo-tree-id6241 . -9) 1220) nil (25595 55055 311579 776000) 0 nil])
([nil nil ((1211 . 1217)) nil (25595 55055 311578 704000) 0 nil])
([nil nil ((1217 . 1221)) nil (25595 55055 311578 444000) 0 nil])
([nil nil ((1337 . 1346)) nil (25595 55055 311578 163000) 0 nil])
([nil nil ((1346 . 1354)) nil (25595 55055 311577 903000) 0 nil])
([nil nil ((1351 . 1352)) nil (25595 55055 311577 632000) 0 nil])
([nil nil ((1355 . 1360)) nil (25595 55055 311577 362000) 0 nil])
([nil nil ((1360 . 1369)) nil (25595 55055 311577 61000) 0 nil])
([nil nil ((1369 . 1388)) nil (25595 55055 311576 791000) 0 nil])
([nil nil ((1388 . 1389)) nil (25595 55055 311576 520000) 0 nil])
([nil nil ((1389 . 1402)) nil (25595 55055 311576 250000) 0 nil])
([nil nil ((1402 . 1404)) nil (25595 55055 311575 969000) 0 nil])
([nil nil ((1404 . 1412)) nil (25595 55055 311575 658000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -1411) (undo-tree-id6240 . -1) 1412) nil (25595 55055 311575 97000) 0 nil])
([nil nil ((1411 . 1413)) nil (25595 55055 311574 5000) 0 nil])
([nil nil ((1413 . 1418)) nil (25595 55055 311573 705000) 0 nil])
([nil nil ((1418 . 1435)) nil (25595 55055 311573 414000) 0 nil])
([nil nil ((1435 . 1450)) nil (25595 55055 311573 144000) 0 nil])
([nil nil ((1450 . 1451)) nil (25595 55055 311572 853000) 0 nil])
([nil nil ((1451 . 1468)) nil (25595 55055 311572 573000) 0 nil])
([nil nil ((1468 . 1473)) nil (25595 55055 311572 282000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -1464) 1473) nil (25595 55055 311571 801000) 0 nil])
([nil nil ((1469 . 1482)) nil (25595 55055 311571 430000) 0 nil])
([nil nil ((1482 . 1499)) nil (25595 55055 311571 130000) 0 nil])
([nil nil ((1499 . 1509)) nil (25595 55055 311570 779000) 0 nil])
([nil nil ((1509 . 1515)) nil (25595 55055 311570 509000) 0 nil])
([nil nil ((1515 . 1532)) nil (25595 55055 311570 178000) 0 nil])
([nil nil ((1532 . 1545)) nil (25595 55055 311569 827000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -1528) 1545) nil (25595 55055 311569 356000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -1524) 1541) nil (25595 55055 311568 565000) 0 nil])
([nil nil ((1683 . 1697)) nil (25595 55055 311568 114000) 0 nil])
([nil nil ((1697 . 1706)) nil (25595 55055 311567 824000) 0 nil])
([nil nil ((1706 . 1719)) nil (25595 55055 311567 533000) 0 nil])
([nil nil ((1719 . 1722)) nil (25595 55055 311567 202000) 0 nil])
([nil nil ((1722 . 1731)) nil (25595 55055 311566 751000) 0 nil])
([nil nil ((1731 . 1745)) nil (25595 55055 311566 281000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -1740) (undo-tree-id6235 . -1) (#("e" 0 1 (fontified t)) . -1741) (undo-tree-id6236 . -1) (#("l" 0 1 (fontified t)) . -1742) (undo-tree-id6237 . -1) (#("f" 0 1 (face font-lock-keyword-face fontified t)) . -1743) (undo-tree-id6238 . -1) (#("." 0 1 (fontified t)) . -1744) (undo-tree-id6239 . -1) 1745) nil (25595 55055 311564 678000) 0 nil])
([nil nil ((1740 . 1750)) nil (25595 55055 311550 481000) 0 nil])
([nil nil ((1740 . 1745)) nil (25595 55055 311549 929000) 0 nil])
([nil nil ((30 . 39)) nil (25595 55055 311548 968000) 0 nil])
([nil nil ((1773 . 1774) 39) nil (25595 55055 311545 50000) 0 nil])
([nil nil ((1230 . 1234) (t 25595 55055 323678 700000)) nil (25595 55106 994757 194000) 0 nil])
([nil nil ((#("            elif e[1] == node:" 0 12 (fontified t) 12 16 (face font-lock-keyword-face fontified t) 16 18 (fontified t) 18 19 (face (rainbow-delimiters-depth-1-face) fontified t) 19 20 (fontified t) 20 21 (face (rainbow-delimiters-depth-1-face) fontified t) 21 22 (fontified t) 22 24 (face font-lock-operator-face fontified t) 24 30 (fontified t)) . 1465)) nil (25595 55106 994756 763000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 1465)) nil (25595 55106 994756 482000) 0 nil])
([nil nil ((#("                result.add(e[0])" 0 26 (fontified t) 26 27 (face (rainbow-delimiters-depth-1-face) fontified t) 27 28 (fontified t) 28 29 (face (rainbow-delimiters-depth-2-face) fontified t) 29 30 (fontified t) 30 31 (face (rainbow-delimiters-depth-2-face) fontified t) 31 32 (face (rainbow-delimiters-depth-1-face) fontified t)) . 1465)) nil (25595 55106 994755 941000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 1465)) nil (25595 55106 994755 110000) 0 nil])
([nil nil ((1488 . 1492) (#("    " 0 4 (fontified nil)) . 1487) (undo-tree-id6312 . -4) (undo-tree-id6313 . -4) (undo-tree-id6314 . -4) (undo-tree-id6315 . -4) (undo-tree-id6316 . -4) (undo-tree-id6317 . -4) (undo-tree-id6318 . -4) (undo-tree-id6319 . -4) (undo-tree-id6320 . -4) (undo-tree-id6321 . -4) (undo-tree-id6322 . -4) (undo-tree-id6323 . -4) (undo-tree-id6324 . -4) (undo-tree-id6325 . -4) (undo-tree-id6326 . -4) (undo-tree-id6327 . -4) (undo-tree-id6328 . -4) (undo-tree-id6329 . -4) (undo-tree-id6330 . -4) (undo-tree-id6331 . -4) (undo-tree-id6332 . -4) (undo-tree-id6333 . -4) (undo-tree-id6334 . -4) (undo-tree-id6335 . -4) (undo-tree-id6336 . -4) (1486 . 1492)) nil (25595 55106 994753 817000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -1488) (undo-tree-id6286 . -4) (undo-tree-id6287 . -4) (undo-tree-id6288 . -4) (undo-tree-id6289 . -4) (undo-tree-id6290 . -4) (undo-tree-id6291 . -4) (undo-tree-id6292 . -4) (undo-tree-id6293 . -4) (undo-tree-id6294 . -4) (undo-tree-id6295 . -4) (undo-tree-id6296 . -4) (undo-tree-id6297 . -4) (undo-tree-id6298 . -4) (undo-tree-id6299 . -4) (undo-tree-id6300 . -4) (undo-tree-id6301 . -4) (undo-tree-id6302 . -4) (undo-tree-id6303 . -4) (undo-tree-id6304 . -4) (undo-tree-id6305 . -4) (undo-tree-id6306 . -4) (undo-tree-id6307 . -4) (undo-tree-id6308 . -4) (undo-tree-id6309 . -4) (undo-tree-id6310 . -4) (undo-tree-id6311 . -4) 1492) nil (25595 55106 994741 294000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1761 . 1762) (nil fontified nil 1755 . 1762) (nil fontified nil 1749 . 1755) (nil fontified nil 1741 . 1749) (nil fontified nil 1740 . 1741) (nil fontified nil 1739 . 1740) (nil fontified nil 1738 . 1739) (nil fontified nil 1737 . 1738) (nil fontified nil 1736 . 1737) (nil fontified nil 1735 . 1736) (nil fontified nil 1734 . 1735) (nil fontified nil 1708 . 1734) (nil fontified nil 1701 . 1708) (nil fontified nil 1699 . 1701) (nil fontified nil 1698 . 1699) (nil fontified nil 1697 . 1698) (nil fontified nil 1696 . 1697) (nil fontified nil 1695 . 1696) (nil fontified nil 1693 . 1695) (nil fontified nil 1691 . 1693) (nil fontified nil 1679 . 1691) (nil fontified nil 1671 . 1679) (nil fontified nil 1667 . 1671) (nil fontified nil 1666 . 1667) (nil fontified nil 1664 . 1666) (nil fontified nil 1661 . 1664) (nil fontified nil 1658 . 1661) (nil fontified nil 1650 . 1658) (nil fontified nil 1649 . 1650) (nil fontified nil 1648 . 1649) (nil fontified nil 1647 . 1648) (nil fontified nil 1644 . 1647) (nil fontified nil 1643 . 1644) (nil fontified nil 1642 . 1643) (nil fontified nil 1641 . 1642) (nil fontified nil 1635 . 1641) (nil fontified nil 1627 . 1635) (nil fontified nil 1626 . 1627) (nil fontified nil 1625 . 1626) (nil fontified nil 1624 . 1625) (nil fontified nil 1618 . 1624) (nil fontified nil 1598 . 1618) (nil fontified nil 1597 . 1598) (nil fontified nil 1596 . 1597) (nil fontified nil 1584 . 1596) (nil fontified nil 1583 . 1584) (nil fontified nil 1578 . 1583) (nil fontified nil 1566 . 1578) (nil fontified nil 1558 . 1566) (nil fontified nil 1554 . 1558) (nil fontified nil 1553 . 1554) (nil fontified nil 1551 . 1553) (nil fontified nil 1550 . 1551) (nil fontified nil 1547 . 1550) (nil fontified nil 1541 . 1547) (nil fontified nil 1539 . 1541) (nil fontified nil 1531 . 1539) (nil fontified nil 1529 . 1531) (nil fontified nil 1526 . 1529) (nil fontified nil 1525 . 1526) (nil fontified nil 1524 . 1525) (nil fontified nil 1523 . 1524) (nil fontified nil 1522 . 1523) (nil fontified nil 1521 . 1522) (nil fontified nil 1515 . 1521) (nil fontified nil 1511 . 1515) (nil fontified nil 1510 . 1511) (nil fontified nil 1496 . 1510) (nil fontified nil 1495 . 1496) (nil fontified nil 1492 . 1495) (nil fontified nil 1488 . 1492) (1488 . 1762)) nil (25595 55106 994728 179000) 0 nil])
([nil nil ((#("out" 0 3 (face font-lock-function-name-face fontified t)) . -1507) (undo-tree-id6256 . -2) (undo-tree-id6257 . -2) (undo-tree-id6258 . -2) (undo-tree-id6259 . -2) (undo-tree-id6260 . -2) (undo-tree-id6261 . -2) (undo-tree-id6262 . -2) (undo-tree-id6263 . -2) (undo-tree-id6264 . -2) (undo-tree-id6265 . -2) (undo-tree-id6266 . -2) (undo-tree-id6267 . -3) (undo-tree-id6268 . -2) (undo-tree-id6269 . -3) (undo-tree-id6270 . -3) (undo-tree-id6271 . -3) (undo-tree-id6272 . -3) (undo-tree-id6273 . -3) (undo-tree-id6274 . -3) (undo-tree-id6275 . -3) (undo-tree-id6276 . -3) (undo-tree-id6277 . -3) (undo-tree-id6278 . -3) (undo-tree-id6279 . -3) (undo-tree-id6280 . -3) (undo-tree-id6281 . -3) (undo-tree-id6282 . -3) (undo-tree-id6283 . -3) (undo-tree-id6284 . -3) (undo-tree-id6285 . -3) 1510) nil (25595 55106 994721 306000) 0 nil])
([nil nil ((1507 . 1509)) nil (25595 55106 994693 523000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . -1695) (undo-tree-id6338 . -1) 1696 (t 25595 55107 8496 500000)) nil (25595 55118 968122 779000) 0 nil])
([nil nil ((1695 . 1696)) nil (25595 55118 968120 585000) 0 nil])
([nil nil ((#("1" 0 1 (fontified t)) . -1736) (undo-tree-id6337 . -1) 1737) nil (25595 55118 968118 952000) 0 nil])
([nil nil ((1736 . 1737)) nil (25595 55118 968105 526000) 0 nil])
([nil nil ((1979 . 1984) (t 25595 55118 985050 300000)) nil (25595 55247 501561 717000) 0 nil])
([nil nil ((1984 . 1989)) nil (25595 55247 501561 76000) 0 nil])
([nil nil ((1989 . 1990)) nil (25595 55247 501560 786000) 0 nil])
([nil nil ((1990 . 2003)) nil (25595 55247 501560 465000) 0 nil])
([nil nil ((2003 . 2015)) nil (25595 55247 501560 174000) 0 nil])
([nil nil ((2015 . 2016)) nil (25595 55247 501559 784000) 0 nil])
([nil nil ((2016 . 2029)) nil (25595 55247 501559 493000) 0 nil])
([nil nil ((2029 . 2039)) nil (25595 55247 501559 223000) 0 nil])
([nil nil ((2039 . 2048)) nil (25595 55247 501558 942000) 0 nil])
([nil nil ((2048 . 2059)) nil (25595 55247 501558 521000) 0 nil])
([nil nil ((2059 . 2060)) nil (25595 55247 501558 221000) 0 nil])
([nil nil ((2039 . 2042)) nil (25595 55247 501557 680000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -1798) (undo-tree-id6339 . -1) (undo-tree-id6340 . -1) (undo-tree-id6341 . -1) (undo-tree-id6342 . -1) (undo-tree-id6343 . -1) (undo-tree-id6344 . -1) (undo-tree-id6345 . -1) (undo-tree-id6346 . -1) (undo-tree-id6347 . -1) (undo-tree-id6348 . -1) (undo-tree-id6349 . -1) (undo-tree-id6350 . -1) (undo-tree-id6351 . -1) (undo-tree-id6352 . -1) (undo-tree-id6353 . -1) (undo-tree-id6354 . -1) (undo-tree-id6355 . -1) (undo-tree-id6356 . -1) (undo-tree-id6357 . -1) (undo-tree-id6358 . -1) (undo-tree-id6359 . -1) (undo-tree-id6360 . -1) (undo-tree-id6361 . -1) (undo-tree-id6362 . -1) (undo-tree-id6363 . -1) (undo-tree-id6364 . -1) (undo-tree-id6365 . -1) (undo-tree-id6366 . -1) (undo-tree-id6367 . -1) (undo-tree-id6368 . -1) (undo-tree-id6369 . -1) (undo-tree-id6370 . -1) (undo-tree-id6371 . -1) (undo-tree-id6372 . -1) (undo-tree-id6373 . -1) (undo-tree-id6374 . -1) (#("e" 0 1 (fontified t)) . -1799) (undo-tree-id6375 . -1) (undo-tree-id6376 . -1) (undo-tree-id6377 . -1) (undo-tree-id6378 . -1) (undo-tree-id6379 . -1) (undo-tree-id6380 . -1) (undo-tree-id6381 . -1) (undo-tree-id6382 . -1) (undo-tree-id6383 . -1) (undo-tree-id6384 . -1) (undo-tree-id6385 . -1) (undo-tree-id6386 . -1) (undo-tree-id6387 . -1) (undo-tree-id6388 . -1) (undo-tree-id6389 . -1) (undo-tree-id6390 . -1) (undo-tree-id6391 . -1) (undo-tree-id6392 . -1) (undo-tree-id6393 . -1) (undo-tree-id6394 . -1) (undo-tree-id6395 . -1) (undo-tree-id6396 . -1) (undo-tree-id6397 . -1) (undo-tree-id6398 . -1) (undo-tree-id6399 . -1) (undo-tree-id6400 . -1) (undo-tree-id6401 . -1) (undo-tree-id6402 . -1) (#("t" 0 1 (face font-lock-builtin-face fontified t)) . -1800) (undo-tree-id6403 . -1) (undo-tree-id6404 . -1) (undo-tree-id6405 . -1) (undo-tree-id6406 . -1) (undo-tree-id6407 . -1) (undo-tree-id6408 . -1) (undo-tree-id6409 . -1) (undo-tree-id6410 . -1) (undo-tree-id6411 . -1) (undo-tree-id6412 . -1) (undo-tree-id6413 . -1) (undo-tree-id6414 . -1) (undo-tree-id6415 . -1) (undo-tree-id6416 . -1) (undo-tree-id6417 . -1) (undo-tree-id6418 . -1) (undo-tree-id6419 . -1) (undo-tree-id6420 . -1) (undo-tree-id6421 . -1) (undo-tree-id6422 . -1) 1801) nil (25595 55247 501554 383000) 0 nil])
([nil nil ((1798 . 1802)) nil (25595 55247 501505 400000) 0 nil])
([nil nil ((2073 . 2094) (t 25595 55247 514748 300000)) nil (25595 55269 871186 106000) 0 nil])
([nil nil ((2094 . 2096)) nil (25595 55269 871181 127000) 0 nil])
([nil nil ((#("addall" 0 6 (fontified t)) . -2037) (undo-tree-id6423 . -6) (undo-tree-id6424 . -6) (undo-tree-id6425 . -6) (undo-tree-id6426 . -6) (undo-tree-id6427 . -6) (undo-tree-id6428 . -6) (undo-tree-id6429 . -6) (undo-tree-id6430 . -6) (undo-tree-id6431 . -6) (undo-tree-id6432 . -6) (undo-tree-id6433 . -6) (undo-tree-id6434 . -6) (undo-tree-id6435 . -6) (undo-tree-id6436 . -6) (undo-tree-id6437 . -6) (undo-tree-id6438 . -6) (undo-tree-id6439 . -6) (undo-tree-id6440 . -6) (undo-tree-id6441 . -6) (undo-tree-id6442 . -6) (undo-tree-id6443 . -6) (undo-tree-id6444 . -6) (undo-tree-id6445 . -6) (undo-tree-id6446 . -6) (undo-tree-id6447 . -6) (undo-tree-id6448 . -6) (undo-tree-id6449 . -6) (undo-tree-id6450 . -6) (undo-tree-id6451 . -6) (undo-tree-id6452 . -6) (undo-tree-id6453 . -6) (undo-tree-id6454 . -6) (undo-tree-id6455 . -6) (undo-tree-id6456 . -6) (undo-tree-id6457 . -6) (undo-tree-id6458 . -6) (undo-tree-id6459 . -6) (undo-tree-id6460 . -6) (undo-tree-id6461 . -6) 2043 (t 25595 55269 889559 500000)) nil (25595 55357 900508 130000) 0 nil])
([nil nil ((2037 . 2043)) nil (25595 55357 900475 378000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -1917) (undo-tree-id6462 . -1) (undo-tree-id6463 . -1) (undo-tree-id6464 . -1) (undo-tree-id6465 . -1) (undo-tree-id6466 . -1) (undo-tree-id6467 . -1) (undo-tree-id6468 . -1) (undo-tree-id6469 . -1) (undo-tree-id6470 . -1) (undo-tree-id6471 . -1) (undo-tree-id6472 . -1) (undo-tree-id6473 . -1) (undo-tree-id6474 . -1) (undo-tree-id6475 . -1) (undo-tree-id6476 . -1) (undo-tree-id6477 . -1) (undo-tree-id6478 . -1) (undo-tree-id6479 . -1) (undo-tree-id6480 . -1) (undo-tree-id6481 . -1) (undo-tree-id6482 . -1) (undo-tree-id6483 . -1) (undo-tree-id6484 . -1) (undo-tree-id6485 . -1) (undo-tree-id6486 . -1) (undo-tree-id6487 . -1) (undo-tree-id6488 . -1) (undo-tree-id6489 . -1) (undo-tree-id6490 . -1) (undo-tree-id6491 . -1) (undo-tree-id6492 . -1) (undo-tree-id6493 . -1) (undo-tree-id6494 . -1) (undo-tree-id6495 . -1) (undo-tree-id6496 . -1) (undo-tree-id6497 . -1) (undo-tree-id6498 . -1) (undo-tree-id6499 . -1) (undo-tree-id6500 . -1) (undo-tree-id6501 . -1) (undo-tree-id6502 . -1) (undo-tree-id6503 . -1) (undo-tree-id6504 . -1) (undo-tree-id6505 . -1) (undo-tree-id6506 . -1) (undo-tree-id6507 . -1) (undo-tree-id6508 . -1) (undo-tree-id6509 . -1) (undo-tree-id6510 . -1) (undo-tree-id6511 . -1) (undo-tree-id6512 . -1) (undo-tree-id6513 . -1) (undo-tree-id6514 . -1) (undo-tree-id6515 . -1) (undo-tree-id6516 . -1) (undo-tree-id6517 . -1) (undo-tree-id6518 . -1) (undo-tree-id6519 . -1) (undo-tree-id6520 . -1) (undo-tree-id6521 . -1) (undo-tree-id6522 . -1) (undo-tree-id6523 . -1) (undo-tree-id6524 . -1) (undo-tree-id6525 . -1) (#("e" 0 1 (fontified t)) . -1918) (undo-tree-id6526 . -1) (undo-tree-id6527 . -1) (undo-tree-id6528 . -1) (undo-tree-id6529 . -1) (undo-tree-id6530 . -1) (undo-tree-id6531 . -1) (undo-tree-id6532 . -1) (undo-tree-id6533 . -1) (undo-tree-id6534 . -1) (undo-tree-id6535 . -1) (undo-tree-id6536 . -1) (undo-tree-id6537 . -1) (undo-tree-id6538 . -1) (undo-tree-id6539 . -1) (undo-tree-id6540 . -1) (undo-tree-id6541 . -1) (undo-tree-id6542 . -1) (undo-tree-id6543 . -1) (undo-tree-id6544 . -1) (undo-tree-id6545 . -1) (undo-tree-id6546 . -1) (undo-tree-id6547 . -1) (undo-tree-id6548 . -1) (undo-tree-id6549 . -1) (undo-tree-id6550 . -1) (undo-tree-id6551 . -1) (undo-tree-id6552 . -1) (undo-tree-id6553 . -1) (undo-tree-id6554 . -1) (undo-tree-id6555 . -1) (undo-tree-id6556 . -1) (undo-tree-id6557 . -1) (undo-tree-id6558 . -1) (undo-tree-id6559 . -1) (undo-tree-id6560 . -1) (undo-tree-id6561 . -1) (undo-tree-id6562 . -1) (undo-tree-id6563 . -1) (undo-tree-id6564 . -1) (undo-tree-id6565 . -1) (undo-tree-id6566 . -1) (undo-tree-id6567 . -1) (undo-tree-id6568 . -1) (undo-tree-id6569 . -1) (undo-tree-id6570 . -1) (undo-tree-id6571 . -1) (undo-tree-id6572 . -1) (undo-tree-id6573 . -1) (undo-tree-id6574 . -1) (undo-tree-id6575 . -1) (undo-tree-id6576 . -1) (undo-tree-id6577 . -1) (undo-tree-id6578 . -1) (undo-tree-id6579 . -1) (undo-tree-id6580 . -1) (#("t" 0 1 (face font-lock-builtin-face fontified t)) . -1919) (undo-tree-id6581 . -1) (undo-tree-id6582 . -1) (undo-tree-id6583 . -1) (undo-tree-id6584 . -1) (undo-tree-id6585 . -1) (undo-tree-id6586 . -1) (undo-tree-id6587 . -1) (undo-tree-id6588 . -1) (undo-tree-id6589 . -1) (undo-tree-id6590 . -1) (undo-tree-id6591 . -1) (undo-tree-id6592 . -1) (undo-tree-id6593 . -1) (undo-tree-id6594 . -1) (undo-tree-id6595 . -1) (undo-tree-id6596 . -1) (undo-tree-id6597 . -1) (undo-tree-id6598 . -1) (undo-tree-id6599 . -1) (undo-tree-id6600 . -1) (undo-tree-id6601 . -1) (undo-tree-id6602 . -1) (undo-tree-id6603 . -1) (undo-tree-id6604 . -1) (undo-tree-id6605 . -1) (undo-tree-id6606 . -1) (undo-tree-id6607 . -1) (undo-tree-id6608 . -1) (undo-tree-id6609 . -1) (undo-tree-id6610 . -1) (undo-tree-id6611 . -1) (undo-tree-id6612 . -1) (undo-tree-id6613 . -1) (undo-tree-id6614 . -1) (undo-tree-id6615 . -1) (undo-tree-id6616 . -1) (undo-tree-id6617 . -1) (undo-tree-id6618 . -1) (undo-tree-id6619 . -1) (undo-tree-id6620 . -1) (undo-tree-id6621 . -1) (undo-tree-id6622 . -1) (undo-tree-id6623 . -1) (undo-tree-id6624 . -1) (undo-tree-id6625 . -1) (undo-tree-id6626 . -1) (#("(" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . -1920) (undo-tree-id6627 . -1) (undo-tree-id6628 . -1) (undo-tree-id6629 . -1) (undo-tree-id6630 . -1) (undo-tree-id6631 . -1) (undo-tree-id6632 . -1) (undo-tree-id6633 . -1) (undo-tree-id6634 . -1) (undo-tree-id6635 . -1) (undo-tree-id6636 . -1) (undo-tree-id6637 . -1) (undo-tree-id6638 . -1) (undo-tree-id6639 . -1) (undo-tree-id6640 . -1) (undo-tree-id6641 . -1) (undo-tree-id6642 . -1) (undo-tree-id6643 . -1) (undo-tree-id6644 . -1) (undo-tree-id6645 . -1) (undo-tree-id6646 . -1) (undo-tree-id6647 . -1) (undo-tree-id6648 . -1) (undo-tree-id6649 . -1) (undo-tree-id6650 . -1) (undo-tree-id6651 . -1) (undo-tree-id6652 . -1) (undo-tree-id6653 . -1) (undo-tree-id6654 . -1) (undo-tree-id6655 . -1) (undo-tree-id6656 . -1) (undo-tree-id6657 . -1) (undo-tree-id6658 . -1) (undo-tree-id6659 . -1) (undo-tree-id6660 . -1) (undo-tree-id6661 . -1) (undo-tree-id6662 . -1) (undo-tree-id6663 . -1) (#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . -1921) (undo-tree-id6664 . -1) (undo-tree-id6665 . -1) (undo-tree-id6666 . -1) (undo-tree-id6667 . -1) (undo-tree-id6668 . -1) (undo-tree-id6669 . -1) (undo-tree-id6670 . -1) (undo-tree-id6671 . -1) (undo-tree-id6672 . -1) (undo-tree-id6673 . -1) (undo-tree-id6674 . -1) (undo-tree-id6675 . -1) (undo-tree-id6676 . -1) (undo-tree-id6677 . -1) (undo-tree-id6678 . -1) (undo-tree-id6679 . -1) (undo-tree-id6680 . -1) (undo-tree-id6681 . -1) (undo-tree-id6682 . -1) (undo-tree-id6683 . -1) (undo-tree-id6684 . -1) (undo-tree-id6685 . -1) (undo-tree-id6686 . -1) (undo-tree-id6687 . -1) (undo-tree-id6688 . -1) (undo-tree-id6689 . -1) (undo-tree-id6690 . -1) (undo-tree-id6691 . -1) (undo-tree-id6692 . -1) 1922 (t 25595 55357 911227 800000)) nil (25595 55414 50550 484000) 0 nil])
([nil nil ((1917 . 1919)) nil (25595 55414 50248 940000) 0 nil])
([nil nil ((1937 . 1938) (t 25595 55414 63063 0)) nil (25595 55439 960935 647000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t)) . -1936) (undo-tree-id6693 . -1) (undo-tree-id6694 . -1) (undo-tree-id6695 . -1) (undo-tree-id6696 . -1) (undo-tree-id6697 . -1) (undo-tree-id6698 . -1) (undo-tree-id6699 . -1) (undo-tree-id6700 . -1) (undo-tree-id6701 . -1) (undo-tree-id6702 . -1) (undo-tree-id6703 . -1) (undo-tree-id6704 . -1) (undo-tree-id6705 . -1) (undo-tree-id6706 . -1) (undo-tree-id6707 . -1) (undo-tree-id6708 . -1) (undo-tree-id6709 . -1) (undo-tree-id6710 . -1) (undo-tree-id6711 . -1) (undo-tree-id6712 . -1) (undo-tree-id6713 . -1) (undo-tree-id6714 . -1) (undo-tree-id6715 . -1) (undo-tree-id6716 . -1) (undo-tree-id6717 . -1) (undo-tree-id6718 . -1) (undo-tree-id6719 . -1) (undo-tree-id6720 . -1) (undo-tree-id6721 . -1) (undo-tree-id6722 . -1) (undo-tree-id6723 . -1) (undo-tree-id6724 . -1) (undo-tree-id6725 . -1) (undo-tree-id6726 . -1) (undo-tree-id6727 . -1) (undo-tree-id6728 . -1) (undo-tree-id6729 . -1) (undo-tree-id6730 . -1) (undo-tree-id6731 . -1) (undo-tree-id6732 . -1) (undo-tree-id6733 . -1) (undo-tree-id6734 . -1) (undo-tree-id6735 . -1) (undo-tree-id6736 . -1) (undo-tree-id6737 . -1) (undo-tree-id6738 . -1) (undo-tree-id6739 . -1) (undo-tree-id6740 . -1) (undo-tree-id6741 . -1) (undo-tree-id6742 . -1) (undo-tree-id6743 . -1) (undo-tree-id6744 . -1) (undo-tree-id6745 . -1) (undo-tree-id6746 . -1) (undo-tree-id6747 . -1) (undo-tree-id6748 . -1) (undo-tree-id6749 . -1) (undo-tree-id6750 . -1) (undo-tree-id6751 . -1) (undo-tree-id6752 . -1) (undo-tree-id6753 . -1) (undo-tree-id6754 . -1) (undo-tree-id6755 . -1) (undo-tree-id6756 . -1) (undo-tree-id6757 . -1) (undo-tree-id6758 . -1) (undo-tree-id6759 . -1) (undo-tree-id6760 . -1) (undo-tree-id6761 . -1) (undo-tree-id6762 . -1) (#("0" 0 1 (fontified t)) . -1937) (undo-tree-id6763 . -1) (undo-tree-id6764 . -1) (undo-tree-id6765 . -1) (undo-tree-id6766 . -1) (undo-tree-id6767 . -1) (undo-tree-id6768 . -1) (undo-tree-id6769 . -1) (undo-tree-id6770 . -1) (undo-tree-id6771 . -1) (undo-tree-id6772 . -1) (undo-tree-id6773 . -1) (undo-tree-id6774 . -1) (undo-tree-id6775 . -1) (undo-tree-id6776 . -1) (undo-tree-id6777 . -1) (undo-tree-id6778 . -1) (undo-tree-id6779 . -1) (undo-tree-id6780 . -1) (undo-tree-id6781 . -1) (undo-tree-id6782 . -1) (undo-tree-id6783 . -1) (undo-tree-id6784 . -1) (undo-tree-id6785 . -1) (undo-tree-id6786 . -1) (undo-tree-id6787 . -1) (undo-tree-id6788 . -1) (undo-tree-id6789 . -1) (undo-tree-id6790 . -1) (undo-tree-id6791 . -1) (undo-tree-id6792 . -1) (undo-tree-id6793 . -1) (undo-tree-id6794 . -1) (undo-tree-id6795 . -1) (undo-tree-id6796 . -1) (undo-tree-id6797 . -1) (undo-tree-id6798 . -1) (undo-tree-id6799 . -1) (undo-tree-id6800 . -1) (undo-tree-id6801 . -1) (undo-tree-id6802 . -1) (undo-tree-id6803 . -1) (undo-tree-id6804 . -1) (undo-tree-id6805 . -1) (undo-tree-id6806 . -1) (undo-tree-id6807 . -1) (undo-tree-id6808 . -1) (undo-tree-id6809 . -1) (undo-tree-id6810 . -1) (undo-tree-id6811 . -1) (#("d" 0 1 (fontified t)) . -1938) (undo-tree-id6812 . -1) (undo-tree-id6813 . -1) (undo-tree-id6814 . -1) (undo-tree-id6815 . -1) (undo-tree-id6816 . -1) (undo-tree-id6817 . -1) (undo-tree-id6818 . -1) (undo-tree-id6819 . -1) (undo-tree-id6820 . -1) (undo-tree-id6821 . -1) (undo-tree-id6822 . -1) (undo-tree-id6823 . -1) (undo-tree-id6824 . -1) (undo-tree-id6825 . -1) (undo-tree-id6826 . -1) (undo-tree-id6827 . -1) (undo-tree-id6828 . -1) (undo-tree-id6829 . -1) (undo-tree-id6830 . -1) (undo-tree-id6831 . -1) (undo-tree-id6832 . -1) (undo-tree-id6833 . -1) (undo-tree-id6834 . -1) (undo-tree-id6835 . -1) (undo-tree-id6836 . -1) (undo-tree-id6837 . -1) 1939) nil (25595 55439 960930 417000) 0 nil])
([nil nil ((1936 . 1941)) nil (25595 55439 960583 286000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t)) . -2012) (undo-tree-id6838 . -1) (undo-tree-id6839 . -1) (#("d" 0 1 (fontified t)) . -2013) (undo-tree-id6840 . -1) (undo-tree-id6841 . -1) 2014 (t 25595 55439 977641 300000)) nil (25595 55461 570235 422000) 0 nil])
([nil nil ((2012 . 2017)) nil (25595 55461 570219 762000) 0 nil])
([nil nil ((#("            result.append(n)" 0 25 (fontified t) 25 26 (face (rainbow-delimiters-depth-1-face) fontified t) 26 27 (fontified t) 27 28 (face (rainbow-delimiters-depth-1-face) fontified t)) . 1992) (undo-tree-id6843 . -20) (undo-tree-id6844 . -25) (undo-tree-id6845 . -24) (undo-tree-id6846 . -25) (undo-tree-id6847 . -25) (undo-tree-id6848 . -25) (undo-tree-id6849 . -25) (undo-tree-id6850 . -25) (undo-tree-id6851 . -25) (undo-tree-id6852 . -25) (undo-tree-id6853 . -25) (undo-tree-id6854 . -25) (undo-tree-id6855 . -25) (undo-tree-id6856 . -25) (undo-tree-id6857 . -25) (undo-tree-id6858 . -25) (undo-tree-id6859 . -25) (undo-tree-id6860 . -25) (undo-tree-id6861 . -25) (undo-tree-id6862 . -25) (undo-tree-id6863 . -25) (undo-tree-id6864 . -25) (undo-tree-id6865 . -25) (undo-tree-id6866 . -25) (undo-tree-id6867 . -28) (undo-tree-id6868 . -12) (undo-tree-id6869 . -12) (undo-tree-id6870 . -12) (undo-tree-id6871 . -12) (undo-tree-id6872 . -28) (undo-tree-id6873 . -28) (undo-tree-id6874 . -25) (undo-tree-id6875 . -25) (undo-tree-id6876 . -25) (undo-tree-id6877 . -25) (undo-tree-id6878 . -25) (undo-tree-id6879 . -25) (undo-tree-id6880 . -25) (undo-tree-id6881 . -25) (undo-tree-id6882 . -25) (undo-tree-id6883 . -25) (undo-tree-id6884 . -25) (undo-tree-id6885 . -28) (t 25595 55461 581150 100000)) nil (25595 55480 114935 97000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 1992) (undo-tree-id6842 . -1)) nil (25595 55480 114911 883000) 0 nil])
([nil nil ((#("reverse()" 0 7 (fontified t) 7 8 (face (rainbow-delimiters-depth-1-face) fontified t) 8 9 (face (rainbow-delimiters-depth-1-face) fontified t)) . -2061) (undo-tree-id6942 . -9) (undo-tree-id6943 . -9) (undo-tree-id6944 . -9) (undo-tree-id6945 . -7) (undo-tree-id6946 . -7) (undo-tree-id6947 . -7) (undo-tree-id6948 . -7) (undo-tree-id6949 . -7) (undo-tree-id6950 . -7) (undo-tree-id6951 . -7) (undo-tree-id6952 . -7) (undo-tree-id6953 . -7) (undo-tree-id6954 . -7) (undo-tree-id6955 . -7) (undo-tree-id6956 . -7) (undo-tree-id6957 . -8) (undo-tree-id6958 . -7) (undo-tree-id6959 . -8) (undo-tree-id6960 . -8) (undo-tree-id6961 . -8) (undo-tree-id6962 . -8) (undo-tree-id6963 . -8) (undo-tree-id6964 . -8) (undo-tree-id6965 . -8) (undo-tree-id6966 . -8) (undo-tree-id6967 . -8) (undo-tree-id6968 . -8) (undo-tree-id6969 . -8) (undo-tree-id6970 . -9) (undo-tree-id6971 . -8) (undo-tree-id6972 . -9) (undo-tree-id6973 . -9) (undo-tree-id6974 . -9) (undo-tree-id6975 . -9) (undo-tree-id6976 . -9) (undo-tree-id6977 . -9) (undo-tree-id6978 . -9) (undo-tree-id6979 . -9) (undo-tree-id6980 . -9) (undo-tree-id6981 . -9) (undo-tree-id6982 . -9) (undo-tree-id6983 . -9) (undo-tree-id6984 . -9) (undo-tree-id6985 . -9) (undo-tree-id6986 . -9) (undo-tree-id6987 . -9) (undo-tree-id6988 . -9) 2070 (t 25595 55480 124897 900000)) nil (25595 55520 633330 696000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -2060) (undo-tree-id6886 . -1) (undo-tree-id6887 . -1) (undo-tree-id6888 . -1) (undo-tree-id6889 . -1) (undo-tree-id6890 . -1) (undo-tree-id6891 . -1) (undo-tree-id6892 . -1) (undo-tree-id6893 . -1) (undo-tree-id6894 . -1) (undo-tree-id6895 . -1) (undo-tree-id6896 . -1) (undo-tree-id6897 . -1) (undo-tree-id6898 . -1) (undo-tree-id6899 . -1) (undo-tree-id6900 . -1) (undo-tree-id6901 . -1) (undo-tree-id6902 . -1) (undo-tree-id6903 . -1) (undo-tree-id6904 . -1) (undo-tree-id6905 . -1) (undo-tree-id6906 . -1) (undo-tree-id6907 . -1) (undo-tree-id6908 . -1) (undo-tree-id6909 . -1) (undo-tree-id6910 . -1) (undo-tree-id6911 . -1) (undo-tree-id6912 . -1) (undo-tree-id6913 . -1) (undo-tree-id6914 . -1) (undo-tree-id6915 . -1) (undo-tree-id6916 . -1) (undo-tree-id6917 . -1) (undo-tree-id6918 . -1) (undo-tree-id6919 . -1) (undo-tree-id6920 . -1) (undo-tree-id6921 . -1) (undo-tree-id6922 . -1) (undo-tree-id6923 . -1) (undo-tree-id6924 . -1) (undo-tree-id6925 . -1) (undo-tree-id6926 . -1) (undo-tree-id6927 . -1) (undo-tree-id6928 . -1) (undo-tree-id6929 . -1) (undo-tree-id6930 . -1) (undo-tree-id6931 . -1) (undo-tree-id6932 . -1) (undo-tree-id6933 . -1) (undo-tree-id6934 . -1) (undo-tree-id6935 . -1) (undo-tree-id6936 . -1) (undo-tree-id6937 . -1) (undo-tree-id6938 . -1) (undo-tree-id6939 . -1) (undo-tree-id6940 . -1) (undo-tree-id6941 . -1) 2061) nil (25595 55520 633309 25000) 0 nil])
([nil nil ((1 . 2) (t 25595 55520 647988 500000)) nil (25595 55524 239262 237000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -1) (undo-tree-id6989 . 1) (undo-tree-id6990 . -1) (undo-tree-id6991 . -1) (undo-tree-id6992 . -1) (undo-tree-id6993 . -1) (undo-tree-id6994 . -1) (undo-tree-id6995 . -1) (undo-tree-id6996 . -1) (undo-tree-id6997 . -1) (undo-tree-id6998 . -1) (undo-tree-id6999 . -1) (undo-tree-id7000 . -1) (undo-tree-id7001 . -1) (undo-tree-id7002 . -1) (undo-tree-id7003 . -1) (undo-tree-id7004 . -1) (undo-tree-id7005 . -1) (undo-tree-id7006 . -1) (undo-tree-id7007 . -1) (undo-tree-id7008 . -1) (undo-tree-id7009 . -1) (undo-tree-id7010 . -1) (undo-tree-id7011 . -1) (undo-tree-id7012 . -1) (undo-tree-id7013 . -1) (undo-tree-id7014 . -1) (undo-tree-id7015 . -1) (undo-tree-id7016 . -1) (undo-tree-id7017 . -1) (undo-tree-id7018 . -1) (undo-tree-id7019 . -1) (undo-tree-id7020 . -1) (undo-tree-id7021 . -1) (undo-tree-id7022 . -1) (undo-tree-id7023 . -1) (undo-tree-id7024 . -1) (undo-tree-id7025 . -1) (undo-tree-id7026 . -1) (undo-tree-id7027 . -1) (undo-tree-id7028 . -1) (undo-tree-id7029 . -1) (undo-tree-id7030 . -1) (undo-tree-id7031 . -1) (undo-tree-id7032 . -1) (undo-tree-id7033 . -1) (undo-tree-id7034 . -1) (undo-tree-id7035 . -1) (undo-tree-id7036 . -1) (undo-tree-id7037 . -1) (undo-tree-id7038 . -1) (undo-tree-id7039 . -1) (undo-tree-id7040 . -1) (undo-tree-id7041 . -1) (undo-tree-id7042 . -1) (undo-tree-id7043 . -1) (undo-tree-id7044 . -1) 2) nil (25595 55524 239258 139000) 0 nil])
([nil nil ((2061 . 2065) (t 25595 55524 257473 700000)) nil (25595 55898 830748 209000) 0 nil])
([nil nil ((2065 . 2068)) nil (25595 55898 830747 738000) 0 nil])
([nil nil ((2062 . 2066) (#("    " 0 4 (fontified nil)) . 2061) (undo-tree-id7067 . -4) (2065 . 2066)) nil (25595 55898 830747 97000) 0 nil])
([nil nil ((2066 . 2068)) nil (25595 55898 830745 824000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . -2066) (undo-tree-id7065 . -1) (#("0" 0 1 (fontified t)) . -2067) (undo-tree-id7066 . -1) 2068) nil (25595 55898 830745 123000) 0 nil])
([nil nil ((2069 . 2072)) nil (25595 55898 830743 961000) 0 nil])
([nil nil ((#("t" 0 1 (face font-lock-function-name-face fontified t)) . -2070) (undo-tree-id7063 . -1) (#("r" 0 1 (face font-lock-function-name-face fontified t)) . -2071) (undo-tree-id7064 . -1) 2072) nil (25595 55898 830743 570000) 0 nil])
([nil nil ((2070 . 2075)) nil (25595 55898 830742 398000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -2069) (undo-tree-id7057 . -1) (#("g" 0 1 (face font-lock-function-name-face fontified t)) . -2070) (undo-tree-id7058 . -1) (#("r" 0 1 (face font-lock-function-name-face fontified t)) . -2071) (undo-tree-id7059 . -1) (#("a" 0 1 (face font-lock-function-name-face fontified t)) . -2072) (undo-tree-id7060 . -1) (#("p" 0 1 (face font-lock-function-name-face fontified t)) . -2073) (undo-tree-id7061 . -1) (#("h" 0 1 (face font-lock-function-name-face fontified t)) . -2074) (undo-tree-id7062 . -1) 2075) nil (25595 55898 830741 566000) 0 nil])
([nil nil ((2069 . 2070)) nil (25595 55898 830737 378000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t)) . -2066) (undo-tree-id7053 . -1) (#("e" 0 1 (fontified t)) . -2067) (undo-tree-id7054 . -1) (#("f" 0 1 (face font-lock-keyword-face fontified t)) . -2068) (undo-tree-id7055 . -1) (#(" " 0 1 (fontified t)) . -2069) (undo-tree-id7056 . -1) 2070) nil (25595 55898 830736 607000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -2062) (undo-tree-id7052 . -4) 2066) nil (25595 55898 830733 80000) 0 nil])
([nil nil ((2062 . 2066)) nil (25595 55898 830731 838000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t)) . -2062) (undo-tree-id7048 . -1) (#("e" 0 1 (fontified t)) . -2063) (undo-tree-id7049 . -1) (#("f" 0 1 (face font-lock-keyword-face fontified t)) . -2064) (undo-tree-id7050 . -1) (#(" " 0 1 (fontified t)) . -2065) (undo-tree-id7051 . -1) 2066) nil (25595 55898 830731 16000) 0 nil])
([nil nil ((2062 . 2065)) nil (25595 55898 830727 409000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -2062) (undo-tree-id7045 . -1) (#("a" 0 1 (fontified t)) . -2063) (undo-tree-id7046 . -1) (#("m" 0 1 (fontified t)) . -2064) (undo-tree-id7047 . -1) 2065) nil (25595 55898 830725 997000) 0 nil])
([nil nil ((2062 . 2070)) nil (25595 55898 830715 366000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2207 . 2208) (nil mouse-face highlight 2205 . 2208) (nil help-echo "mouse-2: insert after prompt as new input" 2205 . 2208) (nil fontified nil 2205 . 2208) (nil mouse-face highlight 2202 . 2205) (nil help-echo "mouse-2: insert after prompt as new input" 2202 . 2205) (nil font-lock-face font-lock-string-face 2202 . 2205) (nil fontified nil 2202 . 2205) (nil mouse-face highlight 2200 . 2202) (nil help-echo "mouse-2: insert after prompt as new input" 2200 . 2202) (nil fontified nil 2200 . 2202) (nil mouse-face highlight 2197 . 2200) (nil help-echo "mouse-2: insert after prompt as new input" 2197 . 2200) (nil font-lock-face font-lock-string-face 2197 . 2200) (nil fontified nil 2197 . 2200) (nil mouse-face highlight 2193 . 2197) (nil help-echo "mouse-2: insert after prompt as new input" 2193 . 2197) (nil fontified nil 2193 . 2197) (nil mouse-face highlight 2190 . 2193) (nil help-echo "mouse-2: insert after prompt as new input" 2190 . 2193) (nil font-lock-face font-lock-string-face 2190 . 2193) (nil fontified nil 2190 . 2193) (nil mouse-face highlight 2188 . 2190) (nil help-echo "mouse-2: insert after prompt as new input" 2188 . 2190) (nil fontified nil 2188 . 2190) (nil mouse-face highlight 2185 . 2188) (nil help-echo "mouse-2: insert after prompt as new input" 2185 . 2188) (nil font-lock-face font-lock-string-face 2185 . 2188) (nil fontified nil 2185 . 2188) (nil mouse-face highlight 2181 . 2185) (nil help-echo "mouse-2: insert after prompt as new input" 2181 . 2185) (nil fontified nil 2181 . 2185) (nil mouse-face highlight 2178 . 2181) (nil help-echo "mouse-2: insert after prompt as new input" 2178 . 2181) (nil font-lock-face font-lock-string-face 2178 . 2181) (nil fontified nil 2178 . 2181) (nil mouse-face highlight 2176 . 2178) (nil help-echo "mouse-2: insert after prompt as new input" 2176 . 2178) (nil fontified nil 2176 . 2178) (nil mouse-face highlight 2173 . 2176) (nil help-echo "mouse-2: insert after prompt as new input" 2173 . 2176) (nil font-lock-face font-lock-string-face 2173 . 2176) (nil fontified nil 2173 . 2176) (nil mouse-face highlight 2169 . 2173) (nil help-echo "mouse-2: insert after prompt as new input" 2169 . 2173) (nil fontified nil 2169 . 2173) (nil mouse-face highlight 2166 . 2169) (nil help-echo "mouse-2: insert after prompt as new input" 2166 . 2169) (nil font-lock-face font-lock-string-face 2166 . 2169) (nil fontified nil 2166 . 2169) (nil mouse-face highlight 2164 . 2166) (nil help-echo "mouse-2: insert after prompt as new input" 2164 . 2166) (nil fontified nil 2164 . 2166) (nil mouse-face highlight 2161 . 2164) (nil help-echo "mouse-2: insert after prompt as new input" 2161 . 2164) (nil font-lock-face font-lock-string-face 2161 . 2164) (nil fontified nil 2161 . 2164) (nil mouse-face highlight 2157 . 2161) (nil help-echo "mouse-2: insert after prompt as new input" 2157 . 2161) (nil fontified nil 2157 . 2161) (nil mouse-face highlight 2154 . 2157) (nil help-echo "mouse-2: insert after prompt as new input" 2154 . 2157) (nil font-lock-face font-lock-string-face 2154 . 2157) (nil fontified nil 2154 . 2157) (nil mouse-face highlight 2152 . 2154) (nil help-echo "mouse-2: insert after prompt as new input" 2152 . 2154) (nil fontified nil 2152 . 2154) (nil mouse-face highlight 2149 . 2152) (nil help-echo "mouse-2: insert after prompt as new input" 2149 . 2152) (nil font-lock-face font-lock-string-face 2149 . 2152) (nil fontified nil 2149 . 2152) (nil mouse-face highlight 2145 . 2149) (nil help-echo "mouse-2: insert after prompt as new input" 2145 . 2149) (nil fontified nil 2145 . 2149) (nil mouse-face highlight 2142 . 2145) (nil help-echo "mouse-2: insert after prompt as new input" 2142 . 2145) (nil font-lock-face font-lock-string-face 2142 . 2145) (nil fontified nil 2142 . 2145) (nil mouse-face highlight 2140 . 2142) (nil help-echo "mouse-2: insert after prompt as new input" 2140 . 2142) (nil fontified nil 2140 . 2142) (nil mouse-face highlight 2137 . 2140) (nil help-echo "mouse-2: insert after prompt as new input" 2137 . 2140) (nil font-lock-face font-lock-string-face 2137 . 2140) (nil fontified nil 2137 . 2140) (nil mouse-face highlight 2133 . 2137) (nil help-echo "mouse-2: insert after prompt as new input" 2133 . 2137) (nil fontified nil 2133 . 2137) (nil mouse-face highlight 2130 . 2133) (nil help-echo "mouse-2: insert after prompt as new input" 2130 . 2133) (nil font-lock-face font-lock-string-face 2130 . 2133) (nil fontified nil 2130 . 2133) (nil mouse-face highlight 2128 . 2130) (nil help-echo "mouse-2: insert after prompt as new input" 2128 . 2130) (nil fontified nil 2128 . 2130) (nil mouse-face highlight 2125 . 2128) (nil help-echo "mouse-2: insert after prompt as new input" 2125 . 2128) (nil font-lock-face font-lock-string-face 2125 . 2128) (nil fontified nil 2125 . 2128) (nil mouse-face highlight 2120 . 2125) (nil help-echo "mouse-2: insert after prompt as new input" 2120 . 2125) (nil fontified nil 2120 . 2125) (nil mouse-face highlight 2117 . 2120) (nil help-echo "mouse-2: insert after prompt as new input" 2117 . 2120) (nil font-lock-face font-lock-string-face 2117 . 2120) (nil fontified nil 2117 . 2120) (nil mouse-face highlight 2115 . 2117) (nil help-echo "mouse-2: insert after prompt as new input" 2115 . 2117) (nil fontified nil 2115 . 2117) (nil mouse-face highlight 2112 . 2115) (nil help-echo "mouse-2: insert after prompt as new input" 2112 . 2115) (nil font-lock-face font-lock-string-face 2112 . 2115) (nil fontified nil 2112 . 2115) (nil mouse-face highlight 2110 . 2112) (nil help-echo "mouse-2: insert after prompt as new input" 2110 . 2112) (nil fontified nil 2110 . 2112) (nil mouse-face highlight 2107 . 2110) (nil help-echo "mouse-2: insert after prompt as new input" 2107 . 2110) (nil font-lock-face font-lock-string-face 2107 . 2110) (nil fontified nil 2107 . 2110) (nil mouse-face highlight 2105 . 2107) (nil help-echo "mouse-2: insert after prompt as new input" 2105 . 2107) (nil fontified nil 2105 . 2107) (nil mouse-face highlight 2102 . 2105) (nil help-echo "mouse-2: insert after prompt as new input" 2102 . 2105) (nil font-lock-face font-lock-string-face 2102 . 2105) (nil fontified nil 2102 . 2105) (nil mouse-face highlight 2100 . 2102) (nil help-echo "mouse-2: insert after prompt as new input" 2100 . 2102) (nil fontified nil 2100 . 2102) (nil mouse-face highlight 2097 . 2100) (nil help-echo "mouse-2: insert after prompt as new input" 2097 . 2100) (nil font-lock-face font-lock-string-face 2097 . 2100) (nil fontified nil 2097 . 2100) (nil mouse-face highlight 2095 . 2097) (nil help-echo "mouse-2: insert after prompt as new input" 2095 . 2097) (nil fontified nil 2095 . 2097) (nil mouse-face highlight 2092 . 2095) (nil help-echo "mouse-2: insert after prompt as new input" 2092 . 2095) (nil font-lock-face font-lock-string-face 2092 . 2095) (nil fontified nil 2092 . 2095) (nil mouse-face highlight 2090 . 2092) (nil help-echo "mouse-2: insert after prompt as new input" 2090 . 2092) (nil fontified nil 2090 . 2092) (nil mouse-face highlight 2087 . 2090) (nil help-echo "mouse-2: insert after prompt as new input" 2087 . 2090) (nil font-lock-face font-lock-string-face 2087 . 2090) (nil fontified nil 2087 . 2090) (nil mouse-face highlight 2073 . 2087) (nil help-echo "mouse-2: insert after prompt as new input" 2073 . 2087) (nil fontified nil 2073 . 2087) (nil mouse-face highlight 2072 . 2073) (nil help-echo "mouse-2: insert after prompt as new input" 2072 . 2073) (nil font-lock-face font-lock-operator-face 2072 . 2073) (nil fontified nil 2072 . 2073) (nil mouse-face highlight 2071 . 2072) (nil help-echo "mouse-2: insert after prompt as new input" 2071 . 2072) (nil fontified nil 2071 . 2072) (nil mouse-face highlight 2070 . 2071) (nil help-echo "mouse-2: insert after prompt as new input" 2070 . 2071) (nil font-lock-face font-lock-variable-name-face 2070 . 2071) (nil fontified nil 2070 . 2071) (2070 . 2208)) nil (25595 55898 830947 618000) 0 nil])
([nil nil ((2208 . 2209) 2121) nil (25595 55901 680370 377000) 0 nil] [nil nil ((2121 . 2146)) ((#("
                        " 0 25 (fontified t)) . 2121) (undo-tree-id7068 . -1) (undo-tree-id7069 . -25) (undo-tree-id7070 . -25)) (25595 55898 830695 579000) 0 nil])
([nil nil ((1755 . 1764) (t 25595 55901 695734 400000)) nil (25595 56086 116972 975000) 0 nil])
nil
([nil nil ((1770 . 1772)) nil (25595 56086 116968 817000) 0 nil])
([nil nil ((#("set(" 0 3 (face font-lock-builtin-face fontified t) 3 4 (face (rainbow-delimiters-depth-2-face) fontified t)) . -1760) (undo-tree-id7075 . -4) (undo-tree-id7076 . -4) 1764 (t 25595 56086 129140 900000)) nil (25595 56123 443772 74000) 0 nil])
([nil nil ((#("list(" 0 4 (face font-lock-builtin-face fontified t) 4 5 (face (rainbow-delimiters-depth-1-face) fontified t)) . -1755) (undo-tree-id7073 . -5) (undo-tree-id7074 . -5) 1760) nil (25595 56123 443769 819000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-unmatched-face) fontified t)) . -1761) (undo-tree-id7071 . -1) (#(")" 0 1 (face (rainbow-delimiters-unmatched-face) fontified t)) . -1762) (undo-tree-id7072 . -1) 1763) nil (25595 56123 443766 774000) 0 nil])
([nil nil ((2054 . 2063)) nil (25595 56123 443754 380000) 0 nil])
([nil nil ((2069 . 2071)) nil (25595 56123 443748 940000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -2059) (undo-tree-id7077 . -1) (undo-tree-id7078 . -1) (undo-tree-id7079 . -1) (undo-tree-id7080 . -1) (undo-tree-id7081 . -1) (undo-tree-id7082 . -1) (undo-tree-id7083 . -1) (undo-tree-id7084 . -1) (#("e" 0 1 (fontified t)) . -2060) (undo-tree-id7085 . -1) (undo-tree-id7086 . -1) (#("t" 0 1 (face font-lock-builtin-face fontified t)) . -2061) (undo-tree-id7087 . -1) (undo-tree-id7088 . -1) 2062 (t 25595 56123 466632 800000)) nil (25595 56195 343376 1000) 0 nil])
([nil nil ((2059 . 2072)) nil (25595 56409 201410 386000) 0 nil])
([nil nil ((2083 . 2087) (#("    " 0 4 (fontified nil)) . 2082) (undo-tree-id7512 . -4) (2081 . 2087) (t 25595 56195 352816 900000)) nil (25595 56430 536683 952000) 0 nil] [nil nil ((1901 . 1909) (#("        " 0 8 (fontified nil)) . 1900) (undo-tree-id7090 . -8) (1908 . 1909) (t 25595 56195 352816 900000)) ((#("
" 0 1 (fontified nil)) . 1908) (undo-tree-id7510 . -1) (1900 . 1908) (#("        " 0 8 (fontified t)) . 1901)) (25595 56408 476962 182000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2400 . 2401) (nil fontified nil 2400 . 2401) (nil fontified nil 2399 . 2400) (nil fontified nil 2393 . 2399) (nil fontified nil 2392 . 2393) (nil fontified nil 2384 . 2392) (nil fontified nil 2383 . 2384) (nil fontified nil 2379 . 2383) (nil fontified nil 2378 . 2379) (nil fontified nil 2374 . 2378) (nil fontified nil 2373 . 2374) (nil fontified nil 2367 . 2373) (nil fontified nil 2359 . 2367) (nil fontified nil 2358 . 2359) (nil fontified nil 2357 . 2358) (nil fontified nil 2356 . 2357) (nil fontified nil 2355 . 2356) (nil fontified nil 2354 . 2355) (nil fontified nil 2342 . 2354) (nil fontified nil 2338 . 2342) (nil fontified nil 2337 . 2338) (nil fontified nil 2324 . 2337) (nil fontified nil 2312 . 2324) (nil fontified nil 2311 . 2312) (nil fontified nil 2310 . 2311) (nil fontified nil 2309 . 2310) (nil fontified nil 2305 . 2309) (nil fontified nil 2304 . 2305) (nil fontified nil 2289 . 2304) (nil fontified nil 2285 . 2289) (nil fontified nil 2284 . 2285) (nil fontified nil 2282 . 2284) (nil fontified nil 2279 . 2282) (nil fontified nil 2276 . 2279) (nil fontified nil 2268 . 2276) (nil fontified nil 2267 . 2268) (nil fontified nil 2266 . 2267) (nil fontified nil 2262 . 2266) (nil fontified nil 2261 . 2262) (nil fontified nil 2240 . 2261) (nil fontified nil 2239 . 2240) (nil fontified nil 2238 . 2239) (nil fontified nil 2237 . 2238) (nil fontified nil 2236 . 2237) (nil fontified nil 2235 . 2236) (nil fontified nil 2234 . 2235) (nil fontified nil 2228 . 2234) (nil fontified nil 2220 . 2228) (nil fontified nil 2219 . 2220) (nil fontified nil 2218 . 2219) (nil fontified nil 2217 . 2218) (nil fontified nil 2211 . 2217) (nil fontified nil 2191 . 2211) (nil fontified nil 2190 . 2191) (nil fontified nil 2189 . 2190) (nil fontified nil 2177 . 2189) (nil fontified nil 2176 . 2177) (nil fontified nil 2171 . 2176) (nil fontified nil 2159 . 2171) (nil fontified nil 2151 . 2159) (nil fontified nil 2147 . 2151) (nil fontified nil 2146 . 2147) (nil fontified nil 2144 . 2146) (nil fontified nil 2143 . 2144) (nil fontified nil 2140 . 2143) (nil fontified nil 2134 . 2140) (nil fontified nil 2132 . 2134) (nil fontified nil 2124 . 2132) (nil fontified nil 2122 . 2124) (nil fontified nil 2118 . 2122) (nil fontified nil 2117 . 2118) (nil fontified nil 2116 . 2117) (nil fontified nil 2115 . 2116) (nil fontified nil 2114 . 2115) (nil fontified nil 2113 . 2114) (nil fontified nil 2107 . 2113) (nil fontified nil 2103 . 2107) (nil fontified nil 2102 . 2103) (nil fontified nil 2094 . 2102) (nil fontified nil 2091 . 2094) (nil fontified nil 2090 . 2091) (nil fontified nil 2087 . 2090) (2087 . 2401)) nil (25595 56430 536680 385000) 0 nil])
([nil nil ((1900 . 1911)) ((#("           " 0 8 (fontified t) 8 11 (fontified t)) . 1900) (undo-tree-id7340 . -8) (undo-tree-id7341 . -8) (undo-tree-id7342 . -8) (undo-tree-id7343 . -8) (undo-tree-id7344 . -8) (undo-tree-id7345 . -8) (undo-tree-id7346 . -8) (undo-tree-id7347 . -8) (undo-tree-id7348 . -8) (undo-tree-id7349 . -8) (undo-tree-id7350 . -8) (undo-tree-id7351 . -8) (undo-tree-id7352 . -8) (undo-tree-id7353 . -8) (undo-tree-id7354 . -8) (undo-tree-id7355 . -8) (undo-tree-id7356 . -8) (undo-tree-id7357 . -8) (undo-tree-id7358 . -8) (undo-tree-id7359 . -8) (undo-tree-id7360 . -8) (undo-tree-id7361 . -8) (undo-tree-id7362 . -8) (undo-tree-id7363 . -8) (undo-tree-id7364 . -8) (undo-tree-id7365 . -8) (undo-tree-id7366 . -8) (undo-tree-id7367 . -8) (undo-tree-id7368 . -8) (undo-tree-id7369 . -8) (undo-tree-id7370 . -8) (undo-tree-id7371 . -8) (undo-tree-id7372 . -8) (undo-tree-id7373 . -8) (undo-tree-id7374 . -8) (undo-tree-id7375 . -8) (undo-tree-id7376 . -8) (undo-tree-id7377 . -8) (undo-tree-id7378 . -8) (undo-tree-id7379 . -8) (undo-tree-id7380 . -8) (undo-tree-id7381 . -8) (undo-tree-id7382 . -8) (undo-tree-id7383 . -8) (undo-tree-id7384 . -8) (undo-tree-id7385 . -8) (undo-tree-id7386 . -8) (undo-tree-id7387 . -8) (undo-tree-id7388 . -8) (undo-tree-id7389 . -8) (undo-tree-id7390 . -8) (undo-tree-id7391 . -8) (undo-tree-id7392 . -8) (undo-tree-id7393 . -8) (undo-tree-id7394 . -8) (undo-tree-id7395 . -8) (undo-tree-id7396 . -8) (undo-tree-id7397 . -8) (undo-tree-id7398 . -8) (undo-tree-id7399 . -8) (undo-tree-id7400 . -8) (undo-tree-id7401 . -8) (undo-tree-id7402 . -8) (undo-tree-id7403 . -8) (undo-tree-id7404 . -8) (undo-tree-id7405 . -8) (undo-tree-id7406 . -8) (undo-tree-id7407 . -8) (undo-tree-id7408 . -8) (undo-tree-id7409 . -8) (undo-tree-id7410 . -8) (undo-tree-id7411 . -8) (undo-tree-id7412 . -8) (undo-tree-id7413 . -8) (undo-tree-id7414 . -8) (undo-tree-id7415 . -8) (undo-tree-id7416 . -8) (undo-tree-id7417 . -8) (undo-tree-id7418 . -8) (undo-tree-id7419 . -8) (undo-tree-id7420 . -8) (undo-tree-id7421 . -8) (undo-tree-id7422 . -8) (undo-tree-id7423 . -8) (undo-tree-id7424 . -8) (undo-tree-id7425 . -8) (undo-tree-id7426 . -8) (undo-tree-id7427 . -8) (undo-tree-id7428 . -8) (undo-tree-id7429 . -8) (undo-tree-id7430 . -8) (undo-tree-id7431 . -8) (undo-tree-id7432 . -8) (undo-tree-id7433 . -8) (undo-tree-id7434 . -8) (undo-tree-id7435 . -8) (undo-tree-id7436 . -8) (undo-tree-id7437 . -8) (undo-tree-id7438 . -8) (undo-tree-id7439 . -8) (undo-tree-id7440 . -8) (undo-tree-id7441 . -8) (undo-tree-id7442 . -8) (undo-tree-id7443 . -8) (undo-tree-id7444 . -8) (undo-tree-id7445 . -8) (undo-tree-id7446 . -8) (undo-tree-id7447 . -8) (undo-tree-id7448 . -8) (undo-tree-id7449 . -8) (undo-tree-id7450 . -8) (undo-tree-id7451 . -8) (undo-tree-id7452 . -8) (undo-tree-id7453 . -8) (undo-tree-id7454 . -8) (undo-tree-id7455 . -8) (undo-tree-id7456 . -8) (undo-tree-id7457 . -8) (undo-tree-id7458 . -8) (undo-tree-id7459 . -8) (undo-tree-id7460 . -8) (undo-tree-id7461 . -8) (undo-tree-id7462 . -8) (undo-tree-id7463 . -8) (undo-tree-id7464 . -8) (undo-tree-id7465 . -8) (undo-tree-id7466 . -8) (undo-tree-id7467 . -8) (undo-tree-id7468 . -8) (undo-tree-id7469 . -8) (undo-tree-id7470 . -8) (undo-tree-id7471 . -8) (undo-tree-id7472 . -8) (undo-tree-id7473 . -8) (undo-tree-id7474 . -8) (undo-tree-id7475 . -8) (undo-tree-id7476 . -8) (undo-tree-id7477 . -8) (undo-tree-id7478 . -8) (undo-tree-id7479 . -8) (undo-tree-id7480 . -8) (undo-tree-id7481 . -8) (undo-tree-id7482 . -8) (undo-tree-id7483 . -8) (undo-tree-id7484 . -8) (undo-tree-id7485 . -11) (undo-tree-id7486 . -11) (undo-tree-id7487 . -11) (undo-tree-id7488 . -11) (undo-tree-id7489 . -11) (undo-tree-id7490 . -11) (undo-tree-id7491 . -11) (undo-tree-id7492 . -11) (undo-tree-id7493 . -11) (undo-tree-id7494 . -11) (undo-tree-id7495 . -11) (undo-tree-id7496 . -11) (undo-tree-id7497 . -11) (undo-tree-id7498 . -11) (undo-tree-id7499 . -11) (undo-tree-id7500 . -11) (undo-tree-id7501 . -11) (undo-tree-id7502 . -11) (undo-tree-id7503 . -11) (undo-tree-id7504 . -11) (undo-tree-id7505 . -11) (undo-tree-id7506 . -11) (undo-tree-id7507 . -11) (undo-tree-id7508 . -11) (undo-tree-id7509 . -11)) (25595 56407 781381 501000) 0 nil])
([nil nil ((#("d" 0 1 (face font-lock-function-name-face fontified t)) . -2100) (undo-tree-id7511 . -1) 2101) nil (25595 56430 536671 819000) 0 nil])
([nil nil ((#("   " 0 3 (fontified t)) . -1908) (undo-tree-id7089 . -3) 1911) ((1908 . 1911)) (25595 56407 75992 202000) 0 nil])
([nil nil ((2100 . 2101)) nil (25595 56430 536657 903000) 0 nil])
([nil nil ((1908 . 1921)) ((#("def traverse_" 0 3 (face font-lock-keyword-face fontified t) 3 4 (fontified t) 4 13 (face font-lock-function-name-face fontified t)) . 1908) (undo-tree-id7299 . -13) (undo-tree-id7300 . -13) (undo-tree-id7301 . -13) (undo-tree-id7302 . -13) (undo-tree-id7303 . -13) (undo-tree-id7304 . -13) (undo-tree-id7305 . -13) (undo-tree-id7306 . -13) (undo-tree-id7307 . -13) (undo-tree-id7308 . -13) (undo-tree-id7309 . -13) (undo-tree-id7310 . -13) (undo-tree-id7311 . -13) (undo-tree-id7312 . -13) (undo-tree-id7313 . -13) (undo-tree-id7314 . -13) (undo-tree-id7315 . -13) (undo-tree-id7316 . -13) (undo-tree-id7317 . -13) (undo-tree-id7318 . -13) (undo-tree-id7319 . -13) (undo-tree-id7320 . -13) (undo-tree-id7321 . -13) (undo-tree-id7322 . -13) (undo-tree-id7323 . -13) (undo-tree-id7324 . -13) (undo-tree-id7325 . -13) (undo-tree-id7326 . -13) (undo-tree-id7327 . -13) (undo-tree-id7328 . -13) (undo-tree-id7329 . -13) (undo-tree-id7330 . -13) (undo-tree-id7331 . -13) (undo-tree-id7332 . -13) (undo-tree-id7333 . -13) (undo-tree-id7334 . -13) (undo-tree-id7335 . -13) (undo-tree-id7336 . -13) (undo-tree-id7337 . -13) (undo-tree-id7338 . -13) (undo-tree-id7339 . -13)) (25595 56406 466451 289000) 0 nil])
([nil nil ((1918 . 1922) (t 25595 56430 555310 0)) nil (25595 56462 957585 568000) 0 nil])
([nil nil ((1921 . 1940)) ((#("df_inner(self, node" 0 8 (face font-lock-function-name-face fontified t) 8 9 (face (rainbow-delimiters-depth-1-face) fontified t) 9 13 (face font-lock-keyword-face fontified t) 13 19 (fontified t)) . 1921) (undo-tree-id7278 . -19) (undo-tree-id7279 . -19) (undo-tree-id7280 . -19) (undo-tree-id7281 . -19) (undo-tree-id7282 . -19) (undo-tree-id7283 . -19) (undo-tree-id7284 . -19) (undo-tree-id7285 . -19) (undo-tree-id7286 . -19) (undo-tree-id7287 . -19) (undo-tree-id7288 . -19) (undo-tree-id7289 . -19) (undo-tree-id7290 . -19) (undo-tree-id7291 . -19) (undo-tree-id7292 . -19) (undo-tree-id7293 . -19) (undo-tree-id7294 . -19) (undo-tree-id7295 . -19) (undo-tree-id7296 . -19) (undo-tree-id7297 . -19) (undo-tree-id7298 . -19)) (25595 56405 728388 403000) 0 nil])
([nil nil ((#("        result.append(node)" 0 21 (fontified t) 21 22 (face (rainbow-delimiters-depth-1-face) fontified t) 22 26 (fontified t) 26 27 (face (rainbow-delimiters-depth-1-face) fontified t)) . 1924)) nil (25595 56462 957584 867000) 0 nil])
([nil nil ((1940 . 1951)) ((#(", visited):" 0 9 (fontified t) 9 10 (face (rainbow-delimiters-depth-1-face) fontified t) 10 11 (fontified t)) . 1940)) (25595 56405 125021 720000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 1924)) nil (25595 56462 957584 246000) 0 nil])
([nil nil ((1960 . 1964) 1971) ((#("    " 0 4 (fontified t)) . 1960)) (25595 56404 541632 904000) 0 nil])
([nil nil ((2214 . 2218)) nil (25595 56462 957583 414000) 0 nil])
([nil nil ((1984 . 1988) 1999) ((#("    " 0 4 (fontified t)) . 1984)) (25595 56403 846445 955000) 0 nil])
([nil nil ((#("        result.append(node)" 0 21 (fontified t) 21 22 (face (rainbow-delimiters-depth-1-face) fontified t) 22 26 (fontified t) 26 27 (face (rainbow-delimiters-depth-1-face) fontified t)) . 2220) (undo-tree-id7514 . -22) (undo-tree-id7515 . -22) (undo-tree-id7516 . -22) (undo-tree-id7517 . -22) (undo-tree-id7518 . -22) (undo-tree-id7519 . -22) (undo-tree-id7520 . -22) (undo-tree-id7521 . -27)) nil (25595 56462 957581 761000) 0 nil])
([nil nil ((2016 . 2020) 2035) ((#("    " 0 4 (fontified t)) . 2016) (undo-tree-id7268 . -4) (undo-tree-id7269 . -4) (undo-tree-id7270 . -4) (undo-tree-id7271 . -4) (undo-tree-id7272 . -4) (undo-tree-id7273 . -4) (undo-tree-id7274 . -4) (undo-tree-id7275 . -4) (undo-tree-id7276 . -4) (undo-tree-id7277 . -4)) (25595 56403 21637 882000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 2220) (undo-tree-id7513 . -1)) nil (25595 56462 957573 565000) 0 nil])
([nil nil ((2056 . 2072) (#("            " 0 12 (fontified t)) . 2056) 2087) ((2056 . 2068) (#("                " 0 16 (fontified t)) . 2056) (undo-tree-id7267 . -16)) (25595 56400 265650 598000) 0 nil])
([nil nil ((1763 . 1767) (#("    " 0 4 (fontified nil)) . 1762) (undo-tree-id7591 . -4) (1761 . 1767) (t 25595 56462 975909 300000)) nil (25595 56620 79055 125000) 0 nil])
([nil nil ((2107 . 2123) (#("        " 0 8 (fontified t)) . 2107) 2142) ((2107 . 2115) (#("                " 0 12 (fontified t) 12 16 (fontified t)) . 2107) (undo-tree-id7262 . -16) (undo-tree-id7263 . -16) (undo-tree-id7264 . -16) (undo-tree-id7265 . -16) (undo-tree-id7266 . -16)) (25595 56399 130542 655000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -1763) (undo-tree-id7590 . -4) 1767) nil (25595 56620 79053 712000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -2119) 2150) ((2119 . 2123)) (25595 56396 929796 882000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -1761) (undo-tree-id7588 . -1) (#("
" 0 1 (fontified t)) . -1762) (undo-tree-id7589 . -1) 1763) nil (25595 56620 79052 560000) 0 nil])
([nil nil ((1899 . 1908)) ((#("
        " 0 1 (fontified t) 1 9 (fontified t)) . 1899) (undo-tree-id7143 . -9) (undo-tree-id7144 . -9) (undo-tree-id7145 . -9) (undo-tree-id7146 . -9) (undo-tree-id7147 . -9) (undo-tree-id7148 . -9) (undo-tree-id7149 . -9) (undo-tree-id7150 . -9) (undo-tree-id7151 . -9) (undo-tree-id7152 . -9) (undo-tree-id7153 . -9) (undo-tree-id7154 . -9) (undo-tree-id7155 . -9) (undo-tree-id7156 . -9) (undo-tree-id7157 . -9) (undo-tree-id7158 . -9) (undo-tree-id7159 . -9) (undo-tree-id7160 . -9) (undo-tree-id7161 . -9) (undo-tree-id7162 . -9) (undo-tree-id7163 . -9) (undo-tree-id7164 . -9) (undo-tree-id7165 . -9) (undo-tree-id7166 . -9) (undo-tree-id7167 . -9) (undo-tree-id7168 . -9) (undo-tree-id7169 . -9) (undo-tree-id7170 . -9) (undo-tree-id7171 . -9) (undo-tree-id7172 . -9) (undo-tree-id7173 . -9) (undo-tree-id7174 . -9) (undo-tree-id7175 . -9) (undo-tree-id7176 . -9) (undo-tree-id7177 . -9) (undo-tree-id7178 . -9) (undo-tree-id7179 . -9) (undo-tree-id7180 . -9) (undo-tree-id7181 . -9) (undo-tree-id7182 . -9) (undo-tree-id7183 . -9) (undo-tree-id7184 . -9) (undo-tree-id7185 . -9) (undo-tree-id7186 . -9) (undo-tree-id7187 . -9) (undo-tree-id7188 . -9) (undo-tree-id7189 . -9) (undo-tree-id7190 . -9) (undo-tree-id7191 . -9) (undo-tree-id7192 . -9) (undo-tree-id7193 . -9) (undo-tree-id7194 . -9) (undo-tree-id7195 . -9) (undo-tree-id7196 . -9) (undo-tree-id7197 . -9) (undo-tree-id7198 . -9) (undo-tree-id7199 . -9) (undo-tree-id7200 . -9) (undo-tree-id7201 . -9) (undo-tree-id7202 . -9) (undo-tree-id7203 . -9) (undo-tree-id7204 . -9) (undo-tree-id7205 . -9) (undo-tree-id7206 . -9) (undo-tree-id7207 . -9) (undo-tree-id7208 . -9) (undo-tree-id7209 . -9) (undo-tree-id7210 . -9) (undo-tree-id7211 . -9) (undo-tree-id7212 . -9) (undo-tree-id7213 . -9) (undo-tree-id7214 . -9) (undo-tree-id7215 . -9) (undo-tree-id7216 . -9) (undo-tree-id7217 . -9) (undo-tree-id7218 . -9) (undo-tree-id7219 . -9) (undo-tree-id7220 . -9) (undo-tree-id7221 . -9) (undo-tree-id7222 . -9) (undo-tree-id7223 . -9) (undo-tree-id7224 . -9) (undo-tree-id7225 . -9) (undo-tree-id7226 . -9) (undo-tree-id7227 . -9) (undo-tree-id7228 . -9) (undo-tree-id7229 . -9) (undo-tree-id7230 . -9) (undo-tree-id7231 . -9) (undo-tree-id7232 . -9) (undo-tree-id7233 . -9) (undo-tree-id7234 . -9) (undo-tree-id7235 . -9) (undo-tree-id7236 . -9) (undo-tree-id7237 . -9) (undo-tree-id7238 . -1) (undo-tree-id7239 . -9) (undo-tree-id7240 . -9) (undo-tree-id7241 . -9) (undo-tree-id7242 . -9) (undo-tree-id7243 . -9) (undo-tree-id7244 . -9) (undo-tree-id7245 . -9) (undo-tree-id7246 . -9) (undo-tree-id7247 . -9) (undo-tree-id7248 . -9) (undo-tree-id7249 . -9) (undo-tree-id7250 . -9) (undo-tree-id7251 . -9) (undo-tree-id7252 . -9) (undo-tree-id7253 . -9) (undo-tree-id7254 . -9) (undo-tree-id7255 . -9) (undo-tree-id7256 . -9) (undo-tree-id7257 . -9) (undo-tree-id7258 . -9) (undo-tree-id7259 . -9) (undo-tree-id7260 . -9) (undo-tree-id7261 . -9)) (25595 56396 320820 719000) 0 nil])
([nil nil ((1803 . 1812)) nil (25595 56620 79050 877000) 0 nil])
([nil nil ((1908 . 1929)) ((#("return traverse_df_in" 0 6 (face font-lock-keyword-face fontified t) 6 21 (fontified t)) . 1908) (undo-tree-id7118 . -21) (undo-tree-id7119 . -21) (undo-tree-id7120 . -21) (undo-tree-id7121 . -21) (undo-tree-id7122 . -21) (undo-tree-id7123 . -21) (undo-tree-id7124 . -21) (undo-tree-id7125 . -21) (undo-tree-id7126 . -21) (undo-tree-id7127 . -21) (undo-tree-id7128 . -21) (undo-tree-id7129 . -21) (undo-tree-id7130 . -21) (undo-tree-id7131 . -21) (undo-tree-id7132 . -21) (undo-tree-id7133 . -21) (undo-tree-id7134 . -21) (undo-tree-id7135 . -21) (undo-tree-id7136 . -21) (undo-tree-id7137 . -21) (undo-tree-id7138 . -21) (undo-tree-id7139 . -21) (undo-tree-id7140 . -21) (undo-tree-id7141 . -21) (undo-tree-id7142 . -21)) (25595 56395 825281 206000) 0 nil])
([nil nil ((1812 . 1815)) nil (25595 56620 79050 606000) 0 nil])
([nil nil ((1929 . 1933)) ((#("ner(" 0 3 (fontified t) 3 4 (face (rainbow-delimiters-depth-1-face) fontified t)) . 1929) (undo-tree-id7102 . -4) (undo-tree-id7103 . -4) (undo-tree-id7104 . -4) (undo-tree-id7105 . -4) (undo-tree-id7106 . -4) (undo-tree-id7107 . -4) (undo-tree-id7108 . -4) (undo-tree-id7109 . -4) (undo-tree-id7110 . -4) (undo-tree-id7111 . -4) (undo-tree-id7112 . -4) (undo-tree-id7113 . -4) (undo-tree-id7114 . -4) (undo-tree-id7115 . -4) (undo-tree-id7116 . -4) (undo-tree-id7117 . -4)) (25595 56394 760953 918000) 0 nil])
([nil nil ((1815 . 1824)) nil (25595 56620 79050 246000) 0 nil])
([nil nil ((1933 . 1942)) ((#("node, [])" 0 6 (fontified t) 6 7 (face (rainbow-delimiters-depth-2-face) fontified t) 7 8 (face (rainbow-delimiters-depth-2-face) fontified t) 8 9 (face (rainbow-delimiters-depth-1-face) fontified t)) . 1933)) (25595 56394 125300 136000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2403 . 2404) (nil fontified nil 1824 . 2404) (1824 . 2404)) nil (25595 56620 79049 544000) 0 nil])
([nil nil ((2098 . 2115)) ((#("
                " 0 1 (fontified t) 1 17 (fontified t)) . 2098) (undo-tree-id7091 . -17) (undo-tree-id7092 . -17) (undo-tree-id7093 . -1) (undo-tree-id7094 . -17) (undo-tree-id7095 . -17) (undo-tree-id7096 . -17) (undo-tree-id7097 . -17) (undo-tree-id7098 . -17) (undo-tree-id7099 . -17) (undo-tree-id7100 . -17) (undo-tree-id7101 . -17)) (25595 56393 635052 437000) 0 nil])
([nil nil ((2404 . 2413)) nil (25595 56620 79048 362000) 0 nil])
([nil nil ((2115 . 2135)) ((#("if n not in visited:" 0 2 (face font-lock-keyword-face fontified t) 2 5 (fontified t) 5 8 (face font-lock-keyword-face fontified t) 8 9 (fontified t) 9 11 (face font-lock-keyword-face fontified t) 11 20 (fontified t)) . 2115)) (25595 56393 255510 636000) 0 nil])
([nil nil ((2413 . 2416)) nil (25595 56620 79048 41000) 0 nil])
([nil nil ((2152 . 2156) 2172) ((#("    " 0 4 (fontified t)) . 2152)) (25595 56393 255135 422000) 0 nil])
([nil nil ((#("        \"\"\"
        Input: A graph G and a starting vertex root of G

Output: Goal state. The parent links trace the shortest path back to root[8]

 1  procedure BFS(G, root) is
 2      let Q be a queue
 3      label root as explored
 4      Q.enqueue(root)
 5      while Q is not empty do
 6          v := Q.dequeue()
 7          if v is the goal then
 8              return v
 9          for all edges from v to w in G.adjacentEdges(v) do
10              if w is not labeled as explored then
11                  label w as explored
12                  w.parent := v
13                  Q.enqueue(w)
        \"\"\"" 0 8 (fontified t) 8 10 (face font-lock-doc-face fontified t) 10 11 (face font-lock-doc-face fontified t syntax-table (15)) 11 20 (face font-lock-doc-face fontified t) 20 599 (face font-lock-doc-face fontified t) 599 600 (face font-lock-doc-face rear-nonsticky t fontified t) 600 609 (face font-lock-doc-face fontified t) 609 610 (face font-lock-doc-face syntax-table (15) fontified t) 610 612 (face font-lock-doc-face fontified t)) . 1804) (undo-tree-id7586 . -612) (undo-tree-id7587 . -20)) nil (25595 56620 79047 530000) 0 nil])
nil
([nil nil ((#("
" 0 1 (fontified t)) . -1803) (undo-tree-id7583 . -1) (undo-tree-id7584 . -1) (undo-tree-id7585 . -1) 1804) nil (25595 56620 79046 138000) 0 nil])
([nil nil ((2099 . 2108)) nil (25595 56620 79044 104000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -2104) (undo-tree-id7558 . -4) (undo-tree-id7559 . -4) (undo-tree-id7560 . -4) (undo-tree-id7561 . -4) (undo-tree-id7562 . -4) (undo-tree-id7563 . -4) (undo-tree-id7564 . -4) (undo-tree-id7565 . -4) (undo-tree-id7566 . -4) (undo-tree-id7567 . -4) (undo-tree-id7568 . -4) (undo-tree-id7569 . -4) (undo-tree-id7570 . -4) (undo-tree-id7571 . -4) (undo-tree-id7572 . -4) (undo-tree-id7573 . -4) (undo-tree-id7574 . -4) (undo-tree-id7575 . -4) (undo-tree-id7576 . -4) (undo-tree-id7577 . -4) (undo-tree-id7578 . -4) (undo-tree-id7579 . -4) (undo-tree-id7580 . -4) (undo-tree-id7581 . -4) (undo-tree-id7582 . -4) 2108) nil (25595 56620 79042 661000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -2100) (undo-tree-id7522 . -4) (undo-tree-id7523 . -4) (undo-tree-id7524 . -4) (undo-tree-id7525 . -4) (undo-tree-id7526 . -4) (undo-tree-id7527 . -4) (undo-tree-id7528 . -4) (undo-tree-id7529 . -4) (undo-tree-id7530 . -4) (undo-tree-id7531 . -4) (undo-tree-id7532 . -4) (undo-tree-id7533 . -4) (undo-tree-id7534 . -4) (undo-tree-id7535 . -4) (undo-tree-id7536 . -4) (undo-tree-id7537 . -4) (undo-tree-id7538 . -4) (undo-tree-id7539 . -4) (undo-tree-id7540 . -4) (undo-tree-id7541 . -4) (undo-tree-id7542 . -4) (undo-tree-id7543 . -4) (undo-tree-id7544 . -4) (undo-tree-id7545 . -4) (undo-tree-id7546 . -4) (undo-tree-id7547 . -4) (undo-tree-id7548 . -4) (undo-tree-id7549 . -4) (undo-tree-id7550 . -4) (undo-tree-id7551 . -4) (undo-tree-id7552 . -4) (undo-tree-id7553 . -4) (undo-tree-id7554 . -4) (undo-tree-id7555 . -4) (undo-tree-id7556 . -4) (undo-tree-id7557 . -4) 2104) nil (25595 56620 79027 91000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2711 . 2712) (nil fontified nil 2710 . 2712) (nil fontified nil 2709 . 2710) (nil fontified nil 2700 . 2709) (nil fontified nil 2699 . 2700) (nil fontified nil 2120 . 2699) (nil fontified nil 2111 . 2120) (nil fontified nil 2110 . 2111) (nil fontified nil 2108 . 2110) (nil fontified nil 2100 . 2108) (2100 . 2712)) nil (25595 56620 78994 890000) 0 nil])
([nil nil ((1803 . 1812) (t 25595 56620 98016 300000)) nil (25595 56672 740104 552000) 0 nil])
([nil nil ((1812 . 1815)) nil (25595 56672 740104 41000) 0 nil])
([nil nil ((1815 . 1824)) nil (25595 56672 740103 641000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2037 . 2038) (nil fontified nil 1824 . 2038) (1824 . 2038)) nil (25595 56672 740103 99000) 0 nil])
([nil nil ((2038 . 2047)) nil (25595 56672 740102 498000) 0 nil])
([nil nil ((2047 . 2050)) nil (25595 56672 740101 947000) 0 nil])
([nil nil ((#("adjacentEdges" 0 13 (face font-lock-doc-face fontified t)) . -1926) (undo-tree-id7592 . -13) (undo-tree-id7593 . -13) (undo-tree-id7594 . -13) (undo-tree-id7595 . -13) (undo-tree-id7596 . -13) (undo-tree-id7597 . -13) (undo-tree-id7598 . -13) (undo-tree-id7599 . -13) (undo-tree-id7600 . -13) (undo-tree-id7601 . -13) (undo-tree-id7602 . -13) (undo-tree-id7603 . -13) (undo-tree-id7604 . -13) (undo-tree-id7605 . -13) (undo-tree-id7606 . -13) (undo-tree-id7607 . -13) (undo-tree-id7608 . -13) (undo-tree-id7609 . -13) (undo-tree-id7610 . -13) (undo-tree-id7611 . -13) (undo-tree-id7612 . -13) (undo-tree-id7613 . -13) (undo-tree-id7614 . -13) (undo-tree-id7615 . -13) (undo-tree-id7616 . -13) (undo-tree-id7617 . -13) (undo-tree-id7618 . -13) (undo-tree-id7619 . -13) (undo-tree-id7620 . -13) (undo-tree-id7621 . -13) (undo-tree-id7622 . -13) (undo-tree-id7623 . -13) (undo-tree-id7624 . -13) (undo-tree-id7625 . -13) 1939) nil (25595 56672 740099 833000) 0 nil])
([nil nil ((1926 . 1936)) nil (25595 56672 740072 361000) 0 nil])
([nil nil ((#("r" 0 1 (face font-lock-variable-name-face fontified t)) . -3061) (undo-tree-id7759 . -1) (#("e" 0 1 (face font-lock-variable-name-face fontified t)) . -3062) (undo-tree-id7760 . -1) (#("s" 0 1 (face font-lock-variable-name-face fontified t)) . -3063) (undo-tree-id7761 . -1) (#("u" 0 1 (face font-lock-variable-name-face fontified t)) . -3064) (undo-tree-id7762 . -1) (#("l" 0 1 (face font-lock-variable-name-face fontified t)) . -3065) (undo-tree-id7763 . -1) (#("t" 0 1 (face font-lock-variable-name-face fontified t)) . -3066) (undo-tree-id7764 . -1) 3067 (t 25595 56672 752630 500000)) nil (25595 57132 932348 690000) 0 nil])
([nil nil ((3061 . 3066)) nil (25595 57132 932344 873000) 0 nil])
([nil nil ((3075 . 3084)) nil (25595 57132 932344 592000) 0 nil])
([nil nil ((3084 . 3099)) nil (25595 57132 932344 322000) 0 nil])
([nil nil ((3099 . 3108)) nil (25595 57132 932344 61000) 0 nil])
([nil nil ((3108 . 3114)) nil (25595 57132 932343 791000) 0 nil])
([nil nil ((3114 . 3120)) nil (25595 57132 932343 530000) 0 nil])
([nil nil ((3120 . 3133)) nil (25595 57132 932343 219000) 0 nil])
([nil nil ((3133 . 3148)) nil (25595 57132 932342 799000) 0 nil])
([nil nil ((3148 . 3161)) nil (25595 57132 932342 378000) 0 nil])
([nil nil ((3161 . 3175)) nil (25595 57132 932342 97000) 0 nil])
([nil nil ((3175 . 3190)) nil (25595 57132 932341 817000) 0 nil])
([nil nil ((3190 . 3211)) nil (25595 57132 932341 546000) 0 nil])
([nil nil ((3190 . 3193)) nil (25595 57132 932341 286000) 0 nil])
([nil nil ((3193 . 3210)) nil (25595 57132 932340 925000) 0 nil])
([nil nil ((3210 . 3229)) nil (25595 57132 932340 584000) 0 nil])
([nil nil ((3229 . 3250)) nil (25595 57132 932340 224000) 0 nil])
([nil nil ((3250 . 3265)) nil (25595 57132 932339 803000) 0 nil])
([nil nil ((3265 . 3266)) nil (25595 57132 932339 392000) 0 nil])
([nil nil ((3266 . 3287)) nil (25595 57132 932338 871000) 0 nil])
([nil nil ((3287 . 3293)) nil (25595 57132 932338 500000) 0 nil])
([nil nil ((3147 . 3148)) nil (25595 57132 932338 170000) 0 nil])
([nil nil ((3294 . 3303)) nil (25595 57132 932337 799000) 0 nil])
([nil nil ((#("        for n in self.neighbours_out(node):" 0 8 (fontified t) 8 11 (face font-lock-keyword-face fontified t) 11 14 (fontified t) 14 16 (face font-lock-keyword-face fontified t) 16 17 (fontified t) 17 21 (face font-lock-keyword-face fontified t) 21 36 (fontified t) 36 37 (face (rainbow-delimiters-depth-1-face) fontified t) 37 41 (fontified t) 41 42 (face (rainbow-delimiters-depth-1-face) fontified t) 42 43 (fontified t)) . 3325) (undo-tree-id7731 . -35) (undo-tree-id7732 . -35) (undo-tree-id7733 . -35) (undo-tree-id7734 . -35) (undo-tree-id7735 . -35) (undo-tree-id7736 . -35) (undo-tree-id7737 . -35) (undo-tree-id7738 . -35) (undo-tree-id7739 . -35) (undo-tree-id7740 . -35) (undo-tree-id7741 . -35) (undo-tree-id7742 . -35) (undo-tree-id7743 . -35) (undo-tree-id7744 . -35) (undo-tree-id7745 . -43) (undo-tree-id7746 . -8) (undo-tree-id7747 . -8) (undo-tree-id7748 . -8) (undo-tree-id7749 . -8) (undo-tree-id7750 . -43) (undo-tree-id7751 . -43) (undo-tree-id7752 . -35) (undo-tree-id7753 . -35) (undo-tree-id7754 . -35) (undo-tree-id7755 . -35) (undo-tree-id7756 . -35) (undo-tree-id7757 . -35) (undo-tree-id7758 . -43)) nil (25595 57132 932336 767000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 3325) (undo-tree-id7730 . -1)) nil (25595 57132 932326 728000) 0 nil])
([nil nil ((#("            result.extend(self.traverse_df(n))" 0 12 (fontified t) 12 25 (fontified t) 25 26 (face (rainbow-delimiters-depth-1-face) fontified t) 26 30 (face font-lock-keyword-face fontified t) 30 42 (fontified t) 42 43 (face (rainbow-delimiters-depth-2-face) fontified t) 43 44 (fontified t) 44 45 (face (rainbow-delimiters-depth-2-face) fontified t) 45 46 (face (rainbow-delimiters-depth-1-face) fontified t)) . 3325) (undo-tree-id7718 . -35) (undo-tree-id7719 . -35) (undo-tree-id7720 . -35) (undo-tree-id7721 . -35) (undo-tree-id7722 . -35) (undo-tree-id7723 . -35) (undo-tree-id7724 . -35) (undo-tree-id7725 . -46) (undo-tree-id7726 . -46) (undo-tree-id7727 . -12) (undo-tree-id7728 . -46) (undo-tree-id7729 . -46)) nil (25595 57132 932325 556000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 3325) (undo-tree-id7717 . -1)) nil (25595 57132 932319 514000) 0 nil])
([nil nil ((#("        return list(dict.fromkeys(result))" 0 8 (fontified t) 8 14 (face font-lock-keyword-face fontified t) 14 15 (fontified t) 15 19 (face font-lock-builtin-face fontified t) 19 20 (face (rainbow-delimiters-depth-1-face) fontified t) 20 24 (face font-lock-builtin-face fontified t) 24 25 (fontified t) 25 33 (fontified t) 33 34 (face (rainbow-delimiters-depth-2-face) fontified t) 34 40 (fontified t) 40 41 (face (rainbow-delimiters-depth-2-face) fontified t) 41 42 (face (rainbow-delimiters-depth-1-face) fontified t rear-nonsticky t)) . 3325) (undo-tree-id7712 . -42) (undo-tree-id7713 . -42) (undo-tree-id7714 . -8) (undo-tree-id7715 . -42) (undo-tree-id7716 . -42)) nil (25595 57132 932318 232000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 3325) (undo-tree-id7711 . -1)) nil (25595 57132 932314 214000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 3325) (undo-tree-id7626 . -1) (undo-tree-id7627 . -1) (undo-tree-id7628 . -1) (undo-tree-id7629 . -1) (undo-tree-id7630 . -1) (undo-tree-id7631 . -1) (undo-tree-id7632 . -1) (undo-tree-id7633 . -1) (undo-tree-id7634 . -1) (undo-tree-id7635 . -1) (undo-tree-id7636 . -1) (undo-tree-id7637 . -1) (undo-tree-id7638 . -1) (undo-tree-id7639 . -1) (undo-tree-id7640 . -1) (undo-tree-id7641 . -1) (undo-tree-id7642 . -1) (undo-tree-id7643 . -1) (undo-tree-id7644 . -1) (undo-tree-id7645 . -1) (undo-tree-id7646 . -1) (undo-tree-id7647 . -1) (undo-tree-id7648 . -1) (undo-tree-id7649 . -1) (undo-tree-id7650 . -1) (undo-tree-id7651 . -1) (undo-tree-id7652 . -1) (undo-tree-id7653 . -1) (undo-tree-id7654 . -1) (undo-tree-id7655 . -1) (undo-tree-id7656 . -1) (undo-tree-id7657 . -1) (undo-tree-id7658 . -1) (undo-tree-id7659 . -1) (undo-tree-id7660 . -1) (undo-tree-id7661 . -1) (undo-tree-id7662 . -1) (undo-tree-id7663 . -1) (undo-tree-id7664 . -1) (undo-tree-id7665 . -1) (undo-tree-id7666 . -1) (undo-tree-id7667 . -1) (undo-tree-id7668 . -1) (undo-tree-id7669 . -1) (undo-tree-id7670 . -1) (undo-tree-id7671 . -1) (undo-tree-id7672 . -1) (undo-tree-id7673 . -1) (undo-tree-id7674 . -1) (undo-tree-id7675 . -1) (undo-tree-id7676 . -1) (undo-tree-id7677 . -1) (undo-tree-id7678 . -1) (undo-tree-id7679 . -1) (undo-tree-id7680 . -1) (undo-tree-id7681 . -1) (undo-tree-id7682 . -1) (undo-tree-id7683 . -1) (undo-tree-id7684 . -1) (undo-tree-id7685 . -1) (undo-tree-id7686 . -1) (undo-tree-id7687 . -1) (undo-tree-id7688 . -1) (undo-tree-id7689 . -1) (undo-tree-id7690 . -1) (undo-tree-id7691 . -1) (undo-tree-id7692 . -1) (undo-tree-id7693 . -1) (undo-tree-id7694 . -1) (undo-tree-id7695 . -1) (undo-tree-id7696 . -1) (undo-tree-id7697 . -1) (undo-tree-id7698 . -1) (undo-tree-id7699 . -1) (undo-tree-id7700 . -1) (undo-tree-id7701 . -1) (undo-tree-id7702 . -1) (undo-tree-id7703 . -1) (undo-tree-id7704 . -1) (undo-tree-id7705 . -1) (undo-tree-id7706 . -1) (undo-tree-id7707 . -1) (undo-tree-id7708 . -1) (undo-tree-id7709 . -1) (undo-tree-id7710 . -1)) nil (25595 57132 932308 964000) 0 nil])
([nil nil ((3303 . 3324) (t 25595 57132 946321 100000)) nil (25595 57169 538107 81000) 0 nil])
([nil nil ((3324 . 3337)) nil (25595 57169 538106 309000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -3320) (undo-tree-id7872 . -4) (undo-tree-id7873 . -4) (undo-tree-id7874 . -4) (undo-tree-id7875 . -4) (undo-tree-id7876 . -4) (undo-tree-id7877 . -4) (undo-tree-id7878 . -4) (undo-tree-id7879 . -4) (undo-tree-id7880 . -4) (undo-tree-id7881 . -4) (undo-tree-id7882 . -4) (undo-tree-id7883 . -4) (undo-tree-id7884 . -4) (undo-tree-id7885 . -4) (undo-tree-id7886 . -4) (undo-tree-id7887 . -4) (undo-tree-id7888 . -4) (undo-tree-id7889 . -4) (undo-tree-id7890 . -4) (undo-tree-id7891 . -4) (undo-tree-id7892 . -4) (undo-tree-id7893 . -4) (undo-tree-id7894 . -4) (undo-tree-id7895 . -4) (undo-tree-id7896 . -4) (undo-tree-id7897 . -4) (undo-tree-id7898 . -4) (undo-tree-id7899 . -4) (undo-tree-id7900 . -4) (undo-tree-id7901 . -4) (undo-tree-id7902 . -4) (undo-tree-id7903 . -4) (undo-tree-id7904 . -4) (undo-tree-id7905 . -4) (undo-tree-id7906 . -4) (undo-tree-id7907 . -4) (undo-tree-id7908 . -4) (undo-tree-id7909 . -4) (undo-tree-id7910 . -4) (undo-tree-id7911 . -4) (undo-tree-id7912 . -4) (undo-tree-id7913 . -4) (undo-tree-id7914 . -4) (undo-tree-id7915 . -4) (undo-tree-id7916 . -4) (undo-tree-id7917 . -4) (undo-tree-id7918 . -4) (undo-tree-id7919 . -4) (undo-tree-id7920 . -4) 3337) nil (25595 57169 538104 376000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -3316) (undo-tree-id7820 . -4) (undo-tree-id7821 . -4) (undo-tree-id7822 . -4) (undo-tree-id7823 . -4) (undo-tree-id7824 . -4) (undo-tree-id7825 . -4) (undo-tree-id7826 . -4) (undo-tree-id7827 . -4) (undo-tree-id7828 . -4) (undo-tree-id7829 . -4) (undo-tree-id7830 . -4) (undo-tree-id7831 . -4) (undo-tree-id7832 . -4) (undo-tree-id7833 . -4) (undo-tree-id7834 . -4) (undo-tree-id7835 . -4) (undo-tree-id7836 . -4) (undo-tree-id7837 . -4) (undo-tree-id7838 . -4) (undo-tree-id7839 . -4) (undo-tree-id7840 . -4) (undo-tree-id7841 . -4) (undo-tree-id7842 . -4) (undo-tree-id7843 . -4) (undo-tree-id7844 . -4) (undo-tree-id7845 . -4) (undo-tree-id7846 . -4) (undo-tree-id7847 . -4) (undo-tree-id7848 . -4) (undo-tree-id7849 . -4) (undo-tree-id7850 . -4) (undo-tree-id7851 . -4) (undo-tree-id7852 . -4) (undo-tree-id7853 . -4) (undo-tree-id7854 . -4) (undo-tree-id7855 . -4) (undo-tree-id7856 . -4) (undo-tree-id7857 . -4) (undo-tree-id7858 . -4) (undo-tree-id7859 . -4) (undo-tree-id7860 . -4) (undo-tree-id7861 . -4) (undo-tree-id7862 . -4) (undo-tree-id7863 . -4) (undo-tree-id7864 . -4) (undo-tree-id7865 . -4) (undo-tree-id7866 . -4) (undo-tree-id7867 . -4) (undo-tree-id7868 . -4) (undo-tree-id7869 . -4) (undo-tree-id7870 . -4) (undo-tree-id7871 . -4) 3333) nil (25595 57169 538085 450000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -3312) (undo-tree-id7765 . -4) (undo-tree-id7766 . -4) (undo-tree-id7767 . -4) (undo-tree-id7768 . -4) (undo-tree-id7769 . -4) (undo-tree-id7770 . -4) (undo-tree-id7771 . -4) (undo-tree-id7772 . -4) (undo-tree-id7773 . -4) (undo-tree-id7774 . -4) (undo-tree-id7775 . -4) (undo-tree-id7776 . -4) (undo-tree-id7777 . -4) (undo-tree-id7778 . -4) (undo-tree-id7779 . -4) (undo-tree-id7780 . -4) (undo-tree-id7781 . -4) (undo-tree-id7782 . -4) (undo-tree-id7783 . -4) (undo-tree-id7784 . -4) (undo-tree-id7785 . -4) (undo-tree-id7786 . -4) (undo-tree-id7787 . -4) (undo-tree-id7788 . -4) (undo-tree-id7789 . -4) (undo-tree-id7790 . -4) (undo-tree-id7791 . -4) (undo-tree-id7792 . -4) (undo-tree-id7793 . -4) (undo-tree-id7794 . -4) (undo-tree-id7795 . -4) (undo-tree-id7796 . -4) (undo-tree-id7797 . -4) (undo-tree-id7798 . -4) (undo-tree-id7799 . -4) (undo-tree-id7800 . -4) (undo-tree-id7801 . -4) (undo-tree-id7802 . -4) (undo-tree-id7803 . -4) (undo-tree-id7804 . -4) (undo-tree-id7805 . -4) (undo-tree-id7806 . -4) (undo-tree-id7807 . -4) (undo-tree-id7808 . -4) (undo-tree-id7809 . -4) (undo-tree-id7810 . -4) (undo-tree-id7811 . -4) (undo-tree-id7812 . -4) (undo-tree-id7813 . -4) (undo-tree-id7814 . -4) (undo-tree-id7815 . -4) (undo-tree-id7816 . -4) (undo-tree-id7817 . -4) (undo-tree-id7818 . -4) (undo-tree-id7819 . -4) 3329) nil (25595 57169 537983 65000) 0 nil])
([nil nil ((3494 . 3495) (t 25595 57169 549126 300000)) nil (25595 57777 357393 345000) 0 nil])
([nil nil ((3495 . 3502)) nil (25595 57777 357392 704000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3868 . 3869) (nil fontified nil 3502 . 3869) (3502 . 3869)) nil (25595 57777 357392 83000) 0 nil])
([nil nil ((#("a" 0 1 (face font-lock-variable-name-face fontified t)) . 3499) (#(" " 0 1 (fontified t)) . 3499) (undo-tree-id7921 . -1) (undo-tree-id7922 . -1) (undo-tree-id7923 . -1) (undo-tree-id7924 . -1) (undo-tree-id7925 . -1) (undo-tree-id7926 . -1) (undo-tree-id7927 . -1) (undo-tree-id7928 . -1) (undo-tree-id7929 . -1) (undo-tree-id7930 . -1) (undo-tree-id7931 . -1) (undo-tree-id7932 . -1) (undo-tree-id7933 . -1) (undo-tree-id7934 . -1) (undo-tree-id7935 . -1) (undo-tree-id7936 . -1) (undo-tree-id7937 . -1) (undo-tree-id7938 . -1) (undo-tree-id7939 . -1) (undo-tree-id7940 . -1) (undo-tree-id7941 . -1) (undo-tree-id7942 . -1) (undo-tree-id7943 . -1) (undo-tree-id7944 . -1) (#("=" 0 1 (face font-lock-operator-face fontified t)) . 3499) (undo-tree-id7945 . -1) (undo-tree-id7946 . -1) (undo-tree-id7947 . -1) (undo-tree-id7948 . -1) (undo-tree-id7949 . -1) (undo-tree-id7950 . -1) (undo-tree-id7951 . -1) (undo-tree-id7952 . -1) (undo-tree-id7953 . -1) (#(" " 0 1 (fontified t)) . 3499) (undo-tree-id7954 . -1) (undo-tree-id7955 . -1) (undo-tree-id7956 . -1) (undo-tree-id7957 . -1) (undo-tree-id7958 . -1) (undo-tree-id7959 . -1) (undo-tree-id7960 . -1) (undo-tree-id7961 . -1) (undo-tree-id7962 . -1)) nil (25595 57777 357389 177000) 0 nil])
([nil nil ((3865 . 3866) 3499) nil (25595 57777 357357 226000) 0 nil])
([nil nil ((3866 . 3867) (t 25595 57777 385424 700000)) nil (25595 57800 634206 949000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3889 . 3890) (nil fontified nil 3867 . 3890) (3867 . 3890)) nil (25595 57800 634206 268000) 0 nil])
([nil nil ((3494 . 3495)) nil (25595 57800 634205 547000) 0 nil])
([nil nil ((3495 . 3497)) nil (25595 57800 634204 965000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3566 . 3567) (nil fontified nil 3497 . 3567) (3497 . 3567)) nil (25595 57800 634203 954000) 0 nil])
([nil nil ((3963 . 3964) 3567) nil (25595 57800 634200 196000) 0 nil])
([nil nil ((3567 . 3568) (t 25595 57800 652289 400000)) nil (25595 57802 308720 499000) 0 nil])
([nil nil ((3964 . 3966) (t 25595 57802 332453 600000)) nil (25595 57854 791013 588000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4091 . 4092) (nil fontified nil 3966 . 4092) (3966 . 4092)) nil (25595 57854 791009 951000) 0 nil])
([nil nil ((3568 . 3569) (t 25595 57854 808642 900000)) nil (25595 58032 756310 62000) 0 nil])
([nil nil ((3569 . 3579)) nil (25595 58032 756309 481000) 0 nil])
([nil nil ((3579 . 3588)) nil (25595 58032 756309 200000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -3584) (undo-tree-id8410 . -1) (#("e" 0 1 (fontified t)) . -3585) (undo-tree-id8411 . -1) (#("l" 0 1 (fontified t)) . -3586) (undo-tree-id8412 . -1) (#("f" 0 1 (face font-lock-keyword-face fontified t)) . -3587) (undo-tree-id8413 . -1) 3588) nil (25595 58032 756308 419000) 0 nil])
([nil nil ((3584 . 3586)) nil (25595 58032 756306 54000) 0 nil])
([nil nil ((3587 . 3591) 3595) nil (25595 58032 756305 714000) 0 nil])
([nil nil ((3600 . 3608) (#("    " 0 4 (fontified t)) . 3600) 3612) nil (25595 58032 756305 253000) 0 nil])
([nil nil ((3640 . 3648) (#("    " 0 4 (fontified t)) . 3640) 3656) nil (25595 58032 756304 802000) 0 nil])
([nil nil ((3680 . 3688) (#("    " 0 4 (fontified t)) . 3680) 3700) nil (25595 58032 756304 281000) 0 nil])
([nil nil ((3720 . 3728) (#("    " 0 4 (fontified t)) . 3720) 3744) nil (25595 58032 756303 770000) 0 nil])
([nil nil ((3760 . 3768) (#("    " 0 4 (fontified t)) . 3760) 3788) nil (25595 58032 756303 249000) 0 nil])
([nil nil ((3800 . 3808) (#("    " 0 4 (fontified t)) . 3800) 3832) nil (25595 58032 756302 788000) 0 nil])
([nil nil ((3840 . 3848) (#("    " 0 4 (fontified t)) . 3840) 3875) nil (25595 58032 756302 307000) 0 nil])
([nil nil ((3880 . 3888) (#("    " 0 4 (fontified t)) . 3880) 3915) nil (25595 58032 756301 756000) 0 nil])
([nil nil ((3920 . 3928) (#("    " 0 4 (fontified t)) . 3920) 3955) nil (25595 58032 756301 185000) 0 nil])
([nil nil ((3960 . 3968) (#("    " 0 4 (fontified t)) . 3960) 3995) nil (25595 58032 756300 564000) 0 nil])
([nil nil ((4000 . 4004) 4001) nil (25595 58032 756300 13000) 0 nil])
([nil nil ((4006 . 4010)) nil (25595 58032 756299 462000) 0 nil])
([nil nil ((4011 . 4015) 4015) nil (25595 58032 756298 921000) 0 nil])
([nil nil ((4028 . 4032) 4036) nil (25595 58032 756298 189000) 0 nil])
([nil nil ((4044 . 4048) 4050) nil (25595 58032 756297 668000) 0 nil])
([nil nil ((4055 . 4059) 4065) nil (25595 58032 756297 237000) 0 nil])
([nil nil ((4083 . 4091) (#("    " 0 4 (fontified t)) . 4083) 4097) nil (25595 58032 756296 686000) 0 nil])
([nil nil ((4104 . 4112) (#("    " 0 4 (fontified t)) . 4104) 4122) nil (25595 58032 756296 5000) 0 nil])
([nil nil ((4147 . 4151) 4161) nil (25595 58032 756295 354000) 0 nil])
([nil nil ((4167 . 4179) 4178) nil (25595 58032 756294 562000) 0 nil])
([nil nil ((4191 . 4203) 4202) nil (25595 58032 756293 721000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -4199) 4214) nil (25595 58032 756293 290000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -4195) 4210) nil (25595 58032 756292 829000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -4175) 4182) nil (25595 58032 756292 158000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -4171) 4178) nil (25595 58032 756291 416000) 0 nil])
([nil nil ((4201 . 4205) (#("    " 0 4 (fontified nil)) . 4200) (undo-tree-id8409 . -4) (4199 . 4205)) nil (25595 58032 756290 595000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -4201) (undo-tree-id8408 . -4) 4205) nil (25595 58032 756289 362000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -4200) (undo-tree-id8407 . -1) 4201) nil (25595 58032 756287 970000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4642 . 4643) (nil fontified nil 4200 . 4643) (4200 . 4643)) nil (25595 58032 756285 485000) 0 nil])
([nil nil ((#("# https://levelup.gitconnected.com/solve-a-maze-with-python-e9f0580979a1

def mazesolver():
    maze = [
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
        [1, 0, 1, 0, 1, 0, 0, 0, 0, 1],
        [1, 0, 1, 0, 1, 0, 0, 0, 0, 1],
        [1, 0, 1, 0, 1, 1, 1, 1, 0, 1],
        [1, 0, 1, 0, 0, 0, 0, 1, 0, 1],
        [1, 0, 1, 0, 0, 0, 0, 1, 0, 1],
        [1, 0, 0, 0, 0, 0, 0, 1, 0, 1],
        [1, 0, 1, 0, 0, 0, 0, 0, 0, 1],
        [1, 0, 1, 0, 0, 0, 0, 0, 0, 1],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
    ]
    
    start = 1, 1
    end = 2, 5

    m = []
    for i in range(len(a)):
        m.append([])
        for j in range(len(a[i])):
            m[-1].append(0)
    i,j = start
    m[i][j] = 1

def make_step(k):
  for i in range(len(m)):
    for j in range(len(m[i])):
      if m[i][j] == k:
        if i>0 and m[i-1][j] == 0 and a[i-1][j] == 0:
          m[i-1][j] = k + 1
        if j>0 and m[i][j-1] == 0 and a[i][j-1] == 0:
          m[i][j-1] = k + 1
        if i<len(m)-1 and m[i+1][j] == 0 and a[i+1][j] == 0:
          m[i+1][j] = k + 1
        if j<len(m[i])-1 and m[i][j+1] == 0 and a[i][j+1] == 0:
           m[i][j+1] = k + 1" 0 2 (face font-lock-comment-delimiter-face fontified t) 2 71 (face font-lock-comment-face fontified t) 71 72 (face font-lock-comment-face rear-nonsticky t fontified t) 72 73 (face font-lock-comment-face fontified t) 73 74 (fontified t) 74 77 (face font-lock-keyword-face fontified t) 77 78 (fontified t) 78 88 (face font-lock-function-name-face fontified t) 88 89 (face (rainbow-delimiters-depth-1-face) fontified t) 89 90 (face (rainbow-delimiters-depth-1-face) fontified t) 90 91 (fontified t) 91 92 (fontified t) 92 96 (fontified t) 96 100 (face font-lock-variable-name-face fontified t) 100 101 (fontified t) 101 102 (face font-lock-operator-face fontified t) 102 103 (fontified t) 103 104 (face (rainbow-delimiters-depth-1-face) fontified t) 104 113 (fontified t) 113 114 (face (rainbow-delimiters-depth-2-face) fontified t) 114 142 (fontified t) 142 143 (face (rainbow-delimiters-depth-2-face) fontified t) 143 153 (fontified t) 153 154 (face (rainbow-delimiters-depth-2-face) fontified t) 154 182 (fontified t) 182 183 (face (rainbow-delimiters-depth-2-face) fontified t) 183 193 (fontified t) 193 194 (face (rainbow-delimiters-depth-2-face) fontified t) 194 222 (fontified t) 222 223 (face (rainbow-delimiters-depth-2-face) fontified t) 223 233 (fontified t) 233 234 (face (rainbow-delimiters-depth-2-face) fontified t) 234 262 (fontified t) 262 263 (face (rainbow-delimiters-depth-2-face) fontified t) 263 273 (fontified t) 273 274 (face (rainbow-delimiters-depth-2-face) fontified t) 274 302 (fontified t) 302 303 (face (rainbow-delimiters-depth-2-face) fontified t) 303 313 (fontified t) 313 314 (face (rainbow-delimiters-depth-2-face) fontified t) 314 342 (fontified t) 342 343 (face (rainbow-delimiters-depth-2-face) fontified t) 343 353 (fontified t) 353 354 (face (rainbow-delimiters-depth-2-face) fontified t) 354 382 (fontified t) 382 383 (face (rainbow-delimiters-depth-2-face) fontified t) 383 393 (fontified t) 393 394 (face (rainbow-delimiters-depth-2-face) fontified t) 394 422 (fontified t) 422 423 (face (rainbow-delimiters-depth-2-face) fontified t) 423 433 (fontified t) 433 434 (face (rainbow-delimiters-depth-2-face) fontified t) 434 462 (fontified t) 462 463 (face (rainbow-delimiters-depth-2-face) fontified t) 463 473 (fontified t) 473 474 (face (rainbow-delimiters-depth-2-face) fontified t) 474 502 (fontified t) 502 503 (face (rainbow-delimiters-depth-2-face) fontified t) 503 509 (fontified t) 509 510 (face (rainbow-delimiters-depth-1-face) fontified t rear-nonsticky t) 510 511 (fontified t) 511 515 (fontified t) 515 516 (fontified t) 516 520 (fontified t) 520 525 (face font-lock-variable-name-face fontified t) 525 526 (fontified t) 526 527 (face font-lock-operator-face fontified t) 527 533 (fontified t) 533 537 (fontified t) 537 540 (face font-lock-variable-name-face fontified t) 540 541 (fontified t) 541 542 (face font-lock-operator-face fontified t) 542 546 (fontified t) 546 547 (fontified t rear-nonsticky t) 547 548 (fontified t) 548 549 (fontified t) 549 553 (fontified t) 553 554 (face font-lock-variable-name-face fontified t) 554 555 (fontified t) 555 556 (face font-lock-operator-face fontified t) 556 557 (fontified t) 557 558 (face (rainbow-delimiters-depth-1-face) fontified t) 558 559 (face (rainbow-delimiters-depth-1-face) fontified t) 559 560 (fontified t) 560 564 (fontified t) 564 567 (face font-lock-keyword-face fontified t) 567 570 (fontified t) 570 572 (face font-lock-keyword-face fontified t) 572 573 (fontified t) 573 578 (face font-lock-builtin-face fontified t) 578 579 (face (rainbow-delimiters-depth-1-face) fontified t) 579 582 (face font-lock-builtin-face fontified t) 582 583 (face (rainbow-delimiters-depth-2-face) fontified t) 583 584 (fontified t) 584 585 (face (rainbow-delimiters-depth-2-face) fontified t) 585 586 (face (rainbow-delimiters-depth-1-face) fontified t) 586 588 (fontified t) 588 596 (fontified t) 596 604 (fontified t) 604 605 (face (rainbow-delimiters-depth-1-face) fontified t) 605 606 (face (rainbow-delimiters-depth-2-face) fontified t) 606 607 (face (rainbow-delimiters-depth-2-face) fontified t) 607 608 (face (rainbow-delimiters-depth-1-face) fontified t) 608 609 (fontified t) 609 617 (fontified t) 617 620 (face font-lock-keyword-face fontified t) 620 623 (fontified t) 623 625 (face font-lock-keyword-face fontified t) 625 626 (fontified t) 626 631 (face font-lock-builtin-face fontified t) 631 632 (face (rainbow-delimiters-depth-1-face) fontified t) 632 635 (face font-lock-builtin-face fontified t) 635 636 (face (rainbow-delimiters-depth-2-face) fontified t) 636 637 (fontified t) 637 638 (face (rainbow-delimiters-depth-3-face) fontified t) 638 639 (fontified t) 639 640 (face (rainbow-delimiters-depth-3-face) fontified t) 640 641 (face (rainbow-delimiters-depth-2-face) fontified t) 641 642 (face (rainbow-delimiters-depth-1-face) fontified t) 642 644 (fontified t) 644 657 (fontified t) 657 658 (face (rainbow-delimiters-depth-1-face) fontified t) 658 659 (face font-lock-operator-face fontified t) 659 660 (fontified t) 660 661 (face (rainbow-delimiters-depth-1-face) fontified t) 661 668 (fontified t) 668 669 (face (rainbow-delimiters-depth-1-face) fontified t) 669 670 (fontified t) 670 671 (face (rainbow-delimiters-depth-1-face) fontified t) 671 672 (fontified t) 672 676 (fontified t) 676 677 (face font-lock-variable-name-face fontified t) 677 678 (fontified t) 678 679 (face font-lock-variable-name-face fontified t) 679 680 (fontified t) 680 681 (face font-lock-operator-face fontified t) 681 688 (fontified t) 688 692 (fontified t) 692 693 (fontified t) 693 694 (face (rainbow-delimiters-depth-1-face) fontified t) 694 695 (fontified t) 695 696 (face (rainbow-delimiters-depth-1-face) fontified t) 696 697 (face (rainbow-delimiters-depth-1-face) fontified t) 697 698 (fontified t) 698 699 (face (rainbow-delimiters-depth-1-face) fontified t) 699 700 (fontified t) 700 701 (face font-lock-operator-face fontified t) 701 702 (fontified t) 702 703 (fontified t rear-nonsticky t) 703 704 (fontified t) 704 705 (fontified t) 705 708 (face font-lock-keyword-face fontified t) 708 709 (fontified t) 709 718 (face font-lock-function-name-face fontified t) 718 719 (face (rainbow-delimiters-depth-1-face) fontified t) 719 720 (fontified t) 720 721 (face (rainbow-delimiters-depth-1-face) fontified t) 721 725 (fontified t) 725 728 (face font-lock-keyword-face fontified t) 728 731 (fontified t) 731 733 (face font-lock-keyword-face fontified t) 733 734 (fontified t) 734 739 (face font-lock-builtin-face fontified t) 739 740 (face (rainbow-delimiters-depth-1-face) fontified t) 740 743 (face font-lock-builtin-face fontified t) 743 744 (face (rainbow-delimiters-depth-2-face) fontified t) 744 745 (fontified t) 745 746 (face (rainbow-delimiters-depth-2-face) fontified t) 746 747 (face (rainbow-delimiters-depth-1-face) fontified t) 747 753 (fontified t) 753 756 (face font-lock-keyword-face fontified t) 756 759 (fontified t) 759 761 (face font-lock-keyword-face fontified t) 761 762 (fontified t) 762 767 (face font-lock-builtin-face fontified t) 767 768 (face (rainbow-delimiters-depth-1-face) fontified t) 768 771 (face font-lock-builtin-face fontified t) 771 772 (face (rainbow-delimiters-depth-2-face) fontified t) 772 773 (fontified t) 773 774 (face (rainbow-delimiters-depth-3-face) fontified t) 774 775 (fontified t) 775 776 (face (rainbow-delimiters-depth-3-face) fontified t) 776 777 (face (rainbow-delimiters-depth-2-face) fontified t) 777 778 (face (rainbow-delimiters-depth-1-face) fontified t) 778 786 (fontified t) 786 788 (face font-lock-keyword-face fontified t) 788 790 (fontified t) 790 791 (face (rainbow-delimiters-depth-1-face) fontified t) 791 792 (fontified t) 792 793 (face (rainbow-delimiters-depth-1-face) fontified t) 793 794 (face (rainbow-delimiters-depth-1-face) fontified t) 794 795 (fontified t) 795 796 (face (rainbow-delimiters-depth-1-face) fontified t) 796 797 (fontified t) 797 799 (face font-lock-operator-face fontified t) 799 811 (fontified t) 811 813 (face font-lock-keyword-face fontified t) 813 815 (fontified t) 815 816 (face font-lock-operator-face fontified t) 816 818 (fontified t) 818 821 (face font-lock-keyword-face fontified t) 821 823 (fontified t) 823 824 (face (rainbow-delimiters-depth-1-face) fontified t) 824 825 (fontified t) 825 826 (face font-lock-operator-face fontified t) 826 827 (fontified t) 827 828 (face (rainbow-delimiters-depth-1-face) fontified t) 828 829 (face (rainbow-delimiters-depth-1-face) fontified t) 829 830 (fontified t) 830 831 (face (rainbow-delimiters-depth-1-face) fontified t) 831 832 (fontified t) 832 834 (face font-lock-operator-face fontified t) 834 837 (fontified t) 837 840 (face font-lock-keyword-face fontified t) 840 842 (fontified t) 842 843 (face (rainbow-delimiters-depth-1-face) fontified t) 843 844 (fontified t) 844 845 (face font-lock-operator-face fontified t) 845 846 (fontified t) 846 847 (face (rainbow-delimiters-depth-1-face) fontified t) 847 848 (face (rainbow-delimiters-depth-1-face) fontified t) 848 849 (fontified t) 849 850 (face (rainbow-delimiters-depth-1-face) fontified t) 850 851 (fontified t) 851 853 (face font-lock-operator-face fontified t) 853 868 (fontified t) 868 869 (face (rainbow-delimiters-depth-1-face) fontified t) 869 870 (fontified t) 870 871 (face font-lock-operator-face fontified t) 871 872 (fontified t) 872 873 (face (rainbow-delimiters-depth-1-face) fontified t) 873 874 (face (rainbow-delimiters-depth-1-face) fontified t) 874 875 (fontified t) 875 876 (face (rainbow-delimiters-depth-1-face) fontified t) 876 877 (fontified t) 877 878 (face font-lock-operator-face fontified t) 878 881 (fontified t) 881 882 (face font-lock-operator-face fontified t) 882 893 (fontified t) 893 895 (face font-lock-keyword-face fontified t) 895 897 (fontified t) 897 898 (face font-lock-operator-face fontified t) 898 900 (fontified t) 900 903 (face font-lock-keyword-face fontified t) 903 905 (fontified t) 905 906 (face (rainbow-delimiters-depth-1-face) fontified t) 906 907 (fontified t) 907 908 (face (rainbow-delimiters-depth-1-face) fontified t) 908 909 (face (rainbow-delimiters-depth-1-face) fontified t) 909 910 (fontified t) 910 911 (face font-lock-operator-face fontified t) 911 912 (fontified t) 912 913 (face (rainbow-delimiters-depth-1-face) fontified t) 913 914 (fontified t) 914 916 (face font-lock-operator-face fontified t) 916 919 (fontified t) 919 922 (face font-lock-keyword-face fontified t) 922 924 (fontified t) 924 925 (face (rainbow-delimiters-depth-1-face) fontified t) 925 926 (fontified t) 926 927 (face (rainbow-delimiters-depth-1-face) fontified t) 927 928 (face (rainbow-delimiters-depth-1-face) fontified t) 928 929 (fontified t) 929 930 (face font-lock-operator-face fontified t) 930 931 (fontified t) 931 932 (face (rainbow-delimiters-depth-1-face) fontified t) 932 933 (fontified t) 933 935 (face font-lock-operator-face fontified t) 935 950 (fontified t) 950 951 (face (rainbow-delimiters-depth-1-face) fontified t) 951 952 (fontified t) 952 953 (face (rainbow-delimiters-depth-1-face) fontified t) 953 954 (face (rainbow-delimiters-depth-1-face) fontified t) 954 955 (fontified t) 955 956 (face font-lock-operator-face fontified t) 956 957 (fontified t) 957 958 (face (rainbow-delimiters-depth-1-face) fontified t) 958 959 (fontified t) 959 960 (face font-lock-operator-face fontified t) 960 963 (fontified t) 963 964 (face font-lock-operator-face fontified t) 964 975 (fontified t) 975 977 (face font-lock-keyword-face fontified t) 977 979 (fontified t) 979 980 (face font-lock-operator-face fontified t) 980 983 (face font-lock-builtin-face fontified t) 983 984 (face (rainbow-delimiters-depth-1-face) fontified t) 984 985 (fontified t) 985 986 (face (rainbow-delimiters-depth-1-face) fontified t) 986 987 (face font-lock-operator-face fontified t) 987 989 (fontified t) 989 992 (face font-lock-keyword-face fontified t) 992 994 (fontified t) 994 995 (face (rainbow-delimiters-depth-1-face) fontified t) 995 996 (fontified t) 996 997 (face font-lock-operator-face fontified t) 997 998 (fontified t) 998 999 (face (rainbow-delimiters-depth-1-face) fontified t) 999 1000 (face (rainbow-delimiters-depth-1-face) fontified t) 1000 1001 (fontified t) 1001 1002 (face (rainbow-delimiters-depth-1-face) fontified t) 1002 1003 (fontified t) 1003 1005 (face font-lock-operator-face fontified t) 1005 1008 (fontified t) 1008 1011 (face font-lock-keyword-face fontified t) 1011 1013 (fontified t) 1013 1014 (face (rainbow-delimiters-depth-1-face) fontified t) 1014 1015 (fontified t) 1015 1016 (face font-lock-operator-face fontified t) 1016 1017 (fontified t) 1017 1018 (face (rainbow-delimiters-depth-1-face) fontified t) 1018 1019 (face (rainbow-delimiters-depth-1-face) fontified t) 1019 1020 (fontified t) 1020 1021 (face (rainbow-delimiters-depth-1-face) fontified t) 1021 1022 (fontified t) 1022 1024 (face font-lock-operator-face fontified t) 1024 1039 (fontified t) 1039 1040 (face (rainbow-delimiters-depth-1-face) fontified t) 1040 1041 (fontified t) 1041 1042 (face font-lock-operator-face fontified t) 1042 1043 (fontified t) 1043 1044 (face (rainbow-delimiters-depth-1-face) fontified t) 1044 1045 (face (rainbow-delimiters-depth-1-face) fontified t) 1045 1046 (fontified t) 1046 1047 (face (rainbow-delimiters-depth-1-face) fontified t) 1047 1048 (fontified t) 1048 1049 (face font-lock-operator-face fontified t) 1049 1052 (fontified t) 1052 1053 (face font-lock-operator-face fontified t) 1053 1064 (fontified t) 1064 1066 (face font-lock-keyword-face fontified t) 1066 1068 (fontified t) 1068 1069 (face font-lock-operator-face fontified t) 1069 1072 (face font-lock-builtin-face fontified t) 1072 1073 (face (rainbow-delimiters-depth-1-face) fontified t) 1073 1074 (fontified t) 1074 1075 (face (rainbow-delimiters-depth-2-face) fontified t) 1075 1076 (fontified t) 1076 1077 (face (rainbow-delimiters-depth-2-face) fontified t) 1077 1078 (face (rainbow-delimiters-depth-1-face) fontified t) 1078 1079 (face font-lock-operator-face fontified t) 1079 1081 (fontified t) 1081 1084 (face font-lock-keyword-face fontified t) 1084 1086 (fontified t) 1086 1087 (face (rainbow-delimiters-depth-1-face) fontified t) 1087 1088 (fontified t) 1088 1089 (face (rainbow-delimiters-depth-1-face) fontified t) 1089 1090 (face (rainbow-delimiters-depth-1-face) fontified t) 1090 1091 (fontified t) 1091 1092 (face font-lock-operator-face fontified t) 1092 1093 (fontified t) 1093 1094 (face (rainbow-delimiters-depth-1-face) fontified t) 1094 1095 (fontified t) 1095 1097 (face font-lock-operator-face fontified t) 1097 1100 (fontified t) 1100 1103 (face font-lock-keyword-face fontified t) 1103 1105 (fontified t) 1105 1106 (face (rainbow-delimiters-depth-1-face) fontified t) 1106 1107 (fontified t) 1107 1108 (face (rainbow-delimiters-depth-1-face) fontified t) 1108 1109 (face (rainbow-delimiters-depth-1-face) fontified t) 1109 1110 (fontified t) 1110 1111 (face font-lock-operator-face fontified t) 1111 1112 (fontified t) 1112 1113 (face (rainbow-delimiters-depth-1-face) fontified t) 1113 1114 (fontified t) 1114 1116 (face font-lock-operator-face fontified t) 1116 1132 (fontified t) 1132 1133 (face (rainbow-delimiters-depth-1-face) fontified t) 1133 1134 (fontified t) 1134 1135 (face (rainbow-delimiters-depth-1-face) fontified t) 1135 1136 (face (rainbow-delimiters-depth-1-face) fontified t) 1136 1137 (fontified t) 1137 1138 (face font-lock-operator-face fontified t) 1138 1139 (fontified t) 1139 1140 (face (rainbow-delimiters-depth-1-face) fontified t) 1140 1141 (fontified t) 1141 1142 (face font-lock-operator-face fontified t) 1142 1145 (fontified t) 1145 1146 (face font-lock-operator-face fontified t) 1146 1147 (fontified t) 1147 1148 (rear-nonsticky t fontified t)) . 3495) (undo-tree-id7963 . -100) (undo-tree-id7964 . -516) (undo-tree-id7965 . -2) (undo-tree-id7966 . -549) (undo-tree-id7967 . -776) (undo-tree-id7968 . -105) (undo-tree-id7969 . -532) (undo-tree-id7970 . -90) (undo-tree-id7971 . -104) (undo-tree-id7972 . -1148) (undo-tree-id7973 . -90) (undo-tree-id7974 . -90) (undo-tree-id7975 . -90) (undo-tree-id7976 . -73) (undo-tree-id7977 . -90) (undo-tree-id7978 . -73) (undo-tree-id7979 . -73) (undo-tree-id7980 . -73) (undo-tree-id7981 . -73) (undo-tree-id7982 . -73) (undo-tree-id7983 . -73) (undo-tree-id7984 . -73) (undo-tree-id7985 . -73) (undo-tree-id7986 . -73) (undo-tree-id7987 . -73) (undo-tree-id7988 . -73) (undo-tree-id7989 . -16) (undo-tree-id7990 . -73) (undo-tree-id7991 . -16) (undo-tree-id7992 . -16) (undo-tree-id7993 . -16) (undo-tree-id7994 . -16) (undo-tree-id7995 . -16) (undo-tree-id7996 . -16) (undo-tree-id7997 . -16) (undo-tree-id7998 . -705) (undo-tree-id7999 . -1148) (undo-tree-id8000 . -1148) (undo-tree-id8001 . -73) (undo-tree-id8002 . -73) (undo-tree-id8003 . -73) (undo-tree-id8004 . -73) (undo-tree-id8005 . -73) (undo-tree-id8006 . -1148) (undo-tree-id8007 . -73) (undo-tree-id8008 . -73) (undo-tree-id8009 . -74) (undo-tree-id8010 . -73) (undo-tree-id8011 . -74) (undo-tree-id8012 . -74) (undo-tree-id8013 . -74) (undo-tree-id8014 . -74) (undo-tree-id8015 . -1148) (undo-tree-id8016 . -74) (undo-tree-id8017 . -92) (undo-tree-id8018 . -74) (undo-tree-id8019 . -92) (undo-tree-id8020 . -92) (undo-tree-id8021 . -92) (undo-tree-id8022 . -92) (undo-tree-id8023 . -1148) (undo-tree-id8024 . -92) (undo-tree-id8025 . -105) (undo-tree-id8026 . -92) (undo-tree-id8027 . -105) (undo-tree-id8028 . -105) (undo-tree-id8029 . -105) (undo-tree-id8030 . -105) (undo-tree-id8031 . -1148) (undo-tree-id8032 . -105) (undo-tree-id8033 . -145) (undo-tree-id8034 . -105) (undo-tree-id8035 . -145) (undo-tree-id8036 . -145) (undo-tree-id8037 . -145) (undo-tree-id8038 . -145) (undo-tree-id8039 . -1148) (undo-tree-id8040 . -145) (undo-tree-id8041 . -185) (undo-tree-id8042 . -145) (undo-tree-id8043 . -185) (undo-tree-id8044 . -185) (undo-tree-id8045 . -185) (undo-tree-id8046 . -185) (undo-tree-id8047 . -1148) (undo-tree-id8048 . -185) (undo-tree-id8049 . -225) (undo-tree-id8050 . -185) (undo-tree-id8051 . -225) (undo-tree-id8052 . -225) (undo-tree-id8053 . -225) (undo-tree-id8054 . -225) (undo-tree-id8055 . -1148) (undo-tree-id8056 . -225) (undo-tree-id8057 . -265) (undo-tree-id8058 . -225) (undo-tree-id8059 . -265) (undo-tree-id8060 . -265) (undo-tree-id8061 . -265) (undo-tree-id8062 . -265) (undo-tree-id8063 . -1148) (undo-tree-id8064 . -265) (undo-tree-id8065 . -305) (undo-tree-id8066 . -265) (undo-tree-id8067 . -305) (undo-tree-id8068 . -305) (undo-tree-id8069 . -305) (undo-tree-id8070 . -305) (undo-tree-id8071 . -1148) (undo-tree-id8072 . -305) (undo-tree-id8073 . -345) (undo-tree-id8074 . -305) (undo-tree-id8075 . -345) (undo-tree-id8076 . -345) (undo-tree-id8077 . -345) (undo-tree-id8078 . -345) (undo-tree-id8079 . -1148) (undo-tree-id8080 . -345) (undo-tree-id8081 . -385) (undo-tree-id8082 . -345) (undo-tree-id8083 . -385) (undo-tree-id8084 . -385) (undo-tree-id8085 . -385) (undo-tree-id8086 . -385) (undo-tree-id8087 . -1148) (undo-tree-id8088 . -385) (undo-tree-id8089 . -425) (undo-tree-id8090 . -385) (undo-tree-id8091 . -425) (undo-tree-id8092 . -425) (undo-tree-id8093 . -425) (undo-tree-id8094 . -425) (undo-tree-id8095 . -1148) (undo-tree-id8096 . -425) (undo-tree-id8097 . -465) (undo-tree-id8098 . -425) (undo-tree-id8099 . -465) (undo-tree-id8100 . -465) (undo-tree-id8101 . -465) (undo-tree-id8102 . -465) (undo-tree-id8103 . -1148) (undo-tree-id8104 . -465) (undo-tree-id8105 . -505) (undo-tree-id8106 . -465) (undo-tree-id8107 . -505) (undo-tree-id8108 . -505) (undo-tree-id8109 . -505) (undo-tree-id8110 . -505) (undo-tree-id8111 . -1148) (undo-tree-id8112 . -505) (undo-tree-id8113 . -511) (undo-tree-id8114 . -505) (undo-tree-id8115 . -511) (undo-tree-id8116 . -511) (undo-tree-id8117 . -511) (undo-tree-id8118 . -511) (undo-tree-id8119 . -1148) (undo-tree-id8120 . -511) (undo-tree-id8121 . -516) (undo-tree-id8122 . -511) (undo-tree-id8123 . -516) (undo-tree-id8124 . -516) (undo-tree-id8125 . -516) (undo-tree-id8126 . -516) (undo-tree-id8127 . -1148) (undo-tree-id8128 . -516) (undo-tree-id8129 . -533) (undo-tree-id8130 . -516) (undo-tree-id8131 . -533) (undo-tree-id8132 . -533) (undo-tree-id8133 . -533) (undo-tree-id8134 . -533) (undo-tree-id8135 . -1148) (undo-tree-id8136 . -533) (undo-tree-id8137 . -548) (undo-tree-id8138 . -533) (undo-tree-id8139 . -548) (undo-tree-id8140 . -548) (undo-tree-id8141 . -548) (undo-tree-id8142 . -548) (undo-tree-id8143 . -1148) (undo-tree-id8144 . -548) (undo-tree-id8145 . -549) (undo-tree-id8146 . -548) (undo-tree-id8147 . -549) (undo-tree-id8148 . -549) (undo-tree-id8149 . -549) (undo-tree-id8150 . -549) (undo-tree-id8151 . -1148) (undo-tree-id8152 . -549) (undo-tree-id8153 . -560) (undo-tree-id8154 . -549) (undo-tree-id8155 . -560) (undo-tree-id8156 . -560) (undo-tree-id8157 . -560) (undo-tree-id8158 . -560) (undo-tree-id8159 . -1148) (undo-tree-id8160 . -560) (undo-tree-id8161 . -588) (undo-tree-id8162 . -560) (undo-tree-id8163 . -588) (undo-tree-id8164 . -588) (undo-tree-id8165 . -588) (undo-tree-id8166 . -588) (undo-tree-id8167 . -1148) (undo-tree-id8168 . -588) (undo-tree-id8169 . -609) (undo-tree-id8170 . -588) (undo-tree-id8171 . -609) (undo-tree-id8172 . -609) (undo-tree-id8173 . -609) (undo-tree-id8174 . -609) (undo-tree-id8175 . -1148) (undo-tree-id8176 . -609) (undo-tree-id8177 . -644) (undo-tree-id8178 . -609) (undo-tree-id8179 . -644) (undo-tree-id8180 . -644) (undo-tree-id8181 . -644) (undo-tree-id8182 . -644) (undo-tree-id8183 . -1148) (undo-tree-id8184 . -644) (undo-tree-id8185 . -672) (undo-tree-id8186 . -644) (undo-tree-id8187 . -672) (undo-tree-id8188 . -672) (undo-tree-id8189 . -672) (undo-tree-id8190 . -672) (undo-tree-id8191 . -1148) (undo-tree-id8192 . -672) (undo-tree-id8193 . -688) (undo-tree-id8194 . -672) (undo-tree-id8195 . -688) (undo-tree-id8196 . -688) (undo-tree-id8197 . -688) (undo-tree-id8198 . -688) (undo-tree-id8199 . -1148) (undo-tree-id8200 . -688) (undo-tree-id8201 . -704) (undo-tree-id8202 . -688) (undo-tree-id8203 . -704) (undo-tree-id8204 . -704) (undo-tree-id8205 . -704) (undo-tree-id8206 . -704) (undo-tree-id8207 . -1148) (undo-tree-id8208 . -704) (undo-tree-id8209 . -705) (undo-tree-id8210 . -704) (undo-tree-id8211 . -705) (undo-tree-id8212 . -705) (undo-tree-id8213 . -705) (undo-tree-id8214 . -705) (undo-tree-id8215 . -1148) (undo-tree-id8216 . -705) (undo-tree-id8217 . -723) (undo-tree-id8218 . -705) (undo-tree-id8219 . -723) (undo-tree-id8220 . -723) (undo-tree-id8221 . -723) (undo-tree-id8222 . -723) (undo-tree-id8223 . -1148) (undo-tree-id8224 . -723) (undo-tree-id8225 . -749) (undo-tree-id8226 . -723) (undo-tree-id8227 . -749) (undo-tree-id8228 . -749) (undo-tree-id8229 . -749) (undo-tree-id8230 . -749) (undo-tree-id8231 . -1148) (undo-tree-id8232 . -749) (undo-tree-id8233 . -780) (undo-tree-id8234 . -749) (undo-tree-id8235 . -780) (undo-tree-id8236 . -780) (undo-tree-id8237 . -780) (undo-tree-id8238 . -780) (undo-tree-id8239 . -1148) (undo-tree-id8240 . -780) (undo-tree-id8241 . -803) (undo-tree-id8242 . -780) (undo-tree-id8243 . -803) (undo-tree-id8244 . -803) (undo-tree-id8245 . -803) (undo-tree-id8246 . -803) (undo-tree-id8247 . -1148) (undo-tree-id8248 . -803) (undo-tree-id8249 . -857) (undo-tree-id8250 . -803) (undo-tree-id8251 . -857) (undo-tree-id8252 . -857) (undo-tree-id8253 . -857) (undo-tree-id8254 . -857) (undo-tree-id8255 . -1148) (undo-tree-id8256 . -857) (undo-tree-id8257 . -885) (undo-tree-id8258 . -857) (undo-tree-id8259 . -885) (undo-tree-id8260 . -885) (undo-tree-id8261 . -885) (undo-tree-id8262 . -885) (undo-tree-id8263 . -1148) (undo-tree-id8264 . -885) (undo-tree-id8265 . -939) (undo-tree-id8266 . -885) (undo-tree-id8267 . -939) (undo-tree-id8268 . -939) (undo-tree-id8269 . -939) (undo-tree-id8270 . -939) (undo-tree-id8271 . -1148) (undo-tree-id8272 . -939) (undo-tree-id8273 . -967) (undo-tree-id8274 . -939) (undo-tree-id8275 . -967) (undo-tree-id8276 . -967) (undo-tree-id8277 . -967) (undo-tree-id8278 . -967) (undo-tree-id8279 . -1148) (undo-tree-id8280 . -967) (undo-tree-id8281 . -1028) (undo-tree-id8282 . -967) (undo-tree-id8283 . -1028) (undo-tree-id8284 . -1028) (undo-tree-id8285 . -1028) (undo-tree-id8286 . -1028) (undo-tree-id8287 . -1148) (undo-tree-id8288 . -1028) (undo-tree-id8289 . -1056) (undo-tree-id8290 . -1028) (undo-tree-id8291 . -1056) (undo-tree-id8292 . -1056) (undo-tree-id8293 . -1056) (undo-tree-id8294 . -1056) (undo-tree-id8295 . -1148) (undo-tree-id8296 . -1056) (undo-tree-id8297 . -1120) (undo-tree-id8298 . -1056) (undo-tree-id8299 . -1120) (undo-tree-id8300 . -1120) (undo-tree-id8301 . -1120) (undo-tree-id8302 . -1120) (undo-tree-id8303 . -1148) (undo-tree-id8304 . -1120) (undo-tree-id8305 . -1148) (undo-tree-id8306 . -1120) (undo-tree-id8307 . -1148) (undo-tree-id8308 . -1148) (undo-tree-id8309 . -1148) (undo-tree-id8310 . -1148) (undo-tree-id8311 . -1148) (undo-tree-id8312 . -1148) (undo-tree-id8313 . -1148) (undo-tree-id8314 . -1148) (undo-tree-id8315 . -1148) (undo-tree-id8316 . -1148) (undo-tree-id8317 . -1148) (undo-tree-id8318 . -1148) (undo-tree-id8319 . -1148) (undo-tree-id8320 . -1148) (undo-tree-id8321 . -1148) (undo-tree-id8322 . -1148) (undo-tree-id8323 . -1148) (undo-tree-id8324 . -1148) (undo-tree-id8325 . -1148) (undo-tree-id8326 . -1148) (undo-tree-id8327 . -1148) (undo-tree-id8328 . -1148) (undo-tree-id8329 . -1148) (undo-tree-id8330 . -1148) (undo-tree-id8331 . -1148) (undo-tree-id8332 . -1148) (undo-tree-id8333 . -1148) (undo-tree-id8334 . -1148) (undo-tree-id8335 . -1148) (undo-tree-id8336 . -1148) (undo-tree-id8337 . -1148) (undo-tree-id8338 . -1148) (undo-tree-id8339 . -1148) (undo-tree-id8340 . -1148) (undo-tree-id8341 . -1148) (undo-tree-id8342 . -1148) (undo-tree-id8343 . -1148) (undo-tree-id8344 . -1148) (undo-tree-id8345 . -1148) (undo-tree-id8346 . -1148) (undo-tree-id8347 . -1148) (undo-tree-id8348 . -1148) (undo-tree-id8349 . -1148) (undo-tree-id8350 . -1148) (undo-tree-id8351 . -1148) (undo-tree-id8352 . -1148) (undo-tree-id8353 . -1148) (undo-tree-id8354 . -1120) (undo-tree-id8355 . -1148) (undo-tree-id8356 . -1148) (undo-tree-id8357 . -1148) (undo-tree-id8358 . -1131) (undo-tree-id8359 . -1131) (undo-tree-id8360 . -1064) (undo-tree-id8361 . -1064) (undo-tree-id8362 . -1064) (undo-tree-id8363 . -975) (undo-tree-id8364 . -975) (undo-tree-id8365 . -975) (undo-tree-id8366 . -893) (undo-tree-id8367 . -893) (undo-tree-id8368 . -893) (undo-tree-id8369 . -811) (undo-tree-id8370 . -811) (undo-tree-id8371 . -811) (undo-tree-id8372 . -786) (undo-tree-id8373 . -786) (undo-tree-id8374 . -786) (undo-tree-id8375 . -753) (undo-tree-id8376 . -753) (undo-tree-id8377 . -753) (undo-tree-id8378 . -725) (undo-tree-id8379 . -725) (undo-tree-id8380 . -725) (undo-tree-id8381 . -705) (undo-tree-id8382 . -705) (undo-tree-id8383 . -1131) (undo-tree-id8384 . -705) (undo-tree-id8385 . -1131) (undo-tree-id8386 . -722) (undo-tree-id8387 . -748) (undo-tree-id8388 . -779) (undo-tree-id8389 . -802) (undo-tree-id8390 . -856) (undo-tree-id8391 . -884) (undo-tree-id8392 . -938) (undo-tree-id8393 . -966) (undo-tree-id8394 . -1027) (undo-tree-id8395 . -1055) (undo-tree-id8396 . -1119) (undo-tree-id8397 . -1148) (undo-tree-id8398 . -1148) (undo-tree-id8399 . -1148) (undo-tree-id8400 . -1148) (undo-tree-id8401 . -1148) (undo-tree-id8402 . -1148) (undo-tree-id8403 . -1148) (undo-tree-id8404 . -1148) (undo-tree-id8405 . -1148) (undo-tree-id8406 . -1148) 4643) nil (25595 58032 756273 41000) 0 nil])
([nil current ((#("g" 0 1 (fontified t)) . -3355) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (#(" " 0 1 (fontified t)) . -3356) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (#("=" 0 1 (face font-lock-operator-face fontified t)) . -3357) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (#(" " 0 1 (fontified t)) . -3358) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) 3359 (t 25595 58032 779783 400000)) nil (25595 61914 476812 91000) 0 nil])
nil
