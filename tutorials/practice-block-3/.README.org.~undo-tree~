(undo-tree-save-format-version . 1)
"2ca2981e75df6f7db809c906a9b7a0c8350d3dfc"
[nil nil nil nil (25596 33997 528488 748000) 0 nil]
([nil nil ((#("algorithms" 0 10 (fontified t)) . -53) (undo-tree-id30 . -10) (undo-tree-id31 . -10) (undo-tree-id32 . -10) (undo-tree-id33 . -10) (undo-tree-id34 . -10) (undo-tree-id35 . -10) (undo-tree-id36 . -10) (undo-tree-id37 . -10) 63 (t 25595 48006 806887 800000)) nil (25596 33997 528487 225000) 0 nil])
([nil nil ((#("greedy " 0 7 (fontified t)) . -46) (undo-tree-id0 . -6) (undo-tree-id1 . -6) (undo-tree-id2 . -6) (undo-tree-id3 . -6) (undo-tree-id4 . -6) (undo-tree-id5 . -6) (undo-tree-id6 . -6) (undo-tree-id7 . -7) (undo-tree-id8 . -6) (undo-tree-id9 . -7) (undo-tree-id10 . -7) (undo-tree-id11 . -7) (undo-tree-id12 . -7) (undo-tree-id13 . -7) (undo-tree-id14 . -7) (undo-tree-id15 . -7) (undo-tree-id16 . -7) (undo-tree-id17 . -7) (undo-tree-id18 . -7) (undo-tree-id19 . -7) (undo-tree-id20 . -7) (undo-tree-id21 . -7) (undo-tree-id22 . -7) (undo-tree-id23 . -7) (undo-tree-id24 . -7) (undo-tree-id25 . -7) (undo-tree-id26 . -7) (undo-tree-id27 . -7) (undo-tree-id28 . -7) (undo-tree-id29 . -7) 53) nil (25596 33997 528476 535000) 0 nil])
([nil nil ((46 . 56)) nil (25596 33997 528433 984000) 0 nil])
([nil nil ((35 . 38) (t 25596 33997 557072 100000)) nil (25596 34010 738579 893000) 0 nil])
([nil nil ((#("Use the graph implementation from the book (~m269_graphs.py~), set a few problems" 0 44 (fontified t) 44 60 (org-emphasis t font-lock-multiline t face (org-code) fontified t) 60 81 (fontified t)) . 62) (undo-tree-id57 . -2) (undo-tree-id58 . -2) (undo-tree-id59 . -2) (undo-tree-id60 . -2) (undo-tree-id61 . -2) (undo-tree-id62 . -2) (undo-tree-id63 . -2) (undo-tree-id64 . -2) (undo-tree-id65 . -81) (t 25596 34010 770875 900000)) nil (25596 34017 802770 888000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 62) (undo-tree-id56 . -1)) nil (25596 34017 802381 747000) 0 nil])
([nil nil ((#("to be solved using it." 0 1 (fontified t) 1 22 (fontified t)) . 62) (undo-tree-id55 . -22)) nil (25596 34017 802380 525000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 62) (undo-tree-id54 . -1)) nil (25596 34017 802378 912000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 62) (undo-tree-id53 . -1)) nil (25596 34017 802377 700000) 0 nil])
([nil nil ((#("You need to install the module ~networkx~ to work with this code." 0 1 (fontified t) 1 31 (fontified t) 31 41 (org-emphasis t font-lock-multiline t face (org-code) fontified t) 41 65 (fontified t)) . 62) (undo-tree-id52 . -65)) nil (25596 34017 802376 557000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 62) (undo-tree-id51 . -1)) nil (25596 34017 802375 275000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 62) (undo-tree-id50 . -1)) nil (25596 34017 802374 43000) 0 nil])
([nil nil ((#("1. Write a function ~disconnected~ that takes a DiGraph and returns the" 0 1 (fontified t) 1 20 (fontified t) 20 34 (org-emphasis t font-lock-multiline t face (org-code) fontified t) 34 71 (fontified t)) . 62) (undo-tree-id49 . -71)) nil (25596 34017 802372 590000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 62) (undo-tree-id48 . -1)) nil (25596 34017 802371 328000) 0 nil])
([nil nil ((#("   disconnected nodes." 0 1 (fontified t) 1 22 (fontified t)) . 62) (undo-tree-id47 . -22)) nil (25596 34017 802369 995000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 62) (undo-tree-id46 . -1)) nil (25596 34017 802367 981000) 0 nil])
([nil nil ((#("2. Write two functions ~traverse_df~ and ~traverse~bf~ that perform " 0 1 (fontified t) 1 23 (fontified t) 23 36 (org-emphasis t font-lock-multiline t face (org-code) fontified t) 36 41 (fontified t) 41 54 (org-emphasis t font-lock-multiline t face (org-code) fontified t) 54 68 (fontified t)) . 62) (undo-tree-id45 . -68)) nil (25596 34017 802366 328000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 62) (undo-tree-id44 . -1)) nil (25596 34017 802364 404000) 0 nil])
([nil nil ((#("   depth-first and a breadth-first traversal respectively. (There is a similar" 0 1 (fontified t) 1 78 (fontified t)) . 62) (undo-tree-id43 . -78)) nil (25596 34017 802362 591000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 62) (undo-tree-id42 . -1)) nil (25596 34017 802360 828000) 0 nil])
([nil nil ((#("   exercise in the book but it uses a different graph implementation.)" 0 1 (fontified t) 1 70 (fontified t)) . 62) (undo-tree-id41 . -70)) nil (25596 34017 802358 924000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 62) (undo-tree-id40 . -1)) nil (25596 34017 802357 90000) 0 nil])
([nil nil ((#("3. " 0 1 (fontified t) 1 3 (fontified t)) . 62) (undo-tree-id39 . -3)) nil (25596 34017 802354 666000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 62) (undo-tree-id38 . -1)) nil (25596 34017 802350 197000) 0 nil])
([nil nil ((62 . 66) (t 25596 34017 820315 0)) nil (25596 35225 36989 967000) 0 nil])
([nil nil ((66 . 81)) nil (25596 35225 36988 184000) 0 nil])
([nil nil ((81 . 82)) nil (25596 35225 36983 926000) 0 nil])
([nil nil ((81 . 95) (t 25596 35225 67889 0)) nil (25596 35797 18729 772000) 0 nil])
([nil nil ((86 . 89)) nil (25596 35797 18728 910000) 0 nil])
([nil nil ((89 . 94)) nil (25596 35797 18728 119000) 0 nil])
([nil nil ((#("general " 0 8 (fontified t)) . -86) (undo-tree-id740 . -8) 94) nil (25596 35797 18726 836000) 0 nil])
([nil nil ((94 . 95)) nil (25596 35797 18725 554000) 0 nil])
([nil nil ((95 . 119)) nil (25596 35797 18724 722000) 0 nil])
([nil nil ((119 . 120)) nil (25596 35797 18723 830000) 0 nil])
([nil nil ((120 . 125)) nil (25596 35797 18722 879000) 0 nil])
([nil nil ((#("uses " 0 5 (fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show)) . -120) (undo-tree-id739 . -5) 125) nil (25596 35797 18721 807000) 0 nil])
([nil nil ((120 . 122)) nil (25596 35797 18720 454000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show)) . -121) (undo-tree-id738 . -1) 122) nil (25596 35797 18719 402000) 0 nil])
([nil nil ((121 . 141)) nil (25596 35797 18718 110000) 0 nil])
([nil nil ((141 . 143)) nil (25596 35797 18717 468000) 0 nil])
([nil nil ((143 . 145)) nil (25596 35797 18716 787000) 0 nil])
([nil nil ((144 . 164)) nil (25596 35797 18715 835000) 0 nil])
([nil nil ((167 . 186) (#(" " 0 1 (fontified nil)) . 156) (155 . 156) (165 . 167)) nil (25596 35797 18714 954000) 0 nil])
([nil nil ((186 . 207)) nil (25596 35797 18713 851000) 0 nil])
([nil nil ((207 . 214)) nil (25596 35797 18712 980000) 0 nil])
([nil nil ((137 . 138)) nil (25596 35797 18712 158000) 0 nil])
([nil nil ((143 . 144)) nil (25596 35797 18710 856000) 0 nil])
([nil nil ((#("/" 0 1 (org-emphasis t font-lock-multiline t face (italic) fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show)) . -137) (undo-tree-id737 . -1) 138) nil (25596 35797 18709 633000) 0 nil])
([nil nil ((137 . 138)) nil (25596 35797 18708 110000) 0 nil])
([nil nil ((#("/" 0 1 (fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show)) . -143) (undo-tree-id736 . -1) 144) nil (25596 35797 18707 179000) 0 nil])
([nil nil ((143 . 144)) nil (25596 35797 18704 664000) 0 nil])
([nil nil ((#("*" 0 1 (org-emphasis t font-lock-multiline t face (bold) fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show)) . -143) (undo-tree-id735 . -1) 144) nil (25596 35797 18703 762000) 0 nil])
([nil nil ((#("*" 0 1 (fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show)) . -137) (undo-tree-id734 . -1) 138) nil (25596 35797 18701 738000) 0 nil])
([nil nil ((137 . 138)) nil (25596 35797 18700 416000) 0 nil])
([nil nil ((143 . 144)) nil (25596 35797 18699 624000) 0 nil])
([nil nil ((158 . 159)) nil (25596 35797 18698 933000) 0 nil])
([nil nil ((167 . 168)) nil (25596 35797 18698 91000) 0 nil])
([nil nil ((217 . 223)) nil (25596 35797 18697 300000) 0 nil])
([nil nil ((218 . 219)) nil (25596 35797 18696 478000) 0 nil])
([nil nil ((243 . 245) (#(" " 0 1 (fontified nil)) . 237) (236 . 237) (224 . 243)) nil (25596 35797 18695 106000) 0 nil])
([nil nil ((245 . 246)) nil (25596 35797 18693 613000) 0 nil])
([nil nil ((246 . 255)) nil (25596 35797 18692 821000) 0 nil])
([nil nil ((255 . 276)) nil (25596 35797 18691 890000) 0 nil])
([nil nil ((276 . 286)) nil (25596 35797 18691 128000) 0 nil])
([nil nil ((286 . 296)) nil (25596 35797 18690 377000) 0 nil])
([nil nil ((296 . 298)) nil (25596 35797 18689 705000) 0 nil])
([nil nil ((297 . 304)) nil (25596 35797 18688 824000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t)) . -303) (undo-tree-id733 . -1) 304) nil (25596 35797 18687 341000) 0 nil])
([nil nil ((304 . 305)) nil (25596 35797 18686 18000) 0 nil])
([nil nil ((305 . 312)) nil (25596 35797 18685 177000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t)) . -310) (undo-tree-id731 . -1) (#(" " 0 1 (fontified t)) . -311) (undo-tree-id732 . -1) 312) nil (25596 35797 18684 105000) 0 nil])
([nil nil ((#(" " 0 1 (fontified nil)) . 317) (316 . 317) (310 . 322)) nil (25596 35797 18681 430000) 0 nil])
([nil nil ((322 . 343)) nil (25596 35797 18680 298000) 0 nil])
([nil nil ((343 . 344)) nil (25596 35797 18679 185000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t)) . -343) (undo-tree-id730 . -1) 344) nil (25596 35797 18678 33000) 0 nil])
([nil nil ((343 . 364)) nil (25596 35797 18676 580000) 0 nil])
([nil nil ((364 . 377)) nil (25596 35797 18675 899000) 0 nil])
([nil nil ((#("m" 0 1 (fontified t)) . -376) (undo-tree-id729 . -1) 377) nil (25596 35797 18674 927000) 0 nil])
([nil nil ((376 . 377)) nil (25596 35797 18673 645000) 0 nil])
([nil nil ((377 . 398)) nil (25596 35797 18672 903000) 0 nil])
([nil nil ((399 . 408) (#(" " 0 1 (fontified nil)) . 396) (395 . 396) (398 . 399)) nil (25596 35797 18671 721000) 0 nil])
([nil nil ((408 . 410)) nil (25596 35797 18670 639000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t)) . -408) (undo-tree-id727 . -1) (#(" " 0 1 (fontified t)) . -409) (undo-tree-id728 . -1) 410) nil (25596 35797 18669 447000) 0 nil])
([nil nil ((408 . 429)) nil (25596 35797 18667 333000) 0 nil])
([nil nil ((410 . 412)) nil (25596 35797 18666 351000) 0 nil])
([nil nil ((408 . 409)) nil (25596 35797 18665 509000) 0 nil])
([nil nil ((431 . 445)) nil (25596 35797 18664 97000) 0 nil])
([nil nil ((445 . 461)) nil (25596 35797 18663 275000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -459) (undo-tree-id725 . -1) (#("a" 0 1 (fontified t)) . -460) (undo-tree-id726 . -1) 461) nil (25596 35797 18662 73000) 0 nil])
([nil nil ((459 . 475)) nil (25596 35797 18660 19000) 0 nil])
([nil nil ((#("both " 0 5 (fontified t)) . -459) (undo-tree-id724 . -5) 464) nil (25596 35797 18659 37000) 0 nil])
([nil nil ((459 . 464)) nil (25596 35797 18657 664000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -473) (undo-tree-id723 . -1) 474) nil (25596 35797 18656 442000) 0 nil])
([nil nil ((473 . 474)) nil (25596 35797 18655 9000) 0 nil])
([nil nil ((475 . 476) (#("    " 0 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t)) . -475) (474 . 475)) nil (25596 35797 18654 168000) 0 nil])
([nil nil ((476 . 497)) nil (25596 35797 18652 925000) 0 nil])
([nil nil ((497 . 507)) nil (25596 35797 18652 114000) 0 nil])
([nil nil ((507 . 517)) nil (25596 35797 18651 292000) 0 nil])
([nil nil ((#("y" 0 1 (fontified t)) . -516) (undo-tree-id722 . -1) 517) nil (25596 35797 18650 451000) 0 nil])
([nil nil ((516 . 537)) nil (25596 35797 18648 908000) 0 nil])
([nil nil ((537 . 548)) nil (25596 35797 18647 816000) 0 nil])
([nil nil ((548 . 560)) nil (25596 35797 18647 144000) 0 nil])
([nil nil ((549 . 555)) nil (25596 35797 18646 233000) 0 nil])
([nil nil ((#("graph " 0 6 (org-emphasis t font-lock-multiline t face (italic) fontified t)) . -549) (undo-tree-id721 . -6) 555) nil (25596 35797 18645 271000) 0 nil])
([nil nil ((548 . 556)) nil (25596 35797 18643 788000) 0 nil])
([nil nil ((530 . 551)) nil (25596 35797 18642 977000) 0 nil])
([nil nil ((551 . 558)) nil (25596 35797 18642 155000) 0 nil])
([nil nil ((#("also" 0 4 (fontified t)) . -554) (undo-tree-id720 . -4) 558) nil (25596 35797 18640 832000) 0 nil])
([nil nil ((557 . 567) (#(" " 0 1 (fontified nil)) . 556) (554 . 558)) nil (25596 35797 18639 209000) 0 nil])
([nil nil ((605 . 606)) nil (25596 35797 18638 147000) 0 nil])
([nil nil ((606 . 627)) nil (25596 35797 18637 246000) 0 nil])
([nil nil ((627 . 635)) nil (25596 35797 18636 344000) 0 nil])
([nil nil ((#("branch" 0 6 (fontified t)) . -629) (undo-tree-id719 . -6) 635) nil (25596 35797 18635 262000) 0 nil])
([nil nil ((#("a " 0 2 (fontified t)) . -627) (undo-tree-id718 . -2) 629) nil (25596 35797 18633 408000) 0 nil])
([nil nil ((627 . 632)) nil (25596 35797 18631 795000) 0 nil])
([nil nil ((643 . 650) (#(" " 0 1 (fontified nil)) . 631) (630 . 631) (632 . 643)) nil (25596 35797 18630 863000) 0 nil])
([nil nil ((650 . 652)) nil (25596 35797 18629 341000) 0 nil])
([nil nil ((652 . 673)) nil (25596 35797 18628 479000) 0 nil])
([nil nil ((673 . 677)) nil (25596 35797 18627 537000) 0 nil])
([nil nil ((677 . 679)) nil (25596 35797 18626 645000) 0 nil])
([nil nil ((679 . 681)) nil (25596 35797 18625 654000) 0 nil])
([nil nil ((681 . 702)) nil (25596 35797 18624 541000) 0 nil])
([nil nil ((702 . 706)) nil (25596 35797 18623 740000) 0 nil])
([nil nil ((706 . 708)) nil (25596 35797 18622 938000) 0 nil])
([nil nil ((708 . 729)) nil (25596 35797 18622 147000) 0 nil])
([nil nil ((729 . 730)) nil (25596 35797 18621 45000) 0 nil])
([nil nil ((730 . 735)) nil (25596 35797 18620 123000) 0 nil])
([nil nil ((#("s" 0 1 (face org-level-3 fontified t)) . -734) (undo-tree-id717 . -1) 735) nil (25596 35797 18619 241000) 0 nil])
([nil nil ((#("The " 0 4 (face org-level-3 fontified t)) . -712) (undo-tree-id716 . -4) 716) nil (25596 35797 18617 87000) 0 nil])
([nil nil ((712 . 717) (#("order" 0 5 (face org-level-3 fontified t)) . 712)) nil (25596 35797 18615 494000) 0 nil])
([nil nil ((717 . 718)) nil (25596 35797 18614 633000) 0 nil])
([nil nil ((731 . 733)) nil (25596 35797 18613 841000) 0 nil])
([nil nil ((733 . 734)) nil (25596 35797 18613 130000) 0 nil])
([nil nil ((733 . 735)) nil (25596 35797 18612 408000) 0 nil])
([nil nil ((736 . 738)) nil (25596 35797 18611 757000) 0 nil])
([nil nil ((738 . 742)) nil (25596 35797 18611 166000) 0 nil])
([nil nil ((#("-" 0 1 (fontified t)) . -741) (undo-tree-id701 . -1) (undo-tree-id702 . -1) (undo-tree-id703 . -1) (undo-tree-id704 . -1) (undo-tree-id705 . -1) (undo-tree-id706 . -1) (undo-tree-id707 . -1) (undo-tree-id708 . -1) (undo-tree-id709 . -1) (undo-tree-id710 . -1) (undo-tree-id711 . -1) (undo-tree-id712 . -1) (undo-tree-id713 . -1) (undo-tree-id714 . -1) (undo-tree-id715 . -1) 742) nil (25596 35797 18609 563000) 0 nil])
([nil nil ((741 . 747)) nil (25596 35797 18601 568000) 0 nil])
([nil nil ((#("P" 0 1 (org-emphasis t font-lock-multiline t face (bold) fontified t)) . -738) (undo-tree-id638 . -1) (undo-tree-id639 . -1) (undo-tree-id640 . -1) (undo-tree-id641 . -1) (undo-tree-id642 . -1) (undo-tree-id643 . -1) (undo-tree-id644 . -1) (undo-tree-id645 . -1) (undo-tree-id646 . -1) (undo-tree-id647 . -1) (undo-tree-id648 . -1) (undo-tree-id649 . -1) (undo-tree-id650 . -1) (undo-tree-id651 . -1) (undo-tree-id652 . -1) (undo-tree-id653 . -1) (undo-tree-id654 . -1) (undo-tree-id655 . -1) (undo-tree-id656 . -1) (undo-tree-id657 . -1) (undo-tree-id658 . -1) (undo-tree-id659 . -1) (undo-tree-id660 . -1) (undo-tree-id661 . -1) (undo-tree-id662 . -1) (undo-tree-id663 . -1) (undo-tree-id664 . -1) (undo-tree-id665 . -1) (undo-tree-id666 . -1) (undo-tree-id667 . -1) (undo-tree-id668 . -1) (undo-tree-id669 . -1) (undo-tree-id670 . -1) (undo-tree-id671 . -1) (undo-tree-id672 . -1) (undo-tree-id673 . -1) (undo-tree-id674 . -1) (undo-tree-id675 . -1) (undo-tree-id676 . -1) (undo-tree-id677 . -1) (undo-tree-id678 . -1) (undo-tree-id679 . -1) (undo-tree-id680 . -1) (undo-tree-id681 . -1) (undo-tree-id682 . -1) (undo-tree-id683 . -1) (undo-tree-id684 . -1) (#("r" 0 1 (org-emphasis t font-lock-multiline t face (bold) fontified t)) . -739) (undo-tree-id685 . -1) (undo-tree-id686 . -1) (undo-tree-id687 . -1) (undo-tree-id688 . -1) (undo-tree-id689 . -1) (undo-tree-id690 . -1) (undo-tree-id691 . -1) (undo-tree-id692 . -1) (undo-tree-id693 . -1) (undo-tree-id694 . -1) (undo-tree-id695 . -1) (undo-tree-id696 . -1) (undo-tree-id697 . -1) (undo-tree-id698 . -1) (undo-tree-id699 . -1) (undo-tree-id700 . -1) 740) nil (25596 35797 18599 243000) 0 nil])
([nil nil ((738 . 740)) nil (25596 35797 18566 812000) 0 nil])
([nil nil ((#("e" 0 1 (org-emphasis t font-lock-multiline t face (bold) fontified t)) . -740) (undo-tree-id585 . -1) (undo-tree-id586 . -1) (undo-tree-id587 . -1) (undo-tree-id588 . -1) (undo-tree-id589 . -1) (undo-tree-id590 . -1) (undo-tree-id591 . -1) (undo-tree-id592 . -1) (undo-tree-id593 . -1) (undo-tree-id594 . -1) (undo-tree-id595 . -1) (undo-tree-id596 . -1) (undo-tree-id597 . -1) (undo-tree-id598 . -1) (undo-tree-id599 . -1) (undo-tree-id600 . -1) (undo-tree-id601 . -1) (undo-tree-id602 . -1) (undo-tree-id603 . -1) (undo-tree-id604 . -1) (undo-tree-id605 . -1) (undo-tree-id606 . -1) (undo-tree-id607 . -1) (undo-tree-id608 . -1) (undo-tree-id609 . -1) (undo-tree-id610 . -1) (undo-tree-id611 . -1) (undo-tree-id612 . -1) (undo-tree-id613 . -1) (undo-tree-id614 . -1) (undo-tree-id615 . -1) (undo-tree-id616 . -1) (undo-tree-id617 . -1) (undo-tree-id618 . -1) (undo-tree-id619 . -1) (undo-tree-id620 . -1) (undo-tree-id621 . -1) (undo-tree-id622 . -1) (undo-tree-id623 . -1) (undo-tree-id624 . -1) (undo-tree-id625 . -1) (undo-tree-id626 . -1) (undo-tree-id627 . -1) (undo-tree-id628 . -1) (undo-tree-id629 . -1) (undo-tree-id630 . -1) (undo-tree-id631 . -1) (undo-tree-id632 . -1) (undo-tree-id633 . -1) (undo-tree-id634 . -1) (undo-tree-id635 . -1) (undo-tree-id636 . -1) (undo-tree-id637 . -1) 741) nil (25596 35797 18564 888000) 0 nil])
([nil nil ((733 . 751) (#("  + 
  + *Inorder*" 0 2 (fontified nil) 2 4 (fontified nil) 4 5 (fontified nil) 5 7 (fontified nil) 7 9 (fontified nil) 9 18 (org-emphasis t font-lock-multiline t face (bold) fontified nil)) . 733) (undo-tree-id252 . -8) (undo-tree-id253 . -8) (undo-tree-id254 . -8) (undo-tree-id255 . -8) (undo-tree-id256 . -8) (undo-tree-id257 . -8) (undo-tree-id258 . -8) (undo-tree-id259 . -8) (undo-tree-id260 . -8) (undo-tree-id261 . -8) (undo-tree-id262 . -8) (undo-tree-id263 . -8) (undo-tree-id264 . -8) (undo-tree-id265 . -8) (undo-tree-id266 . -8) (undo-tree-id267 . -8) (undo-tree-id268 . -8) (undo-tree-id269 . -6) (undo-tree-id270 . -6) (undo-tree-id271 . -6) (undo-tree-id272 . -6) (undo-tree-id273 . -6) (undo-tree-id274 . -6) (undo-tree-id275 . -6) (undo-tree-id276 . -7) (undo-tree-id277 . -6) (undo-tree-id278 . -7) (undo-tree-id279 . -7) (undo-tree-id280 . -7) (undo-tree-id281 . -7) (undo-tree-id282 . -7) (undo-tree-id283 . -7) (undo-tree-id284 . -8) (undo-tree-id285 . -7) (undo-tree-id286 . -8) (undo-tree-id287 . -8) (undo-tree-id288 . -8) (undo-tree-id289 . -8) (undo-tree-id290 . -8) (undo-tree-id291 . -8) (undo-tree-id292 . -8) (undo-tree-id293 . -8) (undo-tree-id294 . -8) (undo-tree-id295 . -8) (undo-tree-id296 . -8) (undo-tree-id297 . -8) (undo-tree-id298 . -8) (undo-tree-id299 . -9) (undo-tree-id300 . -8) (undo-tree-id301 . -9) (undo-tree-id302 . -9) (undo-tree-id303 . -9) (undo-tree-id304 . -9) (undo-tree-id305 . -9) (undo-tree-id306 . -9) (undo-tree-id307 . -9) (undo-tree-id308 . -9) (undo-tree-id309 . -9) (undo-tree-id310 . -9) (undo-tree-id311 . -9) (undo-tree-id312 . -9) (undo-tree-id313 . -9) (undo-tree-id314 . -9) (undo-tree-id315 . -9) (undo-tree-id316 . -9) (undo-tree-id317 . -9) (undo-tree-id318 . -9) (undo-tree-id319 . -9) (undo-tree-id320 . -9) (undo-tree-id321 . -10) (undo-tree-id322 . -9) (undo-tree-id323 . -10) (undo-tree-id324 . -10) (undo-tree-id325 . -10) (undo-tree-id326 . -10) (undo-tree-id327 . -10) (undo-tree-id328 . -10) (undo-tree-id329 . -10) (undo-tree-id330 . -10) (undo-tree-id331 . -10) (undo-tree-id332 . -10) (undo-tree-id333 . -10) (undo-tree-id334 . -10) (undo-tree-id335 . -10) (undo-tree-id336 . -10) (undo-tree-id337 . -10) (undo-tree-id338 . -10) (undo-tree-id339 . -10) (undo-tree-id340 . -10) (undo-tree-id341 . -10) (undo-tree-id342 . -10) (undo-tree-id343 . -10) (undo-tree-id344 . -10) (undo-tree-id345 . -10) (undo-tree-id346 . -10) (undo-tree-id347 . -10) (undo-tree-id348 . -10) (undo-tree-id349 . -10) (undo-tree-id350 . -10) (undo-tree-id351 . -10) (undo-tree-id352 . -10) (undo-tree-id353 . -10) (undo-tree-id354 . -10) (undo-tree-id355 . -10) (undo-tree-id356 . -10) (undo-tree-id357 . -10) (undo-tree-id358 . -10) (undo-tree-id359 . -12) (undo-tree-id360 . -10) (undo-tree-id361 . -12) (undo-tree-id362 . -12) (undo-tree-id363 . -12) (undo-tree-id364 . -12) (undo-tree-id365 . -12) (undo-tree-id366 . -12) (undo-tree-id367 . -12) (undo-tree-id368 . -12) (undo-tree-id369 . -12) (undo-tree-id370 . -12) (undo-tree-id371 . -12) (undo-tree-id372 . -12) (undo-tree-id373 . -12) (undo-tree-id374 . -12) (undo-tree-id375 . -12) (undo-tree-id376 . -12) (undo-tree-id377 . -12) (undo-tree-id378 . -12) (undo-tree-id379 . -12) (undo-tree-id380 . -12) (undo-tree-id381 . -12) (undo-tree-id382 . -12) (undo-tree-id383 . -12) (undo-tree-id384 . -12) (undo-tree-id385 . -12) (undo-tree-id386 . -12) (undo-tree-id387 . -12) (undo-tree-id388 . -12) (undo-tree-id389 . -12) (undo-tree-id390 . -12) (undo-tree-id391 . -12) (undo-tree-id392 . -12) (undo-tree-id393 . -12) (undo-tree-id394 . -12) (undo-tree-id395 . -12) (undo-tree-id396 . -12) (undo-tree-id397 . -12) (undo-tree-id398 . -12) (undo-tree-id399 . -12) (undo-tree-id400 . -12) (undo-tree-id401 . -12) (undo-tree-id402 . -12) (undo-tree-id403 . -12) (undo-tree-id404 . -13) (undo-tree-id405 . -12) (undo-tree-id406 . -13) (undo-tree-id407 . -13) (undo-tree-id408 . -13) (undo-tree-id409 . -13) (undo-tree-id410 . -13) (undo-tree-id411 . -13) (undo-tree-id412 . -14) (undo-tree-id413 . -13) (undo-tree-id414 . -14) (undo-tree-id415 . -14) (undo-tree-id416 . -14) (undo-tree-id417 . -14) (undo-tree-id418 . -14) (undo-tree-id419 . -14) (undo-tree-id420 . -15) (undo-tree-id421 . -14) (undo-tree-id422 . -15) (undo-tree-id423 . -15) (undo-tree-id424 . -15) (undo-tree-id425 . -15) (undo-tree-id426 . -15) (undo-tree-id427 . -15) (undo-tree-id428 . -16) (undo-tree-id429 . -15) (undo-tree-id430 . -16) (undo-tree-id431 . -16) (undo-tree-id432 . -16) (undo-tree-id433 . -16) (undo-tree-id434 . -16) (undo-tree-id435 . -16) (undo-tree-id436 . -17) (undo-tree-id437 . -16) (undo-tree-id438 . -17) (undo-tree-id439 . -17) (undo-tree-id440 . -17) (undo-tree-id441 . -17) (undo-tree-id442 . -17) (undo-tree-id443 . -17) (undo-tree-id444 . -17) (undo-tree-id445 . -17) (undo-tree-id446 . -17) (undo-tree-id447 . -17) (undo-tree-id448 . -17) (undo-tree-id449 . -17) (undo-tree-id450 . -17) (undo-tree-id451 . -18) (undo-tree-id452 . -17) (undo-tree-id453 . -18) (undo-tree-id454 . -18) (undo-tree-id455 . -18) (undo-tree-id456 . -18) (undo-tree-id457 . -18) (undo-tree-id458 . -18) (undo-tree-id459 . -18) (undo-tree-id460 . -18) (undo-tree-id461 . -18) (undo-tree-id462 . -18) (undo-tree-id463 . -18) (undo-tree-id464 . -18) (undo-tree-id465 . -18) (undo-tree-id466 . -18) (undo-tree-id467 . -18) (undo-tree-id468 . -18) (undo-tree-id469 . -18) (undo-tree-id470 . -18) (undo-tree-id471 . -18) (undo-tree-id472 . -18) (undo-tree-id473 . -18) (undo-tree-id474 . -18) (undo-tree-id475 . -18) (undo-tree-id476 . -18) (undo-tree-id477 . -18) (undo-tree-id478 . -18) (undo-tree-id479 . -18) (undo-tree-id480 . -18) (undo-tree-id481 . -18) (undo-tree-id482 . -10) (undo-tree-id483 . -18) (undo-tree-id484 . -10) (undo-tree-id485 . -10) (undo-tree-id486 . -10) (undo-tree-id487 . -10) (undo-tree-id488 . -10) (undo-tree-id489 . -10) (undo-tree-id490 . -10) (undo-tree-id491 . -10) (undo-tree-id492 . -10) (undo-tree-id493 . -10) (undo-tree-id494 . -10) (undo-tree-id495 . -10) (undo-tree-id496 . -10) (undo-tree-id497 . -10) (undo-tree-id498 . -10) (undo-tree-id499 . -10) (undo-tree-id500 . -10) (undo-tree-id501 . -10) (undo-tree-id502 . -10) (undo-tree-id503 . -10) (undo-tree-id504 . -10) (undo-tree-id505 . -10) (undo-tree-id506 . -10) (undo-tree-id507 . -10) (undo-tree-id508 . -10) (undo-tree-id509 . -10) (undo-tree-id510 . -10) (undo-tree-id511 . -10) (undo-tree-id512 . -10) (undo-tree-id513 . -10) (undo-tree-id514 . -10) (undo-tree-id515 . -10) (undo-tree-id516 . -10) (undo-tree-id517 . -10) (undo-tree-id518 . -10) (undo-tree-id519 . -10) (undo-tree-id520 . -10) (undo-tree-id521 . -10) (undo-tree-id522 . -10) (undo-tree-id523 . -10) (undo-tree-id524 . -10) (undo-tree-id525 . -10) (undo-tree-id526 . -10) (undo-tree-id527 . -10) (undo-tree-id528 . -10) (undo-tree-id529 . -11) (undo-tree-id530 . -10) (undo-tree-id531 . -11) (undo-tree-id532 . -11) (undo-tree-id533 . -11) (undo-tree-id534 . -11) (undo-tree-id535 . -11) (undo-tree-id536 . -11) (undo-tree-id537 . -12) (undo-tree-id538 . -11) (undo-tree-id539 . -12) (undo-tree-id540 . -12) (undo-tree-id541 . -12) (undo-tree-id542 . -12) (undo-tree-id543 . -12) (undo-tree-id544 . -12) (undo-tree-id545 . -12) (undo-tree-id546 . -12) (undo-tree-id547 . -12) (undo-tree-id548 . -12) (undo-tree-id549 . -12) (undo-tree-id550 . -12) (undo-tree-id551 . -12) (undo-tree-id552 . -12) (undo-tree-id553 . -12) (undo-tree-id554 . -12) (undo-tree-id555 . -12) (undo-tree-id556 . -12) (undo-tree-id557 . -12) (undo-tree-id558 . -12) (undo-tree-id559 . -12) (undo-tree-id560 . -12) (undo-tree-id561 . -12) (undo-tree-id562 . -12) (undo-tree-id563 . -12) (undo-tree-id564 . -12) (undo-tree-id565 . -12) (undo-tree-id566 . -12) (undo-tree-id567 . -12) (undo-tree-id568 . -12) (undo-tree-id569 . -12) (undo-tree-id570 . -12) (undo-tree-id571 . -12) (undo-tree-id572 . -12) (undo-tree-id573 . -12) (undo-tree-id574 . -12) (undo-tree-id575 . -18) (undo-tree-id576 . -12) (undo-tree-id577 . -18) (undo-tree-id578 . -18) (undo-tree-id579 . -18) (undo-tree-id580 . -18) (undo-tree-id581 . -18) (undo-tree-id582 . -18) (undo-tree-id583 . -18) (undo-tree-id584 . -5) (733 . 738) 746) nil (25596 35797 18530 302000) 0 nil])
([nil nil ((751 . 753)) nil (25596 35797 18309 422000) 0 nil])
([nil nil ((#("{" 0 1 (fontified t)) . -752) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) 753) nil (25596 35797 18307 959000) 0 nil])
([nil nil ((752 . 753)) nil (25596 35797 18300 725000) 0 nil])
([nil nil ((753 . 761)) nil (25596 35797 18300 174000) 0 nil])
([nil nil ((747 . 766) (#("  + 
  + *Preorder*" 0 2 (fontified nil) 2 4 (fontified nil) 4 5 (fontified nil) 5 7 (fontified nil) 7 9 (fontified nil) 9 19 (org-emphasis t font-lock-multiline t face (bold) fontified nil)) . 747) (undo-tree-id66 . -9) (undo-tree-id67 . -9) (undo-tree-id68 . -9) (undo-tree-id69 . -9) (undo-tree-id70 . -9) (undo-tree-id71 . -9) (undo-tree-id72 . -9) (undo-tree-id73 . -9) (undo-tree-id74 . -10) (undo-tree-id75 . -9) (undo-tree-id76 . -10) (undo-tree-id77 . -10) (undo-tree-id78 . -10) (undo-tree-id79 . -10) (undo-tree-id80 . -10) (undo-tree-id81 . -10) (undo-tree-id82 . -10) (undo-tree-id83 . -10) (undo-tree-id84 . -10) (undo-tree-id85 . -10) (undo-tree-id86 . -10) (undo-tree-id87 . -10) (undo-tree-id88 . -10) (undo-tree-id89 . -10) (undo-tree-id90 . -10) (undo-tree-id91 . -10) (undo-tree-id92 . -10) (undo-tree-id93 . -10) (undo-tree-id94 . -10) (undo-tree-id95 . -10) (undo-tree-id96 . -10) (undo-tree-id97 . -10) (undo-tree-id98 . -10) (undo-tree-id99 . -10) (undo-tree-id100 . -10) (undo-tree-id101 . -10) (undo-tree-id102 . -10) (undo-tree-id103 . -10) (undo-tree-id104 . -10) (undo-tree-id105 . -10) (undo-tree-id106 . -10) (undo-tree-id107 . -10) (undo-tree-id108 . -10) (undo-tree-id109 . -10) (undo-tree-id110 . -10) (undo-tree-id111 . -10) (undo-tree-id112 . -10) (undo-tree-id113 . -10) (undo-tree-id114 . -10) (undo-tree-id115 . -10) (undo-tree-id116 . -10) (undo-tree-id117 . -10) (undo-tree-id118 . -10) (undo-tree-id119 . -11) (undo-tree-id120 . -10) (undo-tree-id121 . -11) (undo-tree-id122 . -11) (undo-tree-id123 . -11) (undo-tree-id124 . -11) (undo-tree-id125 . -11) (undo-tree-id126 . -11) (undo-tree-id127 . -11) (undo-tree-id128 . -11) (undo-tree-id129 . -11) (undo-tree-id130 . -11) (undo-tree-id131 . -11) (undo-tree-id132 . -11) (undo-tree-id133 . -11) (undo-tree-id134 . -11) (undo-tree-id135 . -11) (undo-tree-id136 . -11) (undo-tree-id137 . -11) (undo-tree-id138 . -11) (undo-tree-id139 . -11) (undo-tree-id140 . -11) (undo-tree-id141 . -11) (undo-tree-id142 . -11) (undo-tree-id143 . -11) (undo-tree-id144 . -11) (undo-tree-id145 . -11) (undo-tree-id146 . -11) (undo-tree-id147 . -11) (undo-tree-id148 . -11) (undo-tree-id149 . -11) (undo-tree-id150 . -12) (undo-tree-id151 . -11) (undo-tree-id152 . -12) (undo-tree-id153 . -12) (undo-tree-id154 . -12) (undo-tree-id155 . -12) (undo-tree-id156 . -12) (undo-tree-id157 . -12) (undo-tree-id158 . -13) (undo-tree-id159 . -12) (undo-tree-id160 . -13) (undo-tree-id161 . -13) (undo-tree-id162 . -13) (undo-tree-id163 . -13) (undo-tree-id164 . -13) (undo-tree-id165 . -13) (undo-tree-id166 . -14) (undo-tree-id167 . -13) (undo-tree-id168 . -14) (undo-tree-id169 . -14) (undo-tree-id170 . -14) (undo-tree-id171 . -14) (undo-tree-id172 . -14) (undo-tree-id173 . -14) (undo-tree-id174 . -15) (undo-tree-id175 . -14) (undo-tree-id176 . -15) (undo-tree-id177 . -15) (undo-tree-id178 . -15) (undo-tree-id179 . -15) (undo-tree-id180 . -15) (undo-tree-id181 . -15) (undo-tree-id182 . -16) (undo-tree-id183 . -15) (undo-tree-id184 . -16) (undo-tree-id185 . -16) (undo-tree-id186 . -16) (undo-tree-id187 . -16) (undo-tree-id188 . -16) (undo-tree-id189 . -16) (undo-tree-id190 . -17) (undo-tree-id191 . -16) (undo-tree-id192 . -17) (undo-tree-id193 . -17) (undo-tree-id194 . -17) (undo-tree-id195 . -17) (undo-tree-id196 . -17) (undo-tree-id197 . -17) (undo-tree-id198 . -18) (undo-tree-id199 . -17) (undo-tree-id200 . -18) (undo-tree-id201 . -18) (undo-tree-id202 . -18) (undo-tree-id203 . -18) (undo-tree-id204 . -18) (undo-tree-id205 . -18) (undo-tree-id206 . -18) (undo-tree-id207 . -18) (undo-tree-id208 . -18) (undo-tree-id209 . -18) (undo-tree-id210 . -18) (undo-tree-id211 . -18) (undo-tree-id212 . -18) (undo-tree-id213 . -18) (undo-tree-id214 . -18) (undo-tree-id215 . -18) (undo-tree-id216 . -18) (undo-tree-id217 . -18) (undo-tree-id218 . -18) (undo-tree-id219 . -18) (undo-tree-id220 . -19) (undo-tree-id221 . -18) (undo-tree-id222 . -19) (undo-tree-id223 . -19) (undo-tree-id224 . -19) (undo-tree-id225 . -19) (undo-tree-id226 . -19) (undo-tree-id227 . -19) (undo-tree-id228 . -19) (undo-tree-id229 . -19) (undo-tree-id230 . -19) (undo-tree-id231 . -19) (undo-tree-id232 . -19) (undo-tree-id233 . -19) (undo-tree-id234 . -19) (undo-tree-id235 . -19) (undo-tree-id236 . -5) (747 . 752) 761) nil (25596 35797 18290 846000) 0 nil])
([nil nil ((766 . 775)) nil (25596 35797 17758 633000) 0 nil])
([nil nil ((766 . 767)) nil (25596 35797 17757 391000) 0 nil])
([nil nil ((776 . 777)) nil (25596 35797 17752 852000) 0 nil])
([nil nil ((678 . 679) (t 25596 35797 48529 600000)) nil (25596 36003 265982 877000) 0 nil])
([nil nil ((679 . 695)) nil (25596 36003 265981 845000) 0 nil])
([nil nil ((#(" " 0 1 (face org-level-3 fontified t)) . -661) (undo-tree-id758 . -1) 662) nil (25596 36003 265981 193000) 0 nil])
([nil nil ((661 . 662)) nil (25596 36003 265980 121000) 0 nil])
([nil nil ((695 . 696)) nil (25596 36003 265979 620000) 0 nil])
([nil nil ((695 . 705)) nil (25596 36003 265978 909000) 0 nil])
([nil nil ((#("In " 0 3 (fontified t)) . -679) (undo-tree-id757 . -3) 682) nil (25596 36003 265978 47000) 0 nil])
([nil nil ((679 . 680) (#("a" 0 1 (fontified t)) . 679)) nil (25596 36003 265976 4000) 0 nil])
([nil nil ((702 . 718)) nil (25596 36003 265974 891000) 0 nil])
([nil nil ((718 . 739)) nil (25596 36003 265973 869000) 0 nil])
([nil nil ((739 . 743)) nil (25596 36003 265972 978000) 0 nil])
([nil nil ((743 . 745)) nil (25596 36003 265972 347000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -743) (undo-tree-id755 . -1) (#("s" 0 1 (fontified t)) . -744) (undo-tree-id756 . -1) 745) nil (25596 36003 265971 24000) 0 nil])
([nil nil ((743 . 757)) nil (25596 36003 265968 179000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -752) (undo-tree-id750 . -1) (#("h" 0 1 (fontified t)) . -753) (undo-tree-id751 . -1) (#("e" 0 1 (fontified t)) . -754) (undo-tree-id752 . -1) (#(" " 0 1 (fontified t)) . -755) (undo-tree-id753 . -1) (#("n" 0 1 (fontified t)) . -756) (undo-tree-id754 . -1) 757) nil (25596 36003 265965 964000) 0 nil])
([nil nil ((752 . 755)) nil (25596 36003 265942 951000) 0 nil])
([nil nil ((755 . 768)) nil (25596 36003 265941 358000) 0 nil])
([nil nil ((251 . 272)) nil (25596 36003 265663 18000) 0 nil])
([nil nil ((272 . 289)) nil (25596 36003 265661 886000) 0 nil])
([nil nil ((#(" " 0 1 (fontified nil)) . -470) (469 . 470) (#(" " 0 1 (fontified nil)) . -397) (396 . 397) (#(" " 0 1 (fontified nil)) . -317) (316 . 317) (#(" " 0 1 (fontified nil)) . -237) (236 . 237) (#(" " 0 1 (fontified nil)) . -158) (157 . 158) (433 . 434) (#("
" 0 1 (fontified t)) . 433) (354 . 355) (#("
" 0 1 (fontified t)) . 354) (236 . 237) (#("
" 0 1 (fontified t)) . 236) (157 . 158) (#("
" 0 1 (fontified t)) . 157) 289) nil (25596 36003 265659 742000) 0 nil])
([nil nil ((#("from" 0 4 (fontified t)) . -355) (undo-tree-id749 . -4) 359) nil (25596 36003 265656 155000) 0 nil])
([nil nil ((#("edge " 0 5 (fontified t)) . -350) (undo-tree-id748 . -5) 355) nil (25596 36003 265654 492000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t)) . -348) (undo-tree-id746 . -1) (#(" " 0 1 (fontified t)) . -349) (undo-tree-id747 . -1) 350) nil (25596 36003 265652 498000) 0 nil])
([nil nil ((348 . 367)) nil (25596 36003 265649 923000) 0 nil])
([nil nil ((#("from" 0 4 (fontified t)) . -416) (undo-tree-id745 . -4) 420) nil (25596 36003 265648 450000) 0 nil])
([nil nil ((#("edge " 0 5 (fontified t)) . -411) (undo-tree-id744 . -5) 416) nil (25596 36003 265646 476000) 0 nil])
([nil nil ((#("an " 0 3 (fontified t)) . -408) (undo-tree-id743 . -3) 411) nil (25596 36003 265644 533000) 0 nil])
([nil nil ((408 . 429)) nil (25596 36003 265642 749000) 0 nil])
([nil nil ((429 . 442)) nil (25596 36003 265641 928000) 0 nil])
([nil nil ((#("to" 0 2 (fontified t)) . -448) (undo-tree-id742 . -2) 450) nil (25596 36003 265640 235000) 0 nil])
([nil nil ((448 . 451)) nil (25596 36003 265638 121000) 0 nil])
([nil nil ((#(" " 0 1 (fontified nil)) . -473) (472 . 473) (#(" " 0 1 (fontified nil)) . -394) (393 . 394) (#(" " 0 1 (fontified nil)) . -317) (316 . 317) (#(" " 0 1 (fontified nil)) . -237) (236 . 237) (#(" " 0 1 (fontified nil)) . -158) (157 . 158) (500 . 501) (#("
" 0 1 (fontified t)) . 500) (404 . 405) (#("
" 0 1 (fontified t)) . 404) (316 . 317) (#("
" 0 1 (fontified t)) . 316) (236 . 237) (#("
" 0 1 (fontified t)) . 236) (157 . 158) (#("
" 0 1 (fontified t)) . 157) 451) nil (25596 36003 265635 215000) 0 nil])
([nil nil ((#("links" 0 5 (fontified t)) . -519) (undo-tree-id741 . -5) 524) nil (25596 36003 265630 336000) 0 nil])
([nil nil ((519 . 524)) nil (25596 36003 265615 868000) 0 nil])
([nil nil ((634 . 635) (t 25596 36003 285752 0)) nil (25596 36013 327925 533000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . 800) (t 25596 36013 351856 600000)) nil (25596 36351 445789 114000) 0 nil])
([nil nil ((838 . 858) (#(" " 0 1 (fontified nil)) . 827) (826 . 827) (837 . 838)) nil (25596 36351 445788 2000) 0 nil])
([nil nil ((858 . 859)) nil (25596 36351 445786 760000) 0 nil])
([nil nil ((859 . 880)) nil (25596 36351 445786 199000) 0 nil])
([nil nil ((880 . 901)) nil (25596 36351 445785 297000) 0 nil])
([nil nil ((901 . 902)) nil (25596 36351 445784 696000) 0 nil])
([nil nil ((902 . 907)) nil (25596 36351 445784 74000) 0 nil])
([nil nil ((912 . 928) (#(" " 0 1 (fontified nil)) . 896) (895 . 896) (907 . 912)) nil (25596 36351 445783 353000) 0 nil])
([nil nil ((928 . 934)) nil (25596 36351 445781 630000) 0 nil])
([nil nil ((#("v" 0 1 (fontified t)) . -928) (undo-tree-id805 . -1) (#("i" 0 1 (fontified t)) . -929) (undo-tree-id806 . -1) (#("s" 0 1 (fontified t)) . -930) (undo-tree-id807 . -1) (#("i" 0 1 (fontified t)) . -931) (undo-tree-id808 . -1) (#("t" 0 1 (fontified t)) . -932) (undo-tree-id809 . -1) (#("e" 0 1 (fontified t)) . -933) (undo-tree-id810 . -1) 934) nil (25596 36351 445780 7000) 0 nil])
([nil nil ((#("T" 0 1 (fontified t)) . -908) (undo-tree-id785 . -1) (#("h" 0 1 (fontified t)) . -909) (undo-tree-id786 . -1) (#("e" 0 1 (fontified t)) . -910) (undo-tree-id787 . -1) (#(" " 0 1 (fontified t)) . -911) (undo-tree-id788 . -1) (#("n" 0 1 (fontified t)) . -912) (undo-tree-id789 . -1) (#("e" 0 1 (fontified t)) . -913) (undo-tree-id790 . -1) (#("x" 0 1 (fontified t)) . -914) (undo-tree-id791 . -1) (#("t" 0 1 (fontified t)) . -915) (undo-tree-id792 . -1) (#(" " 0 1 (fontified t)) . -916) (undo-tree-id793 . -1) (#("n" 0 1 (fontified t)) . -917) (undo-tree-id794 . -1) (#("o" 0 1 (fontified t)) . -918) (undo-tree-id795 . -1) (#("d" 0 1 (fontified t)) . -919) (undo-tree-id796 . -1) (#("e" 0 1 (fontified t)) . -920) (undo-tree-id797 . -1) (#(" " 0 1 (fontified t)) . -921) (undo-tree-id798 . -1) (#("t" 0 1 (fontified t)) . -922) (undo-tree-id799 . -1) (#("o" 0 1 (fontified t)) . -923) (undo-tree-id800 . -1) (#(" " 0 1 (fontified t)) . -924) (undo-tree-id801 . -1) (#("b" 0 1 (fontified t)) . -925) (undo-tree-id802 . -1) (#("e" 0 1 (fontified t)) . -926) (undo-tree-id803 . -1) (#(" " 0 1 (fontified t)) . -927) (undo-tree-id804 . -1) 928) nil (25596 36351 445772 843000) 0 nil])
([nil nil ((837 . 847)) nil (25596 36351 445760 490000) 0 nil])
([nil nil ((916 . 920)) nil (25596 36351 445759 969000) 0 nil])
([nil nil ((920 . 921)) nil (25596 36351 445758 937000) 0 nil])
([nil nil ((922 . 943)) nil (25596 36351 445758 195000) 0 nil])
([nil nil ((943 . 944)) nil (25596 36351 445757 354000) 0 nil])
([nil nil ((944 . 954)) nil (25596 36351 445756 622000) 0 nil])
([nil nil ((#("has " 0 4 (fontified t)) . -950) (undo-tree-id784 . -4) 954) nil (25596 36351 445755 831000) 0 nil])
([nil nil ((#("m~ " 0 2 (org-emphasis t font-lock-multiline t face (org-code) fontified t) 2 3 (fontified t)) . -947) (undo-tree-id783 . -3) 950) nil (25596 36351 445754 258000) 0 nil])
([nil nil ((#("~" 0 1 (fontified t)) . -946) (undo-tree-id782 . -1) 947) nil (25596 36351 445752 595000) 0 nil])
([nil nil ((946 . 950)) nil (25596 36351 445750 871000) 0 nil])
([nil nil ((#("m~, " 0 2 (org-emphasis t font-lock-multiline t face (org-code) fontified t) 2 3 (fontified t) 3 4 (fontified t)) . -844) (undo-tree-id781 . -4) 848) nil (25596 36351 445749 799000) 0 nil])
([nil nil ((#("say ~" 0 4 (fontified t) 4 5 (org-emphasis t font-lock-multiline t face (org-code) fontified t)) . -839) (undo-tree-id780 . -5) 844) nil (25596 36351 445748 106000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -837) (undo-tree-id778 . -1) (#(" " 0 1 (fontified t)) . -838) (undo-tree-id779 . -1) 839) nil (25596 36351 445746 192000) 0 nil])
([nil nil ((837 . 838)) nil (25596 36351 445743 427000) 0 nil])
([nil nil ((#("o" 0 1 (org-emphasis t font-lock-multiline t face (org-code) fontified t)) . -909) (undo-tree-id777 . -1) 910) nil (25596 36351 445742 485000) 0 nil])
([nil nil ((909 . 910)) nil (25596 36351 445741 233000) 0 nil])
([nil nil ((939 . 953)) nil (25596 36351 445740 672000) 0 nil])
([nil nil ((953 . 974)) nil (25596 36351 445739 890000) 0 nil])
([nil nil ((974 . 984)) nil (25596 36351 445739 289000) 0 nil])
([nil nil ((986 . 1005) (#(" " 0 1 (fontified nil)) . 974) (973 . 974) (984 . 986)) nil (25596 36351 445738 418000) 0 nil])
([nil nil ((1005 . 1023)) nil (25596 36351 445737 185000) 0 nil])
([nil nil ((1023 . 1044)) nil (25596 36351 445736 544000) 0 nil])
([nil nil ((1057 . 1065) (#(" " 0 1 (fontified nil)) . 1054) (1053 . 1054) (1044 . 1057)) nil (25596 36351 445735 272000) 0 nil])
([nil nil ((1065 . 1075)) nil (25596 36351 445734 39000) 0 nil])
([nil nil ((1075 . 1076)) nil (25596 36351 445733 168000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -1007) (undo-tree-id776 . -1) 1008) nil (25596 36351 445732 86000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -1075) (undo-tree-id774 . -1) (#(" " 0 1 (fontified t)) . -1076) (undo-tree-id775 . -1) 1077) nil (25596 36351 445730 362000) 0 nil])
([nil nil ((1075 . 1083)) nil (25596 36351 445728 308000) 0 nil])
([nil nil ((#("m" 0 1 (org-emphasis t font-lock-multiline t face (org-code) fontified t)) . -909) (undo-tree-id773 . -1) 910) nil (25596 36351 445727 236000) 0 nil])
([nil nil ((909 . 910)) nil (25596 36351 445725 723000) 0 nil])
([nil nil ((#("o" 0 1 (org-emphasis t font-lock-multiline t face (org-code) fontified t)) . -909) (undo-tree-id772 . -1) 910) nil (25596 36351 445725 142000) 0 nil])
([nil nil ((909 . 910)) nil (25596 36351 445723 800000) 0 nil])
([nil nil ((799 . 800)) nil (25596 36351 445722 978000) 0 nil])
([nil nil ((800 . 801)) nil (25596 36351 445722 307000) 0 nil])
([nil nil ((#("_" 0 1 (org-emphasis t font-lock-multiline t face (org-code) fontified t)) . -799) (undo-tree-id770 . -1) (#("0" 0 1 (org-emphasis t font-lock-multiline t face (org-code) fontified t)) . -800) (undo-tree-id771 . -1) 801) nil (25596 36351 445721 315000) 0 nil])
([nil nil ((#("m" 0 1 (org-emphasis t font-lock-multiline t face (org-code) fontified t)) . -963) (undo-tree-id769 . -1) 964) nil (25596 36351 445718 800000) 0 nil])
([nil nil ((963 . 964)) nil (25596 36351 445717 458000) 0 nil])
([nil nil ((965 . 970)) nil (25596 36351 445716 596000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -967) (undo-tree-id766 . -1) (#("a" 0 1 (fontified t)) . -968) (undo-tree-id767 . -1) (#("y" 0 1 (fontified t)) . -969) (undo-tree-id768 . -1) 970) nil (25596 36351 445715 454000) 0 nil])
([nil nil ((967 . 970)) nil (25596 36351 445712 578000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -1084) (undo-tree-id762 . -1) (#("h" 0 1 (fontified t)) . -1085) (undo-tree-id763 . -1) (#("e" 0 1 (fontified t)) . -1086) (undo-tree-id764 . -1) (#(" " 0 1 (fontified t)) . -1087) (undo-tree-id765 . -1) 1088) nil (25596 36351 445710 815000) 0 nil])
([nil nil ((1084 . 1105)) nil (25596 36351 445706 557000) 0 nil])
([nil nil ((1105 . 1109)) nil (25596 36351 445705 735000) 0 nil])
([nil nil ((1109 . 1130)) nil (25596 36351 445704 613000) 0 nil])
([nil nil ((1140 . 1151) (#(" " 0 1 (fontified nil)) . 1136) (1135 . 1136) (1130 . 1140)) nil (25596 36351 445703 541000) 0 nil])
([nil nil ((1151 . 1153)) nil (25596 36351 445701 808000) 0 nil])
([nil nil ((1153 . 1174)) nil (25596 36351 445701 177000) 0 nil])
([nil nil ((1174 . 1188)) nil (25596 36351 445700 896000) 0 nil])
([nil nil ((1188 . 1209)) nil (25596 36351 445700 606000) 0 nil])
([nil nil ((1209 . 1214)) nil (25596 36351 445700 325000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -1213) (undo-tree-id761 . -1) 1214) nil (25596 36351 445699 594000) 0 nil])
([nil nil ((1213 . 1214)) nil (25596 36351 445698 201000) 0 nil])
([nil nil ((1214 . 1216)) nil (25596 36351 445697 830000) 0 nil])
([nil nil ((1216 . 1237)) nil (25596 36351 445696 979000) 0 nil])
([nil nil ((1237 . 1245)) nil (25596 36351 445695 957000) 0 nil])
([nil nil ((1245 . 1266)) nil (25596 36351 445694 985000) 0 nil])
([nil nil ((1266 . 1268)) nil (25596 36351 445694 73000) 0 nil])
([nil nil ((1268 . 1270)) nil (25596 36351 445693 51000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -1269) (undo-tree-id760 . -1) 1270) nil (25596 36351 445691 779000) 0 nil])
([nil nil ((1269 . 1271)) nil (25596 36351 445689 695000) 0 nil])
([nil nil ((1271 . 1273)) nil (25596 36351 445688 402000) 0 nil])
([nil nil ((1272 . 1286)) nil (25596 36351 445687 390000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . -1285) (undo-tree-id759 . -1) 1286) nil (25596 36351 445685 958000) 0 nil])
([nil nil ((1285 . 1286)) nil (25596 36351 445674 5000) 0 nil])
([nil current ((#(" " 0 1 (fontified nil)) . 1291) (1290 . 1291) (1287 . 1306)) nil (25596 36351 445669 46000) 0 nil])
nil
